{
  "openapi": "3.0.1",
  "info": {
    "title": "VSPC REST",
    "description": "",
    "version": "3.2"
  },
  "servers": [
    {
      "url": "https://localhost:5006/v3"
    }
  ],
  "paths": {
    "/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "OAuth 2.0 Authentication",
        "description": "Performs authentication using the OAuth 2.0 Authorization Framework.",
        "operationId": "OAuth2IssueToken",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "grant_type"
                ],
                "properties": {
                  "grant_type": {
                    "enum": [
                      "password",
                      "refresh_token",
                      "authorization_code",
                      "public_key",
                      "mfa",
                      "as"
                    ],
                    "type": "string",
                    "description": "Grant type according to RFC 6749.",
                    "example": "password"
                  },
                  "username": {
                    "type": "string",
                    "description": "User name.\n> Used with the `password` grant type.\n",
                    "nullable": true,
                    "example": "restv3vacadministrator"
                  },
                  "password": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string",
                    "description": "Password.\n> Used with the `password` grant type.\n",
                    "format": "password",
                    "nullable": true,
                    "example": "secretPassword"
                  },
                  "refresh_token": {
                    "type": "string",
                    "description": "Refresh token.\n> Used with the `refresh_token` and `as` grant type.\n",
                    "nullable": true,
                    "example": null
                  },
                  "mfa_token": {
                    "type": "string",
                    "description": "Multi-factor authentication token.\n> Used with the `mfa` grant type.\n",
                    "nullable": true,
                    "example": null
                  },
                  "mfa_code": {
                    "maxLength": 100,
                    "type": "string",
                    "description": "Multi-factor authentication code.\n> Used with the `mfa` grant type.\n",
                    "nullable": true,
                    "example": null
                  },
                  "code": {
                    "type": "string",
                    "description": "Authorization code.\n> Used with the `authorization_code` grant type.\n",
                    "nullable": true,
                    "example": null
                  },
                  "public_key": {
                    "type": "string",
                    "description": "Public key encoded in the Base64 format.\n> Used with the `public_key` grant type.\n",
                    "nullable": true,
                    "example": null
                  },
                  "userUid": {
                    "type": "string",
                    "description": "UID assigned to a user whose account must be used for authentication.\n> Used with the `as` grant type.\n",
                    "format": "uuid",
                    "nullable": true,
                    "example": null
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Result"
                },
                "example": {
  "access_token": null,
  "token_type": "intermediate",
  "refresh_token": null,
  "mfa_token": null,
  "encrypted_code": "eXur8276RM1qxf0PTHSRzQiab3yCHYZn/d29rQISC0mzdhy2A2MB4wNc9e5MbwiGld97/HutU3wQDraEx8k69RM56gnnBr9DyGAf/UwlBvhvG3/1GPzl9Yem9E8Z1gmdDsb2UXbFnj5xPCZo3kznASSTs627gJxHoDWYBQKAJsVCh3DfyPLDfNRj5EBSgbu3Is5l+DBjsvd5eF19umxluucmdk6GgFRJSSU8P+CErMWkOpKBUdKOyN4fbBNLaJQg3F4yinned9epozDnF1BSUfdjbddj5dC2DEh482DR3UGJ9fT6XX92q8lLJtFoNTz9gXpiiWKdEWE29WIXMcrnCQ==",
  "expires_in": 30
}
              }
            }
          },
          "400": {
            "description": "Invalid data input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OAuth2Error"
                }
              }
            }
          }
        },
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/keys/rsa": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Obtain RSA Keys",
        "description": "Issues an RSA key pair.\n> You can specify the key size if needed.\n",
        "operationId": "GenerateNewRsaKeyPair",
        "parameters": [
          {
            "name": "keySize",
            "in": "query",
            "description": "Number of bits in a key.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "RSA key pair in the .NET XML format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/RsaKeyPair"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "privateKey": "<RSAKeyValue><Modulus>rNh59S52I1xHUie+OwxohZKvKGq2Q5UsH7qIV8I5M1ceizRmR4a9P2cqx7nY/GxR+wOx9A0Xz+ZDmDk2rM5vcU6Josl4j9Kw8+jujXeZ8/9IIl4aQKU3dc71ENeRU2AilwkhAEp1vAtoBL4bzpPBI0/qmmyJNSmlCh3v3J2z9oI04qZwDh1SGdBbpElWMmQ5ZzMooxUz8j1e51b4eQfmpZY3L0pp2rXj6laFfclEbfYzRAEeB0IKA6RD/RuRGGnz5SH5855mwGBXVui6GGUp7ajhRUE2iowq7hghVQ/OpmoTo9qGN1QhZW6JqTvA/xXPlNHz5PdcY8hCvKQ8HyxBJQ==</Modulus><Exponent>AQAB</Exponent><P>x9zQbHCv5DCvODhvQg6dbkNa2o5AmBjohdy84gBb7R4+22PuP83KGOpZ7woYCY+uZfRYrLM/R9gHHW/IRdyh+byutujjhJIDx8LzJ4bVZRl+bD/DzTtC1gnGvotuavUNpR1BLjpIM8IO5NiWvYc6KZS6bo5Gukq+511rBAGzooU=</P><Q>3WT/4vjXoc2ILx/C6uHa4zEA55Vhe7siMq+98kAj9S4z9wyNDeTBry/0ujcmKEfpJ/7/xWuYV/dIhT5QiFzOY18Z4Hk92x4EXA3JQSVuKFaNECpFt0MpSPkQyg7xviytSsEjHZgkx+ZVnJ1eMyfb58I0ctDzkv7FfFMPfnwfdiE=</Q><DP>kO1DSc8xDLRs6sSpkOoOKN24rRFIL8KoIiGd6fg+sKQlCmvdYPD2IrkVe+wC4DQLT60u/BSCx7MT/bmILXi/D9xNiR85lHFZQmrQbZItfcFN1msqrdDSN2khcByldfO68EdVc5MZtkZ7DGEudcLwXySVSAPtr7rx0c4BAwfE3g0=</DP><DQ>VCdC+LRbyn4EiN0KyxtEh10mGeD3J//utNOGYOGuiVChogNcTm6ojH2vCWVTFLaY0oIkGJeYVb+CCluwYtTcAnuwq1mKgJJ9V7xJxoCCycR0ZDOdQla+B6XckuFxVDdJO4QEZAhj2rQb0Kckmk9JUGPKaeYw36wFxwcPeaWWk+E=</DQ><InverseQ>dEMfltD9w0bSm5+cUFuQlBBKgZxHzLm9Y/q9MBa3nwdIdVA/g5ojtePP88qEDMzq5oMqXvP/38xEPlszyeBGjuVLmvxWKExVpwFgeEPBM9LBYNGuYcGDGgINB8h9TNvQK6jujPS0anWqKv+h3LCbY6KTcIhIwELpcsXzcTAHegE=</InverseQ><D>AeL1da7PqB/ZARq0UA5QbpuZLLqTLgIX9cf2gz2Az1w6jWZykJuvuUb0Nap/x8ms0Ida0BmiBI2UVdxKrDLAKGjcfZ8nKbRxBsSCCrlHpoNx0CFIpSvSE/8emfHXmILSl/ZUwzKRIBuPTBsnkC1W2ItoLM5ZxAkqPqOsk8yNdJ4SgjAeQv4oCdATH3mwgiR5JOwWhHZNo4Y09+xHkHZUQ43OhraRGEJmVYw60MXjW5lOXGKIhJzZZiQfmXkF2/ycpkzLcYrH7Wgox2jg23/M4mItDsEDwQlK+ZxzopJnhU3xVrFtT4FEKyH2amJUGcXVPiiD+oXymLO+YKWgAh03IQ==</D></RSAKeyValue>",
  "publicKey": "<RSAKeyValue><Modulus>rNh59S52I1xHUie+OwxohZKvKGq2Q5UsH7qIV8I5M1ceizRmR4a9P2cqx7nY/GxR+wOx9A0Xz+ZDmDk2rM5vcU6Josl4j9Kw8+jujXeZ8/9IIl4aQKU3dc71ENeRU2AilwkhAEp1vAtoBL4bzpPBI0/qmmyJNSmlCh3v3J2z9oI04qZwDh1SGdBbpElWMmQ5ZzMooxUz8j1e51b4eQfmpZY3L0pp2rXj6laFfclEbfYzRAEeB0IKA6RD/RuRGGnz5SH5855mwGBXVui6GGUp7ajhRUE2iowq7hghVQ/OpmoTo9qGN1QhZW6JqTvA/xXPlNHz5PdcY8hCvKQ8HyxBJQ==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>"
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/keys/rsa-pkcs12": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Issues a PKCS#12 container with an RSA private key and an X.509 certificate.",
        "operationId": "GenerateNewPkcs12KeyPair",
        "parameters": [
          {
            "name": "keySize",
            "in": "query",
            "description": "RSA key size.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "subject",
            "in": "query",
            "description": "Certificate subject.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "Certificate password.",
            "schema": {
              "type": "string",
              "format": "password",
              "nullable": true
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "Pair of PKCS#12 containers with private and public keys in the Base64 format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/RsaKeyPair"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "privateKey": "MIIJ6gIBAzCCCaYGCSqGSIb3DQEHAaCCCZcEggmTMIIJjzCCBdgGCSqSSIb3DQEHAaCCBckEggXFMIIFwTCCBb0GCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAgr8R9mK/gmOQICB9AEggTY5g2BLNnXBX2hA9c4nQafB3kY1L0KyC7Fpo5fJO38yoNmCyZb/wxjzX3EoPkUSoCbpA5s+Xp8s3JzVJw1OTTvGb8JeMjyyOmwFRBsnygIAfETgvHi/28LhDk2T9oHcf4qrqRewlssrQscoRRoET/J9iiCvmfHCVrP/siZ9chYrTK4gMrylw/NZDlRYNkcWPOEGSCUPYnsMIykJCc8YIXj2YoxOFGLRUpWZ2NM1cR3zaU/Otw+GXb5iSvHQfjqBedJjaIu3snJqlHMTQBfWTLS6Dd+OOCPTGdz6OqKWPouo523bRmbhgsKgxe0sjok5UeMHNw04CXrTZ1XTxsdtGqY/SXEG0fuClkzmVNZAh2oW3SzLzgseP5UFTfFhuko5YtsRyM90B//ZSEiVkRxw41YNzjhLkCVBBQpXDLjXjWCKEO4J4FoL+ilIaLPjiQaP3Y/iEhFNZnL6CG+SqR7lHQTZVJZ5RokytEd39R74GpGHGKfws3WI82Qc30lFHtobHOMYJgh6nWyABLKuiv7S2BAAR43msKltpY0RKxjZVYOpxoG4AwKK2e4TjiWcgOKqurTkKIS/nhv+28f4308zimOLpaLr+7EkVCK5MRJWHew3RXddW7aeyl6+TVJwOwHJdUqKmIhdfQGhqZD5n8TvfD2cU9bAvtUgG+p76dn9mHS/jCxkfPS69QABAjwTz9NfhjXHypIYBtECdosqS6w3zoWw66xcRUvWuEZDqABn1uF6zjBCeaT7kmBbIRgR9/rWO9T0EOZ5IqJDsjPcGZVJNCnE5aKRZyjTGPF9Z9i1s0YQHauIWi2IW5MORiVHQPmtEz6g4puLPEcYEPAqVR9WAMgsORV8px8acV7LXJ2ntFku6srZKPlZfS9dXoa1ExORcLyzFosLH2JaGVAd1LSFJdi4ONcGQl3QAuucK2cz5N5XszQyN1HgleF4/MOLqWDGiSUIHkGgXx0cinInsiUfkmnvB1FUgtyLU8nNv4JHbHEhPAvz+mA3Odoe3yW1FL5oiZzGOiUxFnzDo1XpQb2k9TsYzERqeU5lt4hB8hVdS2hrT3u5c5kem9zP9F8kF02M813IxPBUf3BjMgAFLb0HnlSZFeFCIKyRoHVazaXXnya8+S4jp2S+6J0KNJT2tl2l+UvYUe0Zjr0U5f6+7jfWa+HE4Hi/wQh+l2e+9q1YLZfnsurFjdXTQk088/RwPnDk3CFFS02UlifkhNWyb2rmxGbuh8PkzaTcmjFSJlxgCfeKJ1eBgwhYl8nQYcDYxaNo+ZthI/qVB8/xgoTRFpcc+CFA7OOLILIwCGr/dNw+c14+n3FpXgd/OT9ovdsWJPD0XcAvbHuBOCdzXL9E9sHUq2e4peukFFrCbE4lxnMy/xI7ho5ALe4OwIZ+zg4RIZ8cJOSZ2kcUxAYZXZFm9SGNAEYA9JNaMBOhjSYDAZqA8bj9IdN8UV0ZbFJ/3h8ROaG9STfGbk1IrsLd9eNcC1aExXxOIIiGERjeuqcmjdsp65+1fEsK3mZ/JBi6Z29aahXDFO4wUz37ZmpAjJ1jfrVYHJ/Kr2gfvS1FELjV+/2+MbKwMJdfbKjOT3c+ttcLblMQEZON/2eOj/AOFKqej7JdjPINkOhT7RlNNijYjMP6UNea9d1KE74sWyIQTGBqzATBgkqhkiG9w0BCRUxBgQEAQAAADAZBgkqhkiG9w0BCRQxDB4KAE4AWABBAEcAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA68GCSqGSIb3DQEHBqCCA6AwggOcAgEAMIIDlQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQI9nQ8/y/aiDYCAgfQgIIDaH8qSuAMW4yMGEUPE5/8fttAlfzU5wtA4C2bHqQ26WUsjShgDM91nn9u0i7QuQkpb58CcQlqorNuMRcPDJVqPP5L2TAUwhQ7xx1yV5VZxRr/inlnm+5FGSfjbkA0uHjF4lkJ7BmfSKAy3ummt0jaH1XZgedXHCE2p2qXOu90fKE6T6upDax65lYus1pqQXa38ml9KrcxjeQnU18yXO/LHqKfVH+lC2Ymstwj2gUe8lxUswiNJKjpEpicL5bZr3cVc2FR0DjQnbTTSdfFjvZwAnLgtsAd3w9jJWAARgyULCujhJFN7hgO0ugSdYpLno/LOSVHlislj+CxBPwwXuBjpjGwOYMCMJYZL/L+7Diht6yvSJNrzdUITLkwEFzR8qEPojws0vxPiHoPu4+Xwq8rv9j9DuRsEbZijBnUni0ioTMi8tBKDKbczv9w574Zb5ZMzLCokvblHmBr2clmGPPJjvGzOjIpssiIw+qbpfHhNMXINX+xm9HdfqPnzqUnl/8hN/s6mPmGFr3cxho2s2DJndRpaCZgBblBrsqlOIhGMR5sFqWsBwNJPlRPHlWAR+jZKvzo/OZss7xDhH+aKKmJNtrciW7gPDvnbclBNrYkbnRo87yMHC7nc5YsY7ZDi8RSOvUJixWvjDcLqVssBc4+76f0e29yU2InCVQAaGLmP29H2ikPaJajov5GnggCeOGepBlrP0kkHApoyeg41CD6x4JFqzC0pHwQvuid1mzPkn1wIgumJgGEaIOAIJGEXAFPgJj6CcBe/uV54JRjMwVo535YhF3zmHCJHwKoX08ZqvJNiTTd2NeGYWoz6r0NnKrLxb1KZ6f4eSbSlRpPF+JwX5hAL0Fg9Qb1LVTaV+BicrqIRGGYA8gj6dO1v3c9GYLJlQmLswDjXiBVf1d/61uAPuoRmf+vjIwQskAbqEuYx0xSCCt1ZyzKkZZQ723qJImSndW5O6TPc/rxf6TGe0idp902lvXkf65I5+56pRtrR2xhuaDuKdW68KgbvMqPxGPXq2iF/UFZ6Xe2sgbRcYC/oY4sdMx4M5+7ZKqM7M8HHSBnqVI9jeyzF38E+MMnuzwMuSee+6YQB4WTEUztNhoS0Mf2I1FXERdi2Owl5acuSsEIMUIF8VJx2Ux0dEVUi+sBUqEB4wMe9y8aMDswHzAHBgUrDgMCGgQURv7fhS9vPPI+Gxy1zt+m6xpEBwkEFHnunfTkwp7ujwlWYXLcoYVnLdT8AgIH0A==",
  "publicKey": "MIIDFDCCAfygAwIBAgIQd4rF0g27VEuMo1hvkNq1AjANBgkqhkiG9w0BAQsFASBLMRcwFQYDVQQDDA5WZWVhbSBTb2Z0d2FyZTEXMBUGA1UECgwOVmVlYW0gU29mdHdhcmUxFzAVBgNVBAsMDlZlZWFtIFNvZnR3YXJlMB4XDTIxMDgyMDE2NDc0OFoXDTQ5MDEwNTE2NDc0OFowGTEXMBUGA1UEAwwOVmVlYW0gc29mdHdhcmUwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDFaJIwuTrQq6qiJMY4vww4Olfy8UJuOfBUnvLHoXvAy6LlYO1DeUMJXO5Cm1/+Qg+V6+N6kFdDKh79Op4yrlWeOISPVUuEWO9Ox7KDWSF+92EwAaYK7ezwKgDgSWUUTd0F0rbqzGNFIPIKaAlLxbGA0V8BmUhUjDiPPita7IGtqqKotdyKqEhGWtJUM6oEghHQb+BZCSrLpg+17evBvXqbTVi8vahZ4+L10p2k+7IWt6yeZ14s4vVGwMLICQ+eLSprGDIX00e+8zliWHwYQMOLJG8abehvj/i1kWALbsB0iix1a8D8vljyRHnerpLA/jHnYGPiLqEK3Tzx1ur7pbTFAgMBAAGjJjAkMBIGA1UdEwEB/wQIMAYBAf8CAf8wDgYDVR0PAQH/BAQDAgK8MA0GCSqGSIb3DQEBCwUAA4IBAQC+o+apWXYM+Syb5RYtNkNkQb1LPA5FhGDzw4Zvs/rWkSyA8n5r6quumF8Z4EowVcJFrBxEjxdseGkbpKCKPdhkHp9Sn+jpMMDs7DFyOpzamEKTXUCNDr6OKp0pnrL6cy90o46oFHICJcwGCmUFlbJvllYu7P/abulZmgHFh8LkIs5yJeSAzAI17hvlvLd5HrdC59Q4mL59hnzLkVeXECa/a2uJMYowGShat58MekCudH+P4V8Kpxml7HLdtTePrBuTa7nHEt6OJlDbwZRubpF0CkL4ZSOAshD3+fUlsI2Dngnwasr/2DizMEWXjF0UuSqAv4Uq08TKk9uU40CzI4Kj"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/keys/rsa-pkcs12/decrypt": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Decrypts an encrypted PKCS#12 container.\n> If container does not include private key the server will return an error with the `1210` code.\n",
        "operationId": "DecryptPkcs12Container",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "certificateContent"
                ],
                "properties": {
                  "certificateContent": {
                    "type": "string",
                    "description": "Certificate content."
                  },
                  "password": {
                    "type": "string",
                    "description": "Certificate password.",
                    "format": "password",
                    "nullable": true
                  }
                }
              },
              "example": {
  "certificateContent": "MIIKYAIBAzCCChwGCSqGSIb3DQEHAaCBCg0EggoJMIIKBTCCBe4GCSqGSIb3DQEHAaCCBd8EggXbMIIF1zCCBdMGCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZIhvcNAQwBAzAOBAj3chebjYx/VAICB9AEggTIMzpTXLNHDZ7FlyHthKD07ovfgMZToh/1q6m74415Rs27bmuMIN1JovuD914vr/rZpmx9dGdLBCv3TfEDmA53qcB6+ZXffRwCyDl4kX9VJaT3QAt3PJE3TBPm+W0WjmlJ6VOvwqPtLABcMLX5O5cmI0LcdWeAreSDYWtPHZT5mb/+mfAO1caqhU7/Kkxm5YVDI4Fve0OE0KGYV47md5aRsC4TXEcUUMIiRRpfY3CwNuJLzUVDyWKJlFs72RfeJBgspZ6aj5nV1OuTKLee7JYE9MT/zWwGN7bKPjOOUlUNdHV1VLZ0mVBI1UB8mkhgGpPaEVXM973i95ZF9XYz3LLrsVp/h/gxaoIXhtZI972DNWsV7k9MY/CSbblPt0+3xlWzCJCzqqW3IcswmGInTWRQPehMKZWvxMJWdOY6nP3G64YyF3emLZ6t3f4Kf61ppxxdvKpqeheaundmuShlKs39SmNfRUe/hAQ6FUegxOmp+LcdaZokvDaVFvQ9TuzXJA8KBoPms6mWg4rGoNjUkk4VwdIUJ0vJBTpsANFDvcVOFWr5Dh5BpHtw5QUt0bFcT3hhUNC4HLFic9YZmuZ7D1SosqF9xv1aj1Olqa4R5ssFQckh8dFxu+9pKyfhOH0/5KwtvhP/daY9v/WNcEWX3W1xwawK46V6ait6TPDpRg8AZJ/GeM0cin1HddEXVjy5ef+OtUQ+/la8bRd+Wtt2WcDeEduQFN5SVzjnmp6vWGRWYUVLS0EhRpzTZrce2O/7V4t187rjCaboUdfXQtnH9dCsIj78UE8sK6GnztWc3m/tIpz7L6yH7OTAipqkUFm4Hz0YIv/sF2jApHsVXJiuqDACqklTZRc6NtXHMXrXO7Ci/Lza5iGLmUwKn1MS2+j4Falu62V8CUZeqj3aGmUY7RuUolqbPnyeEzw4GjWjU0f++pFgU/Wte7h0yLmHIia12FZIvjlgsQT4WsAbsK1l6Wg31po7e8FWCREPokeImphmTnTvFFYshphxXNHReiqP/A1ta7tvP21uVf8YNuNd9zHiI8WVrhpfF+ZjK/NHRWWukdnVkWsasLUJ8Ut9igDeySmf0fixBij7T69xn59wWjUM+ZoT3WyhCUW4EpOw3TDIE1aAdGXUKJQPAmIv505HJugmGJP/py79DZpzP9aU9u7/vmnlBTlSFvWdb1XBo6FpmG1HBKR0JeU6ISnACDGWtxdSpVl5aKtC0a3K5iH2nOfH7ZtuCPOhs+kd3NebP9RwHtN3lluGPIQMuFDRJzMyA1iF/SV1b02RqD6ex+tLm5En/ouvxOaoxAjSyeMDgzhUfDeyWckPHXq72Kn3jZdVD+S9tttALPBw1DgqeLAJWKm/KMPEC3U7Vn0VWKdgV92uOisXNzuAJNKSOcKI5FsgAvRI+lgbEDoBL22jYfllcxr1u8/SS0YBFQwUL7qFAlklSHD6yqjBXoPfSO9Gu9uMtzGBpPec9a17QtM6e/cFSyYfavs0RzSMdANEWeU1yqfohJDCvZ7U9KcH0GVgwuUIDJI6SPtuEX3wArLhGvAMLquJyUy7ePTwQLIt/z+kSd5KCGOKoSm5TLeu7ca3kbo7fCX1x1fzFLppTKqRbe7Hlk77F6Holte2qCILMYHRMBMGCSqGSIb3DQEJFTEGBAQBAAAAMFsGCSqGSIb3DQEJFDFOHkwAewAyAEIAOAAwADEARgA0AEUALQBCADcAMQAzAC0ANAAxAEUAOQAtAEEAQwBGADAALQBDAEQARgAyAEYAOQA4ADUANQA3ADkANQB9MF0GCSsGAQQBgjcRATFQHk4ATQBpAGMAcgBvAHMAbwBmAHQAIABTAG8AZgB0AHcAYQByAGUAIABLAGUAeQAgAFMAdABvAHIAYQBnAGUAIABQAHIAbwB2AGkAZABlAHIwggQPBgkqhkiG9w0BBwagggQAMIID/AIBADCCA/UGCSqGSIb3DQEHATAcBgoqhkiG9w0BDAEDMA4ECB2ooQPsdKUbAgIH0ICCA8gn6Oj/DGQula9kV6Km/o7QqH18fW5K28CKNHAhld97ucIWEGukC4yMI0Vob+76yYZI6QhyesKjcxhwemcDBkPyLooWEEO0AJas6Bs7SGRuOgwdqKvZ7JTY/v9H2XYDUu8v+e8Ahr/XuSeWHOjYFFwTg2LD2tRnKW313nJKxDe7YBbfjaByiEJHSSqfA947dTuhwRbgUl+D1wdAD8tfn5rzIr/uOgqPR2vMF2yFESGZ4w5JVgR8d9/7IVHkLqk4WIBR6wbCNRLvPmfbM6Vw803+8yUNB3nw+5+5sad3TiHyBgjMPspbwBHJBXwc0iqBKC9DiLFPiXuCp3cg2/x0oF8kK3uhWEuB3KQMbE7FNmM89MdVJ1XCiH/K1Ywa7E4+tgaUQ8UMGeBFxkjU1dj86NjosnUqunbhCreVHWJUxVN48fU0AGGvN3QYu0YZFsX6GMOE8wBuiTtfX/vfWcPHmYEy0JuOQ0FD99tNpgx4EfcGMGAqXGF8r+V5+KUkw5NqSbLXREn43m/FFwg+4y6m5p5wWPvGDCTc8VyPoFekSU1d2ZCqoBnRXT0gRgLvu5P+/5fnxLWPJDZhEytzG2MTilGYPLcqChX/FrAgvtPrOIJRmb1JMPqNb6InOEK5qmyXy4S+XaofPLXSpLqriX/XI9+ZtdSfgZi4vjFad1kpLIfAHp81wRI++wt2e0jg2hHTf46AKPFjHj6sOo6rXAuBDCy6Z8iWgW+Y1OcbsttNHC+i76Hw0BzFGaPnN6Vl0IlhE9v5CpHjY0cDBbrkTqIlYGhVHT0ax6miYlkaEfB8rUfq6mvfaMGFP2kiYVTmooH6mC0g5LrFDni964aLq9jtbKny2Pu4LmRGu/2KCHyQX13jqHmADMLUVMJT+aLkAoetWaXA8EpyEmY1KMb1YnUYX+ncOwU5TEg2UE/rsm66RCSHjgH3uRl5h13C8GJOYE69+HJUlXh5q6Dt7DlkOzVkP2pLpmhQUJ/iUai0SlLKLIeAmHwtG64IVHRxPfk2iTKugxlLGHKKJzVcJLm/t/cgbkPe1WYQmWt22xBVye47fogxWtXiC6pk3szo+7POTJgAhfCss9ivDepIlgFuB84YY/AglDTelOtu5h0+KIjzXalAB5HTHR5+Qy/uii5kJbsuswC3a3YIcXO88sFrhDifsrMn50pXr2CcngSaCE/hSg8ovSDYC9H8OIdKV1/jK5y1+QXUxU9rPfO2yyD1EjscQSYDC/I9xxsb54oFVLa1ePw0siNNgdz+1srXGIydiXkY8T8FWHV89sIXYjA7MB8wBwYFKw4DAhoEFE8ZVx098eg2MDoxSCBf7wJtEmetBBQOrBr5Z7pu8R1BrCoBaY38muBlqwICB9A=",
  "password": "321"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Pair of PKCS#12 containers with private and public keys in the Base64 format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/RsaKeyPair"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "privateKey": "MIIKAgIBAzCCCb4GCSqGSIb3DQEHAaCBCa8EggmrMIIJpzCCBZAGCSqGSIb3DQEHAaCCBYEEggV9MIIFeTCCBXUGCyqGSIb3DQEMCgECoIIE7jCCBOowHAYKKoZIhvcNAQwBAzAOBAjxdYUOiM+vJgICB9AEggTIfkwrG8B9Va7LMn+I9gqVGsKElySoffUcBllDiYRqlR6Di9v4WNgfo5ZeQm0JU5MMjFdDlQkUh5BY3MLN51g4GXTHRO8/W1QvAbRjfd+6WJ1mOMRZTbbbvszUFEofvmZaMPjNYLw2GhPqSnwZ98eWQhQAYRamoGgyKmKGEfAOWZEtbo855HcnJVq0dv6lqDWEZe3WJy1lvA5QjE2VIev55I0D2qUiwaLQ+sVVLo++rrw5pNik5PAsBwtv+V+RaSUAurfeFFh7Whs6gveh5Txtb4TIZHmKiRsYhtHdAkT6IUEzD4W2Nyo6hN3C53k4ut6l7Sgr3Kywix1rIC7w3TOy/Vm4ehPBgiS8oLSVl4XKAMgYS2bLW/hHp/KZeEQ72Q2De5m1a87Mx3+qo5UlKt7OfUE+WIP6giPTsIJ3smGBSq4lywxtAeOVb2NuqU7iIIqoZxM16Ik+2sLr+hyiHxjCwdtTVdGjWE9pxgv9ZFVab783SSjRi1Ux1NZk+6Pms9qdMbl3Y5ZcW0+5uZKNjLgCykWqEAOZ5qkqCo9wev2j/at/bVNCwsA+AS4i+1si1h//8vxpvQ0aincO3o0tNQx7ef+kk62cmnIddTUtL2oZ+OZjVguirIz6Fu11EtXcnLZbv48Eq7tRcJ/t59HBmn14hBJ5u97JSaGUoarOiYjVChwQk9IaViaXLpL/TMFR0PVTGctz8plMsQgEuuFEl3MsIbuVy80DxDN2K68VzvH5umjre/8/OPhL31dtcK/ToKZs54b/8oLnnnPajmArjO8QLuIn9Wcjn7UlBSuvsSqTG9KfP+zo6pOCTMxIh1sXWIImGYAZdKRyvsR1jD7De6IQOqYzjRjnpCs7mT9sGxr5BLMOZ9Il87aBIrdVt0PR9CLrCgNOWY9u7S7AQ0o4H/zVRnTE7BDZA461lcOPxAepAIJw8k253uo6Kw/U6L3hKzIP5XB7GTzPrlUkraryvpuqpUbdsRDE9XC6R9H/SHTOvBU3m7TuSUa4C+JTx837+hnAdZgA66Kc/3+1MxXASL1VQu07xEFBZIuEvEPgcU0cYqGr2owOanirMCHD9IGpbQje89aFqN+zpdsDC4G1WLJeRhcUk/EeUauQYieXgWWAUzMbfOVoPzV4KBEwEnJ9ECj1Hy71QOeGPePUFwdualzz9xDR2IzlE9PbuH30JrRKVTD9EE9yMRzPb1dYQaUymcCVPnlegUkVlRqDJPGyF4pRKU/lyUsdkak8POUMV4b8pq31VGG4xbe27YZekRggHJxKWDKK4xQFH1GHTQKOXUA9rRLD6OtEjIlKm2Nk3jMGBVqRjTg8DVz7gpO8I8yE/HBYpWEH2ldKgTidmyj6mr8g15kxGULfhUQWYk9I1Y3hEKz+BOsUvR2L+ik+UKfpmNoEpADC+ECWGsrckc36rsxkiLvwNskCUbwmHqEhKf/7MJqwbVgUl81nCGSb/zfRSaZoDPuDhAl7ZsFiXHy6oF4sw/qCsGPJgZOZz22mOwDeKSEJX4s5tIXXGwJr+gSl/jynxsgGskjf+PtDGIoxTIq3mEma+RjhjiOJuzBkiEQMfhjvrW+PAcbBnHK2eEu4iHTnqzAVi4vwuTh9pSVVnhsY+G9pszxPPDZEMXQwEwYJKoZIhvcNAQkVMQYEBAEAAAAwXQYJKwYBBAGCNxEBMVAeTgBNAGkAYwByAG8AcwBvAGYAdAAgAFMAbwBmAHQAdwBhAHIAZQAgAEsAZQB5ACAAUwB0AG8AcgBhAGcAZQAgAFAAcgBvAHYAaQBkAGUAcjCCBA8GCSqGSIb3DQEHBqCCBAAwggP8AgEAMIID9QYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQItxDZX7s6y0MCAgfQgIIDyMSjjmwf8lshEeWZyyb2JgnJTTC4owYbLUUzdPCoDDgcHF7N+DM6gvLUxNG5XvY5PeM6chnwcb7EayggO9SrB9pPce4CG+1n7CxsSqSWAEve5pxlcdpVuUaHc+ePEwn/vvwVKbaC/c8tJYuAZVdfz3ArRNEdKyo2eWEYOke0xpN7xevM8xVsFeW39Vahfx7n00CdPJuCrXpaP2ZuDVUULyEsXKC44KpirrahaYGqXhcEfZAoXU2GK0OPaaHF6WSEGZAC4iL3jW6SgoJ+t3+wwQJp1RIcl4UuKd8nKgUJZWqtZ9W6d20/VbxUOxa1pCYrh0S5KxYIXTUbCTbecqMbSPTf/kgf1RLSjOEpGEqCN/cNpouXwQdxAtEjJhQzzjZwEJOobnNnvwP6qotuiXQNdFnvcrE6dumZkz+wFtxrMHrUOweYO0Fnex//dfrXK1ZX1kDLDI8508Ovv1C8HnzewQSdYCyzMSlKTSK+00kxr8GKpp4OODESMAgO9hDApqmBzr2d3iuRffFYFyQRI/bwzm3dE+wLYsz1B294rdvMkwYuC4JD8zIXlNIWBcqGzFoLvnrMDrn8lVuxnszU/uXrUlV+uc66W/Cz3kq23f9ZREfmncDGgGpTWjYLYwKK0zSXi7nD81kP8fANgnL980BDh7eNhOQ+XgzpjkA4e0mSwBpLE1BOFmlfB+OZhWjvVeFb7Rc0r75eMxAdrkuiffEM3Lw0pvIUwtPL/GjqI+eZwxWdlrFLFaZPdB12bHFao3jmcXoa36VgR7lC3hegSKCH505U/zCmhF1HAmXmPducShzULrUFe0GMQXs0z5l/1dyRh6n5jBAFUM6CyN7lwScCfNjZJ41SEfAksK331451rgkpmHor6m2lkMS6FpL7mTO4wxzGInCwUr0X4g5Y94UC2Jl4L+Vm0/4td0FysujdvLVn88BbMhTy4wNTvvITq8tttq9odFS2kAre7Avc3nttfaYelyvzJWd05FaJulSlJhly9IZ1OxM2nMVbFpkCtwa8qjIH7uhv41ywPtkYXTbKblAKuN+qpnG2iakgDdIGoWHUa4rVBMP6n0BkM8wRzMRm9PSLHMu7JkxXoHekmo/XvPl+SdtaOcBAAYlgatehtRYr611YME4rK7Fgd8VIT1MxCCHnEOhH0/WorzAvlLE8SijBaCQY3iFuTecedWEm9fZLzX4Gp657uqzGmbjeYnVVHPjVXC4W/MjlxNuCIAtqKjmveF+lSiI0Hwiut5HjitnObpR7WikiBTwerU/Vzwiw1YTcjkWfcRKpMDswHzAHBgUrDgMCGgQUxUGCwN+XrV3tSCJ2zcq0IwgSuUMEFH0cb3sp2qezhC3mnr6tzS+xfiBzAgIH0A==",
  "publicKey": "MIIDDTCCAfWgAwIBAgIJAPl88D2jpxu8MA0GCSqGSIb3DQEBCwUAMSQxEjAQBgNVBAMTCWxvY2FsaG9zdDAeFw0yMDEyMTAxMjI2NDNaFw0yMTEyMTAxMjI2NDNaMBQxEjAQBgNVBAMTCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKlO60Y614UYDhk5bvsCSRPLdF0KUUqzgI3Ez0LOSyK5/jYNhMyJgRwlDZ1BcJ3FZaUiQdvF/Bletp7vR8i/iAbGU8vOn1Z8u7dUZlO3cf2gJkMzi7zcd+Kri2vWB+4cz3td+mDR7O2TgAU2o+hHb7U2hF6HUryK8jVHVuK1NsucZIvslR5RUVbwsv/wfO0O6NhVHnN2LuGrWGzK1FVwmNtx+53xpseA9DouYcVCuJLeodyHXeBw9YTU1jQxXiJ8mrjVZzm+J0msoiU+zNPQC+Vhmo7SaQlTr+y6jWkAJHy0mCR2G17tOu/CQUiA86NWjBb4bRTLfY2ymhpJqiDXsqkCAwEAAaNiMGAwDAYDVR0TAQH/BAIwADAOBgNVHQ8BAf8EBAMCBaAwFgYDVR0lAQH/BAwwCgYIKwYBBQUHAwEwFwYDVR0RAQH/BA0wC4IJbG9jYWxob3N0MA8GCisGAQQBgjdUAQEEAQIwDQYJKoZIhvcNAQELBQADggEBAKXPEbaGb8dbmg8zglBWHZyjIHOeulgZ0UiZ2XbTqlhUeMvFgag7L7QblE+/1ZzXLpio3xaXmR334wU2NqEjXDC68mTO+pP3uj5spylOpLzZoXAGJB1q3n+DBmoY9UpzryrIuOfPiI1tN3BvRrVwMTSPy1boJB7LskM22F9+6RILtWyLwmMSqbOTtyrB/ELfScogVK3hefcT2aoL3V7+a2Xn5ISdePXS38jnaiByMrCnqs+eg6xUycvLRbg2NCKMYA6AWo0BZQAgaMfx7U4SOYzujtJ+IOxib+8qWl4vM3/+qQekQFsi4CP/zwngQAmG2FQI0tehzrro8gCH0xMfZ4s="
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/keys/totp-secret": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "summary": "Obtain TOTP Secret",
        "description": "Issues a TOTP secret and a URL-encoded secret for authenticate applications.",
        "operationId": "GenerateTotpSecret",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "TOTP secret and URL-encoded secret.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/TotpSecret"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "secret": "L6U256IPC24WNAG4IBCZMARJCHNZEXCI",
  "secretUrl": "otpauth://totp/VSPC%5cAdministrator?secret=L6U256IPC24WNAG4IBCZMARJCHNZEXCI&issuer=My%20Company%20Backup%20Portal"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/asymmetricalgorithm": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate Asymmetric Authentication Challenge",
        "description": "Generates a decryption challenge for the specified public key. The challenge must be decrypted in 30 seconds.\n> Operation is deprecated. We recommend to authorize using the `/users/{userUid}/logins/apikey` or `/token` endpoint.\n",
        "operationId": "AsymmetricAlgorithmChallenge",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Public key.",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/binary+base64": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AsymmetricAlgorithmChallenge"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "challenge": "dMuQko1HJ+WovoErFTMeC6Qp5i1rLyuVmZZoKIw/4fvbp2VZFka3sGdrfPtnYpnvU2YImRqT/CFdxMapdBsYn+cdG4925oWU7WaccQIJB/Re5ORwc7U8PhveuPZO24UvwK+/H5xThjvi1TtEJvVVYAnh3xsDJfX7mWLCKh4ILGSDnsIavH2iEu1J5Y9oavaK2Md5m/TE8Q3OSj5S0MGHaG4Z+S4PXMyRRn1cJwuRVSBRRPvfzVnI83+7x9Zdjb9pNcUbsS4Llikd+xrOzAzDapvdg9oKk2g1Yu7M/tyjy+vv+QH10b8odb79zdjFI7DM+3SEh5lpATxUp+oLAsJwOQ==",
  "expirationTime": "2021-02-16T16:30:09.4952609+01:00"
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Authentication"
        ],
        "summary": "Obtain Tokens for Decrypted Challenge",
        "description": "Issues access and refresh tokens in response to a decrypted challenge.\n> Operation is deprecated. We recommend to authorize using the `/token` endpoint.\n",
        "operationId": "AsymmetricAlgorithmCompleteChallenge",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Decrypted challenge.",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/binary+base64": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthenticationResult"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjA4MTB4MzMwIiwiZXhwIjoiMTYwODExOTEzMCIsInN1YiI6ImNhN2Y2ZmM4LTQzYWUtNGU1OS1iMWU5LTY2MTY4MjQwNDJlYSIsImp0aSI6ImE2NzliMjkyLTdkMzctNGMxYi05NzAxLWI2ZWViZjk2YmY3MCIsIm5hbWUiOiJSRVNUVjNWQUNcXEFkbWluaXN0cmF0b3IiLCJsaWQiOiI2IiwidWlkIjoiNSIsInRzIjoiMGNmNzgyZDgtMWI5Yy00ZDBjLTg1ZTctZGFjY2FmMzJiZTMzIiwic2NvcGUiOiIyIiwia2luZCI6IjIifQ.VcL49VnECFucm6NT2EZ6uuhn5p99iDyEcWnjTEvohMb90i7hv3zQ7qOtzoK9urNReqr_5Ne_erg-yp8XlTEJcISSn2LrygMMbxoPdAEjUfe_Xk12dxMHSz8PuaonDFqWFkb9KMzlOz-EVVS7L1C11WEbILshQVSlfQ3mOU2tZWMNGjBgUieE4OFrMg9_2mn360057Z_r5E1kbEumC8U_n52PoN2aPDoCeQ2t5CDDihPg0yLYQd30sujhec7bBTRZSFE806WaevP16P7z5AYaGT5-25hdV7DgOgIJ4NPw56-eV7RXah34RCHYyS0ibnteUShg8k-V5hckCzk8jPTOzg",
  "refreshToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjA4MTB4MzMwIiwiZXhwIjoiMTYwODI4MTEzMCIsInN1YiI6ImNhN2Y2ZmM4LTQzYWUtNGU1OS1iMWU5LTY2MTY4MjQwNDJlYSIsImp0aSI6IjExZjZiOGFhLWVjZjctNGZmZC1hNjA2LWI5ZmJiM2MwYmJjOCIsIm5hbWUiOiJSRVNUVjNWQUNcXEFkbWluaXN0cmF0b3IiLCJsaWQiOiI2IiwidWlkIjoiNSIsInRzIjoiMGNmNzgyZDgtMWI5Yy00ZDBjLTg1ZTctZGFjY2FmMzJiZTMzIiwic2NvcGUiOiIyIiwia2luZCI6IjEifQ.h0elv_6q4dinPg1AVqEQy43qIAwSd8H4Ly98HHZA2qWoEIQ4qoCoaYxFfYEFXTHG5G5sUF0w5PEoGutrRMHa6liXB_jMrm8K5D9I63uctCGnuC-1ViJqV4MhQfgUbzpWL1xQseaq4hxt8PgzNgvV8rsdPDxJ_6aGNj-oD8yk4mQ0ZwIccHXkU6Wc2Ynd73WsAyymP50E1Dn-IopELz3xjJem2fVcoh6dzjEG6IvPlyIbBEFSRx5BdRJiJ85tJDWWClO7UpX8129pHGosn29pF0bLKGqbCgJC-Hb9K4kdn7gPlOHO9m_81a7nCXXh3tY-gpjjFHODc2VpDcFkmB5blg",
  "mfaToken": null,
  "expirationTime": "2021-02-16T12:45:29.7615725+01:00"
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/usernamepassword": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate with User Name and Password",
        "description": "Issues access and refresh tokens for the specified username and password.\n> Operation is deprecated. We recommend to authorize using the `/token` endpoint.\n",
        "operationId": "UsernamePasswordAuthenticate",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "username",
                  "password"
                ],
                "properties": {
                  "username": {
                    "maxLength": 256,
                    "minLength": 1,
                    "pattern": "^[^@]+$",
                    "type": "string"
                  },
                  "password": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/AuthenticationResult"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjI5KzA3MDM1IiwiZXhwIjoiMTYyOTMxMDYzNSIsInN1YiI6Ijg3NWE0ZGY3LTZmOTctNDQ0Yi1iMjdjLWY4MmRiMDBjMWM1OCIsImp0aSI6IjQyYjJiZTRjLTQ1OTEtNDg5NS05NzI4LTg1ODFkYzNjOTI3NyIsIm5hbWUiOiJERy1DQzUtV0lOMTlcXEFkbWluaXN0cmF0b3IiLCJsaWQiOiIyIiwidWlkIjoiMSIsInRzIjoiYTg2YzU1NGUtYTE5NS00NzRjLTk1MDItYTM2ZDc4MTEyMzVlIiwic2NvcGUiOiIyIiwia2luZCI6IjIifQ.uao0qV1X0QF3t02Glo8MNF2ROxPXivRtBhrzNfRtGc29afLVAsEC74k7vcUBqc7iEULx6LovwR-sj3Q-TRfgB1SbFmeRYkRuLgzWe9ylPgF46f-BF46o-pYhTDsjRY9D2X9A9xK7zOydtNDmqyL_C2g8HW3GTfpSAHjpz1g0e0XlwjqhRnKL4k6RiU5zQwd7LoxYXR-OjT07MRJ05UtilCst6JYJE3tyGkgGHBQGVzU6Bl6g_bYTStXYwg1qO16fmr5kC9OuCiLIuHiujGqGodImWp-DhymD4sXEZLng54oEy6gKSPq-fS4v1apJ-pXGT5a1DJU4jm3D0v-MbRj7wQ",
    "refreshToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjI5KzA3MDM1IiwiZXhwIjoiMTYyOTQ3OTgzNSIsInN1YiI6Ijg3NWE0ZGY3LTZmOTctNDQ0Yi1iMjdjLWY4MmRiMDBjMWM1OCIsImp0aSI6IjVkMGQyMjE0LTNkNTMtNGU3Zi04OTc3LWM1ZGEzZDc4MjkwYSIsIm5hbWUiOiJERy1DQzUtV0lOMTlcXEFkbWluaXN0cmF0b3IiLCJsaWQiOiIyIiwidWlkIjoiMSIsInRzIjoiYTg2YzU1NGUtYTE5NS00NzRjLTk1MDItYTM2ZDc4MTEyMzVlIiwic2NvcGUiOiIyIiwia2luZCI6IjEifQ.mRTS-z0MCxFQfRnRCx3H1l_8jmC0Ka0GEXXJWj7fA9arU7aJNYGba3uMS1bA9NahHp5BXVke_L0t7Lg5S3MUWac2KSNj2pWNNohzGKwoxU3bj0JLB1JIOPNNYTb1t7fFDNwgydhsgdGbaPZhH_6eYjZI-IS3JRMgk0q9_ZAQk8kUwpz1z7-WUaG-W1fkE_tC-Zluz_XLxUZflmsxmLsd2QLqqOXLTOTQqauszGrJ7OJCIdZoBQGxabsC5loKNLGt78W9Puk-9SzElOGB1p5zZX3gAdW_yZamKYr0xBZo7-muNWLUprJRuQkwTfLe7EP8f2koNTUC6M63EStaK5E8sg",
    "mfaToken": null,
    "expirationTime": "2021-08-18T20:17:14.8842672+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/authentication/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Obtain New Pair of Tokens",
        "description": "Returns access and refresh tokens in response to refresh token.\n> Operation is deprecated. We recommend to authorize using the `/token` endpoint.\n",
        "operationId": "RefreshTokenAuthenticate",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AuthenticationResult"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjI5MDE1NjEyIiwiKXhwIjoiMTYyOTAyNjQxMiIsInN1YiI6ImI3NDQwYzIyLTVmYjktNDlkNy05ZDA2LTkzYmU2YzE1ZTBlNCIsImp0aSI6IjRmYTA3ZWVjLTQ1ZDQtNDViOC1hZDBiLWUzMzcwOGM1NzJkMyIsIm5hbWUiOiJSTEFCMlZBQ1xcQWRtaW5pc3RyYXRvciIsImxpZCI6IjYzIiwidWlkIjoiMCIsInRzIjoiMzVkOWJjNzctZmQwMS00ZDUyLTlhZGUtM2RiZTg1NDg5YjBjIiwic2NvcGUiOiIyIiwia2luZCI6IjIifQ.FKWcSbWWuAiRenedKy0AXyoASLRJYZZciWrtjdCnqRrHna0tT0TRShxsHvkSpiXfdSQZ1VLIQUbOTGS1pGP_DYfxP2Cwq7UtcYZXT1IDoZMnk9du1KMnKTF9tRmz7lbXV4-nSAOtkvLgHpvwhbD0kaa5ZSkKjZpvynrMsRO2b9n_vngEfcvmqN6KniJEbXKm6tmZxZEkt_45QISOlrC6poBiikWIkaKwE13RgzirrdWSvni3cnvC1U4HjPi3ZcSAjXvG00rywnOSxxaEhdfW21_0C_hr5KRzMkCOA5-3FIF-8QbU5iDPcDIv0hs2Glolz1qgxPur2lSj82i-0QU5dA",
  "refreshToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOiIxNjI5MDE1NjEyIiwiKXhwIjoiMTYyOTE4ODQxMiIsInN1YiI6ImI3NDQwYzIyLTVmYjktNDlkNy05ZDA2LTkzYmU2YzE1ZTBlNCIsImp0aSI6ImEyMmExODNiLTBkNDktNDIxOC1iM2NiLTA1ZmM5OTYwMDNhZCIsIm5hbWUiOiJSTEFCMlZBQ1xcQWRtaW5pc3RyYXRvciIsImxpZCI6IjYzIiwidWlkIjoiMCIsInRzIjoiMzVkOWJjNzctZmQwMS00ZDUyLTlhZGUtM2RiZTg1NDg5YjBjIiwic2NvcGUiOiIyIiwia2luZCI6IjEifQ.m7aVyzBoYJRbkWtfN0fwslqpzUVHVT__n5xO3SDiO18RZZDoggpd_VJkNi2HZaP76FJAJ9n81B6_Vf9OC5lxbvkU5R-oYAj0w4eWmY0SheUY2G2IKlP_reELKyfEMKtBA_nryk40UnF1zu95lpLK8-0iWbChROpQZzw2oRb7BhIJuUTodOA7--5DMSR0Kw85732ZJARGqMZXtI8LSSMyPlZjUzkyfadhzePPo2XK0tq8YKjNxkMNsQcehWYaIjcpFcjPAZhWvtqAa-5QSjDuXz2LRkI8yg4n3AgCBW-po70NRMAC2MNcmei9J8lSIvkhK-DtaVpvtD4N8QNvErKnmQ",
  "mfaToken": null,
  "expirationTime": "2021-08-15T13:20:11.7141763+02:00"
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "deprecated": true,
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/asyncActions/config": {
      "get": {
        "tags": [
          "AsyncActions"
        ],
        "summary": "Get Async Action Configuration",
        "description": "Returns a configuration of an async action service.",
        "operationId": "GetAsyncActionsConfig",
        "parameters": [
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AsyncActionsConfig"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resultRetentionTime": 300
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/asyncActions/{actionId}": {
      "get": {
        "tags": [
          "AsyncActions"
        ],
        "summary": "Get Async Action",
        "description": "Returns a resource representation of an async action with the specified UID.",
        "operationId": "GetAsyncActionInfo",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "description": "Async action UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AsyncActionInfo"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": "04f36ab7-efaa-4093-826f-0dd290ea5681",
  "initiatorUid": "1ef2903f-7e05-4864-8374-f6544adcb597",
  "actionName": "InstallBackupAgentOnDiscoveryComputer",
  "status": "running"
}
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "AsyncActions"
        ],
        "summary": "Cancel Async Action",
        "description": "Cancels an action with the specified UID.",
        "operationId": "CancelAsyncAction",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "description": "Async action UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/asyncActions/{actionId}/result": {
      "get": {
        "tags": [
          "AsyncActions"
        ],
        "summary": "Get Async Action Result",
        "description": "Returns a resource representation of results of an action with the specified UID.",
        "operationId": "GetAsyncActionResult",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "description": "Async action UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                },
                "example": {
  "name": "ServerEntireCloud_Custom",
  "description": "patched description",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "administrator",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "computerLevelOptions": {
        "includeUsbDrives": true
      },
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "cloudRepository": {
        "backupCacheSettings": null
      }
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "RestorePoints",
        "retentionCount": 7
      },
      "scheduleSetting": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": null,
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        },
        "backupWindow": null
      },
      "indexingSettings": {
        "indexingType": "Everything",
        "includedFolders": null,
        "excludedFolders": [
          "%ProgramFiles%",
          "%ProgramFiles(x86)%",
          "%ProgramW6432%",
          "%TEMP%",
          "%windir%"
        ]
      },
      "applicationAwareProcessingSettings": {
        "enabled": false,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": null,
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": null,
          "archivedLogsRetentionMode": "DoNotDeleteArchivedLogs",
          "backupLifeTimeHours": 24,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": false,
          "periodicallyBackupSetting": null
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "Disabled",
          "preFreezeScript": null,
          "postThawScript": null,
          "credentials": null
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Optimal",
        "storageOptimization": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": false,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "AsyncActions"
        ],
        "summary": "Delete Async Action Result",
        "description": "Deletes results of an action with the specified UID.",
        "operationId": "ClearAsyncActionResult",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "description": "Async action UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Current User",
        "description": "Returns a resource representation of a currently logged in user.",
        "operationId": "GetCurrentUser",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9388c2cf-b820-4c75-9e32-535de6c48b8f",
  "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
  "userName": "VSPC1\\Administrator",
  "status": "Enabled",
  "mfaPolicyStatus": "Disabled",
  "mfaPolicyConfigurationStatus": "NotConfigured",
  "role": "PortalAdministrator",
  "profile": {
    "firstName": "Stan",
    "lastName": "Smith",
    "title": "Mr",
    "email": "s.smith@mycompany.com",
    "address": null,
    "phone": "410 510 2317"
  },
  "credentials": {
    "userName": "VSPC1\\Administrator",
    "password": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/logins": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All User Identities",
        "description": "Returns a collection resource representation of all user identities.",
        "operationId": "GetLogins",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserLogin"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 44,
    "userUid": "5ccc20c1-f256-4e60-aa71-82cc5311f8e6",
    "userName": "Simon Cold",
    "companyId": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "companyName": "Alpha",
    "identityProviderName": "VSPC",
    "description": null,
    "isReadAccessOnly": false,
    "scopes": [
      "integration",
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "",
    "identifierInProvider": "owner",
    "creationDate": "2021-08-15T10:18:22.377924+02:00"
  },
  {
    "id": 22,
    "userUid": "b1c109f0-0a39-48de-8390-1ef700f69a03",
    "userName": "James Wheels",
    "companyId": "95db13b5-d291-4c0b-9324-698985243aa5",
    "companyName": "Beta",
    "identityProviderName": "VSPC",
    "description": null,
    "isReadAccessOnly": false,
    "scopes": [
      "integration",
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "",
    "identifierInProvider": "owner",
    "creationDate": "2021-08-15T09:45:20.1954249+02:00"
  },
  {
    "id": 47,
    "userUid": "e2e1c08b-76d8-49e5-91bd-0be0de3e884e",
    "userName": "Maria Lore",
    "companyId": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "companyName": "Gamma",
    "identityProviderName": "VSPC",
    "description": null,
    "isReadAccessOnly": false,
    "scopes": [
      "integration",
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "",
    "identifierInProvider": "administrator",
    "creationDate": "2021-08-15T10:18:48.2299786+02:00"
  },
  {
    "id": 67,
    "userUid": "3a0c1dcc-b53d-4e16-83ef-512f8bbfafcf",
    "userName": "Stan Smith",
    "companyId": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "companyName": "Gamma",
    "identityProviderName": "VSPC",
    "description": null,
    "isReadAccessOnly": false,
    "scopes": [
      "integration",
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "",
    "identifierInProvider": "operator",
    "creationDate": "2021-08-15T10:20:12.386015+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/{userUid}/logins": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Identities of User",
        "description": "Returns a collection resource representation of all authentication types configured for a user with the specified UID.",
        "operationId": "GetUserLogins",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserLogin"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 1,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\Administrator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "WIN",
    "description": "Rlab2_SP_test Description",
    "isReadAccessOnly": false,
    "scopes": [
      "integration",
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "",
    "identifierInProvider": "VSPCSRV\\Administrator",
    "creationDate": "2021-08-15T07:48:17.823+02:00"
  },
  {
    "id": 28,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\Administrator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP2",
    "description": "restv3_key",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>lmL3RrVvSV60JwK4kdR3QmWIyfzy32JdhgPpgRi4ryR6vhq5iFMZzGJ67WIDneMXILZtBOmjgskGXI0Au01UlWxUUl986an6quWB+x8bI5rMjwAd53+vFJ58QJQv57Lxgp9xpWiCEFpn7qnRNsEt08XdpE8sf7g7+Al6XA7GbujNs0Y+V8RjftJ6+sOwZ7dh7SabF+WwXYuNmjrLOoxoePxhIu4ajJ2GegbG9xpd2BjzO3X4eG+jxshl1Jv3U9E+CnmYln0mcLGLwQQYbgAv0RWY24EHG+0PUmzy/Y3pgdb5/J8QzjL064IUCWuEwFqyWvnzDR9UYxalMbjL1w6+Xw==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::66688F32B6FCB6918FEDAF7AFB580FB7",
    "creationDate": "2021-08-15T10:08:59.9373942+02:00"
  },
  {
    "id": 35,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\Administrator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP3",
    "description": "IdP login for admin.",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>q68LNFLdnZpFfLqtvEm9j10phar9J18QHvEzMCHbAfvy/B4XInzp+aJ7P/Cas8gpSndpmmA9XRFNLCfOxwQ/7MIaUgauos8ACUF/WjPjXtJ4k4xVz8tE3TMdk239H85cU0ZpBNk+nQExtsZLqN/gfV6jhTZ7B20sIwHJH/dOwaZfCfyAqW2ppK2uUMLTVd7nnL6zrS3c9/JO0trPOaZ6UZ1p5PolTjYU4d+BScdtPHKvExUUoTkw9v9wmAoESCFOXqDOmETVjpL0EryEauHkY2qOqiW0QtM9FQvWAwP1wsHv+ozogQ+gNtAnEvBb7Fxyem47Ay8Nb8aOg7T6c8U8yw==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::018A017BE68EE7702FDC3A76534BA432",
    "creationDate": "2021-08-15T10:16:31.8109896+02:00"
  },
  {
    "id": 36,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\Administrator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP4",
    "description": "Additional IdP login for admin.",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>xl0NK7XoLZHOnZiyQwayZaG4Ss4oaNZXaEF6WK0bxGN98wTHBFTe09G287YzthgCPvHm1/pO42pXaGABVfVJpxNjJolX0AfWh3PAchGkpgAjletHdKliSJjgUkgmN+q1e1apdmVWSFNjlEs5lyAdSv5JY6pV8jqi3bztJwd5UGcCty1dDWlR/mkp4RiEal5PvvhUAmGGOwsnl2L+9DDC3f3Z3OuIzMqUhFYQeFg42gXn9Dh/+7M4mcZWeVf8ul5dzebb8EOR04bTKKhdHfNV3HYTvDDLS9s9UmZSALSwAwhwpAgrqac/YjgsDeq27KoGpYeqHKoWkTYg1icIQef/+w==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::3470EC71746EFE0F9A46E12B0CBC3858",
    "creationDate": "2021-08-15T10:16:31.9672394+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/backupResources": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All User Backup Resources",
        "description": "Returns a collection resource representation of subtenant user backup resources.",
        "operationId": "GetUsersBackupResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserBackupResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "userUid": "1007f50a-e7d1-40a8-8718-bbb87b347d23",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 1:18:22 AM",
    "subtenantUid": "49941f2c-99a8-4927-97bf-2794c0ca3c90",
    "vcdUserId": null,
    "companySiteBackupResourceUid": "e2d9aee9-fbf3-43c2-9474-74cd2154daa1",
    "resourceFriendlyName": "Alpha_Repo",
    "storageQuota": 1073741824,
    "storageQuotaUsage": 0,
    "isStorageQuotaUnlimited": false
  },
  {
    "userUid": "07fee4d1-2ace-480e-84fb-0279d3218938",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 1:18:48 AM",
    "subtenantUid": "e32dff41-c1c7-49a4-b52b-725a0d470534",
    "vcdUserId": null,
    "companySiteBackupResourceUid": "e2d9aee9-fbf3-43c2-9474-74cd2154daa1",
    "resourceFriendlyName": "Beta_Repo",
    "storageQuota": 1073741824,
    "storageQuotaUsage": 0,
    "isStorageQuotaUnlimited": false
  },
  {
    "userUid": "27c98555-7537-4c26-945c-c475ec13b577",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 12:38:52 AM",
    "subtenantUid": "b1505dd1-8bf0-46ff-bdd0-b2273913387b",
    "vcdUserId": null,
    "companySiteBackupResourceUid": "99d2b49f-9c56-4c63-b759-bb7a6c878005",
    "resourceFriendlyName": "Gamma_Repo",
    "storageQuota": 10737418240,
    "storageQuotaUsage": 0,
    "isStorageQuotaUnlimited": true
  },
  {
    "userUid": "f7df3c35-f562-4392-afc7-5f886ca0b65c",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 12:18:37 AM",
    "subtenantUid": "c619ddab-f80a-46b3-a6a1-aefb954346dd",
    "vcdUserId": null,
    "companySiteBackupResourceUid": "dfc322e1-b44d-46dd-ae07-610857433bde",
    "resourceFriendlyName": "Delta_Repo",
    "storageQuota": 10737418240,
    "storageQuotaUsage": 0,
    "isStorageQuotaUnlimited": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/users/{userUid}/logins/totp": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Enable MFA for User",
        "description": "Enables multi-factor authentication for a user with the specified UID.",
        "operationId": "AddTotpLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "secretUrl",
            "in": "query",
            "description": "URL-encoded TOTP secret with parameters.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "code",
            "in": "query",
            "description": "Verification code generated for the TOTP secret in the `secretUrl` parameter.",
            "required": true,
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "Description of the second factor.",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[^<>=]*$",
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Services that are available to the user identity. In this operation, only the `ui` value is available.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "unknown",
                  "integration",
                  "rest",
                  "ui"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "UserLoginScope"
                }
              }
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "User identity resource associated with multi-factor authentication.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLogin"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": 31,
  "userUid": "5926dfe6-6be1-4fed-9321-cd59ad188a5c",
  "userName": "vspcsrv\\ssmith",
  "companyId": "472a0eb1-7723-49ed-afaf-5dde63c1057e",
  "companyName": "My Company",
  "identityProviderName": "TOTP",
  "description": "TOTP Login for S. Smith",
  "isReadAccessOnly": false,
  "scopes": [
    "rest"
  ],
  "status": "enabled",
  "parameters": "",
  "identifierInProvider": "e2f85cd01d85263aebda94b4ba3a43b974fced0a32f1c73e6dd97645187cbef80114762e6b5ddaa8dc4277e4355bf024a6c9f3eb5a326ab2de4db548722fa796",
  "creationDate": "2021-08-23T16:52:55.6727998+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/{userUid}/logins/asymmetricalgorithm": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Assign Public Key to User",
        "description": "Assigns a public key to a user with the specified UID.",
        "operationId": "AddAsymmetricAlgorithmLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "UID of a user to whom a public key must be assigned.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "User identity description.",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[^<>=]*$",
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Services that are available to the user identity.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "unknown",
                  "integration",
                  "rest",
                  "ui"
                ],
                "type": "string",
                "x-extensible-enum": true,
                "x-ms-enum": {
                  "name": "UserLoginScope"
                }
              }
            }
          },
          {
            "name": "isReadAccessOnly",
            "in": "query",
            "description": "Defines whether a user identity must have the read-only access.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Public key.",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            },
            "application/binary+base64": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource representation of a user identity based on asymmetric algorithm.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLogin"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": 38,
  "userUid": "9388c2cf-b820-4c75-9e32-535de6c48b8f",
  "userName": "VSPC1\\Administrator",
  "companyId": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
  "companyName": "My Company",
  "identityProviderName": "IDP2",
  "description": "restv3_key",
  "isReadAccessOnly": true,
  "scopes": [
    "rest",
    "ui"
  ],
  "status": "enabled",
  "parameters": "<RSAKeyValue><Modulus>wikYXRWfgiIW2Y5mL8jpIDKhuQaDUfWdHrJu4aUpI+A0RIKJn1ooxfbC1SnabeaxfR/Uac2o00jaJMjERHxrOLS24FXl+0aT/Ae0JbFE7glnKvQVJuwItav63HU/sJhAalZB+v8EDvD+uHXIOSrGEdNqq3bQ/6atC3nzaASeY1KgvyvH7GlQG12mA5YNTC0W2qQIwOko9DG05+4LqXj3npGeCylb9DqaOQnYDskZ9QcPVeVa87t/t5g2oDZJhtNd+qIfxJV5dMBqrSJn4rBzpuEa2VJinJKFPqjTj+gTHWfmAsZbLrO1Pv0zPlJSGoM3leHUElZJrsq+hF/+V3iR6w==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
  "identifierInProvider": "RSA::7FC97131A6542FCB856AE46C7416A0DC",
  "creationDate": "2021-08-16T07:38:35.36525+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/{userUid}/logins/apikey": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Assign API Key to User",
        "description": "Assigns an API key to a user with the specified UID.",
        "operationId": "AddApiKeyLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "description",
            "in": "query",
            "description": "API key description.",
            "required": true,
            "schema": {
              "maxLength": 128,
              "minLength": 1,
              "pattern": "^[^<>=]*$",
              "type": "string"
            }
          },
          {
            "name": "scopes",
            "in": "query",
            "description": "Services that are available to the user identity.",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "unknown",
                  "integration",
                  "rest",
                  "ui"
                ],
                "type": "string",
                "x-ms-enum": {
                  "name": "UserLoginScope"
                }
              }
            }
          },
          {
            "name": "isReadAccessOnly",
            "in": "query",
            "description": "Defines whether a user identity has the read-only access.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "User identity resource with the API key located in the parameters property.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLogin"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": 40,
  "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
  "userName": "VSPCSRV\\Administrator",
  "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "companyName": "My Company",
  "identityProviderName": "IDProvider",
  "description": "SP login",
  "isReadAccessOnly": false,
  "scopes": [
    "rest",
    "ui"
  ],
  "status": "enabled",
  "parameters": "279a1828b66f8279BwPRu7wKBPW3tuausJ0jjXSYhKuqVzjRKTa8WJyjwfafadYytYCxJx76rF4WGA6c6JiLvmsC3YuQxv20q3GCp70ODjCrtA6mAJGPSIbh13MM31Xu",
  "identifierInProvider": "2853619877031150201",
  "creationDate": "2021-08-15T10:18:21.5675843+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/{userUid}/logins/{userLoginId}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get User Identity",
        "description": "Returns a resource representation of a user identity with the specified ID.",
        "operationId": "GetUserLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userLoginId",
            "in": "path",
            "description": "User identity ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLogin"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": 1,
  "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
  "userName": "VSPCSRV\\Administrator",
  "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "companyName": "My Company",
  "identityProviderName": "WIN",
  "description": "",
  "isReadAccessOnly": false,
  "scopes": [
    "integration",
    "rest",
    "ui"
  ],
  "status": "enabled",
  "parameters": "",
  "identifierInProvider": "VSPCSRV\\Administrator",
  "creationDate": "2021-08-15T07:48:17.823+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Modify User Identity",
        "description": "Modifies a user identity with the specified ID.",
        "operationId": "UpdateUserLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userLoginId",
            "in": "path",
            "description": "User identity ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "enabled",
    "path": "/status",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserLogin"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "id": 1,
  "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
  "userName": "VSPCSRV\\Administrator",
  "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "companyName": "My Company",
  "identityProviderName": "WIN",
  "description": "",
  "isReadAccessOnly": false,
  "scopes": [
    "integration",
    "rest",
    "ui"
  ],
  "status": "enabled",
  "parameters": "",
  "identifierInProvider": "VSPCSRV\\Administrator",
  "creationDate": "2021-08-15T07:48:17.823+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/UserLogin"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete User Identity",
        "description": "Deletes a user identity with the specified ID.",
        "operationId": "DeleteUserLogin",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userLoginId",
            "in": "path",
            "description": "User identity ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the `true` value if the resource is deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": true
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users/resetpassword": {
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Reset User Password",
        "description": "Resets a password of a specific user.",
        "operationId": "CreateResetPasswordRequest",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Properties of a request for a password reset.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "email",
                  "userName"
                ],
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "User email address."
                  },
                  "userName": {
                    "type": "string",
                    "description": "User name."
                  },
                  "returnUrl": {
                    "type": "string",
                    "description": "Relative URL that contains the password reset code in query parameters. The URL is send to the user email address provided in the `email` property.",
                    "nullable": true
                  }
                }
              },
              "example": {
  "email": "j.smith@alpha.com",
  "userName": "alpha\\admin",
  "returnUrl": "//vspc:1280/"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the `true` value if the email message is sent successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": true
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "put": {
        "tags": [
          "Accounts"
        ],
        "summary": "Complete Password Reset",
        "description": "Completes a request for password reset.",
        "operationId": "CompleteResetPasswordRequest",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Properties required to reset password.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "code",
                  "newPassword"
                ],
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "Password reset code."
                  },
                  "newPassword": {
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string",
                    "description": "New user password.",
                    "format": "password"
                  }
                }
              },
              "example": {
  "code": "671F0CDCA3ECDB0C2C3767BF16A34A9CA9FF9A4CCF97033B5AAA852F0A2994488279AAC13BAFE4728D965FBFD841E55F4EEF0FE15175E3E8DC45935910E46EE8E6A5699AB9A3A8FA8DC461E452A87928734E68DB9F3D0A657D34AB8D461366F86779012C781566C771B4B5EAF396BA789BBCD096F127A4F23A67A05D7BA89036F0AAEEA9FD2D9F1A",
  "newPassword": "Password1"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Returns the `true` value if the password was reset successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": true
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Users",
        "description": "Returns a collection resource representation of all users.",
        "operationId": "GetUsers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5ccc20c1-f256-4e60-aa71-82cc5311f8e6",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "iauditor",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyInvoiceAuditor",
    "profile": {
      "firstName": "Simon",
      "lastName": "Cold",
      "title": "Mr",
      "email": "s.cold@atrium.com",
      "address": null,
      "phone": "410 510 2317"
    },
    "credentials": {
      "userName": "iauditor",
      "password": null
    }
  },
  {
    "instanceUid": "b1c109f0-0a39-48de-8390-1ef700f69a03",
    "organizationUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "userName": "owner",
    "status": "Enabled",
    "mfaPolicyStatus": "Disabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "ResellerOwner",
    "profile": {
      "firstName": "Adam",
      "lastName": "West",
      "title": "Mr",
      "email": "a.west@atrium.com",
      "address": null,
      "phone": "410 510 2371"
    },
    "credentials": {
      "userName": "owner",
      "password": null
    }
  },
  {
    "instanceUid": "e2e1c08b-76d8-49e5-91bd-0be0de3e884e",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "administrator1",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyLocationUser",
    "profile": {
      "firstName": null,
      "lastName": null,
      "title": "Unknown",
      "email": null,
      "address": null,
      "phone": null
    },
    "credentials": {
      "userName": "administrator1",
      "password": null
    }
  },
  {
    "instanceUid": "3a0c1dcc-b53d-4e16-83ef-512f8bbfafcf",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "admin",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyAdministrator",
    "profile": {
      "firstName": "Stan",
      "lastName": "Smith",
      "title": "Mr",
      "email": "stan.smith@lorna.com",
      "address": null,
      "phone": "240 357 9450"
    },
    "credentials": {
      "userName": "admin",
      "password": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Create User",
        "description": "Creates a new user with specific properties.",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "User properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              },
              "example": {
  "instanceUid": "00000000-0000-0000-0000-000000000000",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "role": "CompanySubtenant",
  "mfaPolicyStatus": "Enabled",
  "profile": {
    "firstName": "John",
    "lastName": "Brown",
    "title": "Mr",
    "email": "j.brown@exonco.com",
    "address": null,
    "phone": "301 329 9338"
  },
  "credentials": {
    "userName": "subtenant",
    "password": "P@ssw0rd"
  },
  "backupResource": {
    "companySiteBackupResourceUid": "e2d9aee9-fbf3-43c2-9474-74cd2154daa1",
    "description": null,
    "vcdUserId": null,
    "resourceFriendlyName": "CloudRepo",
    "storageQuota": 1073741824,
    "isStorageQuotaUnlimited": false
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "63d5cfc5-6b7c-42c2-bcbd-980aa61b6df1",
  "organizationUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
  "userName": "subtenant",
  "status": "Enabled",
  "mfaPolicyStatus": "Enabled",
  "mfaPolicyConfigurationStatus": "NotConfigured",
  "role": "CompanySubtenant",
  "profile": {
    "firstName": "John",
    "lastName": "Brown",
    "title": "Mr",
    "email": "j.brown@exonco.com",
    "address": null,
    "phone": "301 329 9338"
  },
  "credentials": {
    "userName": "subtenant",
    "password": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/users/{userUid}": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get User",
        "description": "Returns a resource representation of a user with the specified UID.",
        "operationId": "GetUser",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "593c8bb2-0901-4e13-b78e-3a03a4992934",
  "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351",
  "userName": "admin",
  "status": "Enabled",
  "mfaPolicyStatus": "Disabled",
  "mfaPolicyConfigurationStatus": "NotConfigured",
  "role": "ResellerOwner",
  "profile": {
    "firstName": "Simon",
    "lastName": "Cold",
    "title": "Mr",
    "email": "s.cold@atrium.com",
    "address": null,
    "phone": null
  },
  "credentials": {
    "userName": "admin",
    "password": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/User"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Modify User",
        "description": "Modifies a user with the specified UID.",
        "operationId": "PatchUser",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Simon",
    "path": "/profile/firstName",
    "op": "replace"
  },
  {
    "value": "Cold",
    "path": "/profile/lastName",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "593c8bb2-0901-4e13-b78e-3a03a4992934",
  "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351",
  "userName": "g.admin",
  "status": "Enabled",
  "mfaPolicyStatus": "Disabled",
  "mfaPolicyConfigurationStatus": "NotConfigured",
  "role": "ResellerOwner",
  "profile": {
    "firstName": "Simon",
    "lastName": "Cold",
    "title": "Mr",
    "email": "s.cold@atrium.com",
    "address": null,
    "phone": null
  },
  "credentials": {
    "userName": "g.admin",
    "password": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/User"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Delete User",
        "description": "Deletes a user with the specified UID.",
        "operationId": "DeleteUser",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/users/{userUid}/backupResource": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get User Backup Resource",
        "description": "Returns a resource representation of a backup resource available to a subtenant user with the specified UID.",
        "operationId": "GetUserBackupResource",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "userUid": "f7df3c35-f562-4392-afc7-5f886ca0b65c",
  "description": "Created by Veeam Service Provider Console at 8/15/2021 12:18:37 AM",
  "subtenantUid": "c619ddab-f80a-46b3-a6a1-aefb954346dd",
  "vcdUserId": null,
  "companySiteBackupResourceUid": "dfc322e1-b44d-46dd-ae07-610857433bde",
  "resourceFriendlyName": "admin_resource",
  "storageQuota": 2147483648,
  "storageQuotaUsage": 0,
  "isStorageQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/UserBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Accounts"
        ],
        "summary": "Modify User Backup Resource",
        "description": "Modifies a backup resource available to a subtenant user with the specified UID.",
        "operationId": "PatchUserBackupResource",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "admin_resource",
    "path": "/ResourceFriendlyName",
    "op": "replace"
  },
  {
    "value": 2147483648,
    "path": "/StorageQuota",
    "op": "replace"
  },
  {
    "value": false,
    "path": "/IsStorageQuotaUnlimited",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UserBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "userUid": "f7df3c35-f562-4392-afc7-5f886ca0b65c",
  "description": "Created by Veeam Service Provider Console at 8/15/2021 12:18:37 AM",
  "subtenantUid": "c619ddab-f80a-46b3-a6a1-aefb954346dd",
  "vcdUserId": null,
  "companySiteBackupResourceUid": "dfc322e1-b44d-46dd-ae07-610857433bde",
  "resourceFriendlyName": "admin_resource",
  "storageQuota": 2147483648,
  "storageQuotaUsage": 0,
  "isStorageQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/UserBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/users/{userUid}/locations": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All User Locations",
        "description": "Returns a collection resource representation of all locations assigned to a user with the specified UID.",
        "operationId": "GetUserLocations",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationLocation"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f2cfbefe-375e-433b-9169-127f7bc2b2f3",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Default location",
    "quotaGb": 2,
    "isDefault": true
  },
  {
    "instanceUid": "bf15f36f-4464-460f-aff4-31c8c7fd661a",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Manhattan",
    "quotaGb": 0,
    "isDefault": false
  },
  {
    "instanceUid": "8fec94be-8c33-4a68-b273-423fb366b913",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Washington",
    "quotaGb": 0,
    "isDefault": false
  },
  {
    "instanceUid": "40ef48a6-3958-4df8-a5bd-291e24409898",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Los Angeles",
    "quotaGb": 0,
    "isDefault": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Accounts"
        ],
        "summary": "Assign Location to User",
        "description": "Assigns a location to a user with the specified UID.",
        "operationId": "SetUserToLocation",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "locationUid",
            "in": "query",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "5d0ea042-bd27-429d-acd9-74cfa44bb4da",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "userName": "l.admin",
  "status": "Enabled",
  "mfaPolicyStatus": "Enabled",
  "mfaPolicyConfigurationStatus": "NotConfigured",
  "role": "CompanyLocationAdministrator",
  "profile": {
    "firstName": "Simon",
    "lastName": "Cold",
    "title": "Mr",
    "email": "s.cold@atrium.com",
    "address": null,
    "phone": "123 456 789"
  },
  "credentials": {
    "userName": "l.admin",
    "password": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Unassign Location from User",
        "description": "Unassigns a location from a user with the specified UID.",
        "operationId": "DeleteUserFromLocation",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "locationUid",
            "in": "query",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/users/{userUid}/tokens": {
      "delete": {
        "tags": [
          "Accounts"
        ],
        "summary": "Revoke Authentication Token",
        "description": "Revoke access token for a specific user identity or all tokens if the `userLoginId` parameter value is not specified.",
        "operationId": "RevokeAuthenticationToken",
        "parameters": [
          {
            "name": "userUid",
            "in": "path",
            "description": "User UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "userLoginId",
            "in": "query",
            "description": "User identity ID.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the `true` value if the resource is deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": true
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/about": {
      "get": {
        "tags": [
          "About"
        ],
        "summary": "Get Veeam Service Provider Console Version",
        "description": "Returns general information about the currently installed version of Veeam Service Provider Console.",
        "operationId": "GetAboutInformation",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/About"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "installationId": "4c576d10-c870-44f9-bbff-7b499eba02e8",
  "installationDate": "2021-08-15T07:26:29.487+02:00",
  "actualVawVersion": "5.0.0.4301",
  "actualValVersion": "5.0.0.4318",
  "actualVamVersion": "1.0.0.713",
  "serverVersion": "6.0.0.7562",
  "managementAgentVersion": "6.0.0.7562"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/configuration/certificates": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get All Certificates on Veeam Service Provider Console Server",
        "description": "Returns a collection resource representation of security cerificates on Veeam Service Provider Console server that are available for installation.",
        "operationId": "GetAllAvailableCertificates",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Certificate"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "issuedTo": "CN=d8228217-4ea4-4f4d-a139-4ea82ee1633c",
    "issuedBy": "CN=Veeam Software, O=Veeam Software, OU=Veeam Software",
    "friendlyName": "Veeam Management Agent Certificate",
    "thumbprint": "EC697A8832C338BA1693BAB1D51F4F18110625DF",
    "serialNumber": "1B3EF1D556A027B3487D5BD85AD2BDEF",
    "expirationDate": "2031-08-15T07:48:24+02:00"
  },
  {
    "issuedTo": "CN=Veeam Backup Server Certificate",
    "issuedBy": "CN=Veeam Backup Server Certificate",
    "friendlyName": "Veeam Backup Server Certificate",
    "thumbprint": "EA39EE71DE5E2862DE49C9A297B210E652A97EF9",
    "serialNumber": "1668CC0F033E33BA431914B34FFF004C",
    "expirationDate": "2029-05-15T13:50:01+02:00"
  },
  {
    "issuedTo": "CN=mycompany.vspc",
    "issuedBy": "CN=mycompany.vspc",
    "friendlyName": "Veeam Self-Signed Certificate",
    "thumbprint": "DB8D3A88C2DDE33E29DB2588BCDA76D968A2456F",
    "serialNumber": "73DFF355804282A54A52DD16EA6144B0",
    "expirationDate": "2031-08-13T07:39:57+02:00"
  },
  {
    "issuedTo": "CN=Veeam Software",
    "issuedBy": "CN=Veeam Software, O=Veeam Software, OU=Veeam Software",
    "friendlyName": "Veeam Software Group GmbH Service Provider Console Communication Certificate",
    "thumbprint": "D2ECC03930A7A32F2E750026E11523C924800E09",
    "serialNumber": "1D5962A1949383824B85BC5A0E3EEAEE",
    "expirationDate": "2031-08-14T09:00:00+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/configuration/certificates/console": {
      "get": {
        "tags": [
          "Configuration"
        ],
        "summary": "Get Certificate",
        "description": "Returns a Veeam Service Provider Console server security certificate.",
        "operationId": "GetCertificate",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Certificate"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "issuedTo": "CN=Veeam Software",
  "issuedBy": "CN=Veeam Software, O=Veeam Software, OU=Veeam Software",
  "friendlyName": "Veeam Cloud Connect Certificate",
  "thumbprint": "CE10F28154025878AB9C36AC2E15C4DC49F345A9",
  "serialNumber": "5BC09DE7F14FD19E4D3FC11DF241FEE3",
  "expirationDate": "2028-07-17T14:17:38+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Configuration"
        ],
        "summary": "Install Certificate",
        "description": "Installs a Veeam Service Provider Console server security certificate.",
        "operationId": "InstallCertificate",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InstallCertificate"
              },
              "example": {
  "thumbprint": "EC697A8832C338BA1693BAB1D51F4F18110625DF"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Installed certificate.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Certificate"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "issuedTo": "CN=d8228217-4ea4-4f4d-a139-4ea82ee1633c",
  "issuedBy": "CN=Veeam Software, O=Veeam Software, OU=Veeam Software",
  "friendlyName": "Veeam Management Agent Certificate",
  "thumbprint": "EC697A8832C338BA1693BAB1D51F4F18110625DF",
  "serialNumber": "1B3EF1D556A027B3487D5BD85AD2BDEF",
  "expirationDate": "2031-08-15T07:48:24+02:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get All Backup Policies",
        "description": "Returns a collection resource representation of all backup policies.",
        "operationId": "GetBackupPolicies",
        "parameters": [
          {
            "name": "availableToAssignForCompanyUid",
            "in": "query",
            "description": "Limits the collection to the policies that can be assigned to agents of a company with the UID specified in this parameter.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "name": "Windows workstation - Personal files",
    "description": "This policy processes user profile folder including all user settings and data.",
    "configId": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "operationMode": "Workstation",
    "mode": "Workstation",
    "type": "Predefined",
    "accessMode": "Public",
    "systemType": "Windows",
    "createdBy": "My Company",
    "modifiedDate": "2021-08-15T07:26:24.203+02:00",
    "companiesCount": 3
  },
  {
    "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "name": "Windows server - Entire computer",
    "description": "This policy should be used if you want to create a backup of the entire computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
    "configId": "9f3bf058-5f78-401b-8067-9b1ede504759",
    "operationMode": "Server",
    "mode": "Server",
    "type": "Predefined",
    "accessMode": "Public",
    "systemType": "Windows",
    "createdBy": "My Company",
    "modifiedDate": "2021-08-15T07:26:24.233+02:00",
    "companiesCount": 0
  },
  {
    "instanceUid": "c961d15c-c08a-4a00-9200-dc8970faa9a5",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "name": "Linux workstation - Home directory",
    "description": "This policy processes /home directory.",
    "configId": "8aa37adb-c3f7-4e0f-a7fc-fa36ea501baa",
    "operationMode": "Workstation",
    "mode": "Workstation",
    "type": "Predefined",
    "accessMode": "Public",
    "systemType": "Linux",
    "createdBy": "My Company",
    "modifiedDate": "2021-08-15T07:26:24.25+02:00",
    "companiesCount": 0
  },
  {
    "instanceUid": "a52f970a-8862-477a-a319-56a2e1e49aee",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "name": "Linux server - Entire computer",
    "description": "This policy should be used if you want to create a backup of the entire Linux computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
    "configId": "ca7d562a-eb7c-4585-94f7-927f4e8a84ac",
    "operationMode": "Server",
    "mode": "Server",
    "type": "Predefined",
    "accessMode": "Public",
    "systemType": "Linux",
    "createdBy": "My Company",
    "modifiedDate": "2021-08-15T07:26:24.267+02:00",
    "companiesCount": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/configuration/backupPoliciesToAssign": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get All Available Backup Policies",
        "description": "Returns a collection resource representation of all backup policies that can be assigned to agents.",
        "operationId": "GetBackupPoliciesToAssign",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupPolicyToAssign"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "backupPolicies": [
      {
        "instanceUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows workstation - Personal files",
        "description": "This policy processes user profile folder including all user settings and data.",
        "configId": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
        "operationMode": "Workstation",
        "mode": "Workstation",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.203+02:00",
        "companiesCount": 3
      },
      {
        "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows server - Entire computer",
        "description": "This policy should be used if you want to create a backup of the entire computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
        "configId": "9f3bf058-5f78-401b-8067-9b1ede504759",
        "operationMode": "Server",
        "mode": "Server",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.233+02:00",
        "companiesCount": 0
      }
    ]
  },
  {
    "companyUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
    "backupPolicies": [
      {
        "instanceUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows workstation - Personal files",
        "description": "This policy processes user profile folder including all user settings and data.",
        "configId": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
        "operationMode": "Workstation",
        "mode": "Workstation",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.203+02:00",
        "companiesCount": 3
      },
      {
        "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows server - Entire computer",
        "description": "This policy should be used if you want to create a backup of the entire computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
        "configId": "9f3bf058-5f78-401b-8067-9b1ede504759",
        "operationMode": "Server",
        "mode": "Server",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.233+02:00",
        "companiesCount": 0
      }
    ]
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "backupPolicies": [
      {
        "instanceUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows workstation - Personal files",
        "description": "This policy processes user profile folder including all user settings and data.",
        "configId": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
        "operationMode": "Workstation",
        "mode": "Workstation",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.203+02:00",
        "companiesCount": 3
      },
      {
        "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows server - Entire computer",
        "description": "This policy should be used if you want to create a backup of the entire computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
        "configId": "9f3bf058-5f78-401b-8067-9b1ede504759",
        "operationMode": "Server",
        "mode": "Server",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.233+02:00",
        "companiesCount": 0
      }
    ]
  },
  {
    "companyUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "backupPolicies": [
      {
        "instanceUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows workstation - Personal files",
        "description": "This policy processes user profile folder including all user settings and data.",
        "configId": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
        "operationMode": "Workstation",
        "mode": "Workstation",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.203+02:00",
        "companiesCount": 3
      },
      {
        "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
        "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
        "name": "Windows server - Entire computer",
        "description": "This policy should be used if you want to create a backup of the entire computer image. When you restore data from such backup, you will be able to recover the entire computer image as well as data on specific computer volumes: files, folders, application data and so on.",
        "configId": "9f3bf058-5f78-401b-8067-9b1ede504759",
        "operationMode": "Server",
        "mode": "Server",
        "type": "Predefined",
        "accessMode": "Public",
        "systemType": "Windows",
        "createdBy": "My Company",
        "modifiedDate": "2021-08-15T07:26:24.233+02:00",
        "companiesCount": 0
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/configuration/backupPolicies/{policyUid}": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get Backup Policy",
        "description": "Returns a resource representation of a backup policy with the specified UID.",
        "operationId": "GetBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "97964e65-30ba-46ba-973e-83b5aa71f117",
  "organizationUid": "2804b56b-f390-4cfd-b563-62933741af73",
  "name": "LServerVolumeCloud",
  "description": "",
  "configId": "f75ddab1-bdc6-4093-8c2c-91a8706becad",
  "operationMode": "Server",
  "mode": "Server",
  "type": "Provider",
  "accessMode": "Private",
  "systemType": "Linux",
  "createdBy": "My Company",
  "modifiedDate": "2021-08-16T08:05:18.901891+02:00",
  "companiesCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/BackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Delete Backup Policy",
        "description": "Deletes a backup policy with the specified UID.",
        "operationId": "DeleteBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Modify Backup Policy",
        "description": "Modifies a backup policy with the specified UID.",
        "operationId": "PatchBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "patched description",
    "path": "/description",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "6b1205de-3fa3-445b-b6ea-cf28d3a8e2d2",
  "organizationUid": "2804b56b-f390-4cfd-b563-62933741af73",
  "name": "LWrkstEntireRepository",
  "description": "",
  "configId": "f18af4e9-fcab-489c-9027-d6f7f86c1811",
  "operationMode": "Workstation",
  "mode": "Workstation",
  "type": "Provider",
  "accessMode": "Private",
  "systemType": "Linux",
  "createdBy": "My Company",
  "modifiedDate": "2021-08-16T08:05:20.4703225+02:00",
  "companiesCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies/{policyUid}/copy": {
      "post": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Copy Backup Policy",
        "description": "Creates a copy of a backup policy with the specified UID.",
        "operationId": "CopyBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "newPolicyName",
            "in": "query",
            "description": "Name of a backup policy copy. Pattern is '^[^$()%]+$' for Windows policy and '^[^~\"#%&*:<>?/\\\\{|}.'`]+$' for Linux policy.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8aa2248e-2093-4c54-b396-13def0d21b18",
  "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "name": "Copy_SP_Linux workstation - Home directory",
  "description": "This policy processes /home directory.",
  "configId": "d1e4a719-1f88-4625-85d4-a79873e825d2",
  "operationMode": "Workstation",
  "mode": "Workstation",
  "type": "Provider",
  "accessMode": "Public",
  "systemType": "Linux",
  "createdBy": "My Company",
  "modifiedDate": "2021-08-15T10:32:42.9878271+02:00",
  "companiesCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies/windows": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get All Policies for Windows Computers",
        "description": "Returns a collection resource representation of all backup policies configured for Microsoft Windows computers.",
        "operationId": "GetWindowsBackupPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "152a2420-cbbf-412f-bb63-63ce429649ba",
    "createSubtenants": true,
    "createSubFolders": false,
    "unlimitedSubtenantQuota": false,
    "repositoryQuotaGb": 1,
    "operationMode": "Server",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "FilesFolders",
        "computerLevelOptions": null,
        "volumeLevelOptions": null,
        "fileLevelOptions": {
          "directories": [
            "E:\\DataFolder"
          ],
          "inclusionMasks": null,
          "exclusionMasks": null,
          "osfilesIncluded": true,
          "excludeOneDriveFolders": true,
          "personalFilesIncluded": true,
          "personalFilesAdvancedSettings": {
            "mode": "Granular",
            "inclusions": [
              "Desktop"
            ],
            "exclusions": [
              "RoamingUsers"
            ]
          }
        }
      },
      "backupTarget": {
        "targetType": "SharedFolder",
        "localPath": null,
        "sharedFolder": {
          "path": "\\\\az-cl01-vbr\\AZShareSMB01",
          "credentials": {
            "username": "administrator",
            "password": null
          },
          "backupCacheSettings": null
        },
        "backupRepository": null,
        "cloudRepository": null
      },
      "serverModeSettings": {
        "retentionSettings": {
          "retentionMode": "Days",
          "retentionCount": 1
        },
        "scheduleSetting": {
          "scheduleType": "Continuously",
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null,
          "continuousScheduleSettings": {
            "backupWindowSettings": {
              "scheduleWindow": [
                {
                  "day": "Sunday",
                  "hours": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    22,
                    23
                  ]
                },
                {
                  "day": "Monday",
                  "hours": []
                },
                {
                  "day": "Tuesday",
                  "hours": []
                },
                {
                  "day": "Wednesday",
                  "hours": []
                },
                {
                  "day": "Thursday",
                  "hours": []
                },
                {
                  "day": "Friday",
                  "hours": []
                },
                {
                  "day": "Saturday",
                  "hours": []
                }
              ],
              "shiftForMinutes": 30
            }
          },
          "retrySettings": {
            "enabled": true,
            "retryTimes": 3,
            "waitTimeoutMinutes": 1
          },
          "backupWindow": [
            {
              "day": "Tuesday",
              "hours": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                22,
                23
              ]
            },
            {
              "day": "Sunday",
              "hours": []
            },
            {
              "day": "Monday",
              "hours": []
            },
            {
              "day": "Wednesday",
              "hours": []
            },
            {
              "day": "Thursday",
              "hours": []
            },
            {
              "day": "Friday",
              "hours": []
            },
            {
              "day": "Saturday",
              "hours": []
            }
          ]
        },
        "indexingSettings": null,
        "applicationAwareProcessingSettings": {
          "enabled": true,
          "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
          "sqlServerTransactionLogHandlingSettings": {
            "credentials": {
              "username": "usernameTL",
              "password": null
            },
            "logsProcessingMode": "TruncateLogs",
            "periodicallyBackupSetting": null
          },
          "oracleTransactionLogHandlingSettings": {
            "credentials": {
              "accountType": "Oracle",
              "username": "usernameORL",
              "password": null
            },
            "archivedLogsRetentionMode": "DeleteLogsOlderThanHours",
            "backupLifeTimeHours": 60,
            "backupSizeThresholdGb": 10,
            "backupLogsPeriodically": true,
            "periodicallyBackupSetting": {
              "backupLogsEveryMin": 480,
              "backupRetentionMode": "KeepLastDays",
              "keepBackupsOnlyLastDays": 60
            }
          },
          "sharePointAccountSettings": null,
          "scriptSettings": {
            "mode": "IgnoreErrors",
            "preFreezeScript": {
              "fileName": "prefreeze_Script1.bat",
              "content": null
            },
            "postThawScript": {
              "fileName": "postthaw_Script2.exe",
              "content": null
            },
            "credentials": {
              "username": "usernameS",
              "password": null
            }
          }
        }
      },
      "workstationModeSettings": null,
      "advancedSettings": {
        "backupStorage": {
          "compressionLevel": "Dedupe",
          "storageOptimization": "Lan",
          "encryptionEnabled": true,
          "password": null,
          "passwordHint": "Password1"
        },
        "scheduleSettings": {
          "syntheticFullOnDays": null,
          "activeFullSettings": null
        },
        "maintenanceSettings": {
          "backupHealthCheckSettings": null,
          "fullBackupFileMaintenanceSettings": {
            "enableDeletedFilesRetention": true,
            "removeDeletedItemsDataAfter": 30,
            "defragmentAndCompactFullBackupFileSettings": null
          }
        }
      },
      "gfsRetentionSettings": null
    }
  },
  {
    "instanceUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
    "createSubtenants": true,
    "createSubFolders": false,
    "unlimitedSubtenantQuota": true,
    "repositoryQuotaGb": null,
    "operationMode": "Server",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "EntireComputer",
        "computerLevelOptions": {
          "includeUsbDrives": false
        },
        "volumeLevelOptions": null,
        "fileLevelOptions": null
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "cloudRepository": {
          "backupCacheSettings": null
        }
      },
      "serverModeSettings": {
        "retentionSettings": {
          "retentionMode": "RestorePoints",
          "retentionCount": 7
        },
        "scheduleSetting": {
          "scheduleType": "Daily",
          "dailyScheduleSettings": {
            "time": "00:30",
            "dailyMode": "Everyday",
            "specificDays": null
          },
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null,
          "continuousScheduleSettings": null,
          "retrySettings": {
            "enabled": true,
            "retryTimes": 3,
            "waitTimeoutMinutes": 10
          },
          "backupWindow": null
        },
        "indexingSettings": null,
        "applicationAwareProcessingSettings": {
          "enabled": true,
          "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
          "sqlServerTransactionLogHandlingSettings": {
            "credentials": null,
            "logsProcessingMode": "TruncateLogs",
            "periodicallyBackupSetting": null
          },
          "oracleTransactionLogHandlingSettings": {
            "credentials": null,
            "archivedLogsRetentionMode": "DoNotDeleteArchivedLogs",
            "backupLifeTimeHours": 24,
            "backupSizeThresholdGb": 10,
            "backupLogsPeriodically": false,
            "periodicallyBackupSetting": null
          },
          "sharePointAccountSettings": null,
          "scriptSettings": {
            "mode": "Disabled",
            "preFreezeScript": null,
            "postThawScript": null,
            "credentials": null
          }
        }
      },
      "workstationModeSettings": null,
      "advancedSettings": {
        "backupStorage": {
          "compressionLevel": "Optimal",
          "storageOptimization": "Lan",
          "encryptionEnabled": false,
          "password": null,
          "passwordHint": null
        },
        "scheduleSettings": {
          "syntheticFullOnDays": null,
          "activeFullSettings": null
        },
        "maintenanceSettings": {
          "backupHealthCheckSettings": null,
          "fullBackupFileMaintenanceSettings": {
            "enableDeletedFilesRetention": false,
            "removeDeletedItemsDataAfter": 30,
            "defragmentAndCompactFullBackupFileSettings": null
          }
        }
      },
      "gfsRetentionSettings": null
    }
  },
  {
    "instanceUid": "6e241582-41ac-4d69-89aa-fe4ee6491a58",
    "createSubtenants": true,
    "createSubFolders": false,
    "unlimitedSubtenantQuota": false,
    "repositoryQuotaGb": 1,
    "operationMode": "Workstation",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "FilesFolders",
        "computerLevelOptions": null,
        "volumeLevelOptions": null,
        "fileLevelOptions": {
          "directories": [
            "C:\\Setup"
          ],
          "inclusionMasks": [
            "*.df"
          ],
          "exclusionMasks": [
            "*.jkj"
          ],
          "osfilesIncluded": false,
          "excludeOneDriveFolders": false,
          "personalFilesIncluded": true,
          "personalFilesAdvancedSettings": {
            "mode": "All",
            "inclusions": [
              "Desktop",
              "Documents",
              "Pictures",
              "Video",
              "Music",
              "Favorites",
              "Downloads",
              "ApplicationData",
              "OtherFilesAndFolders"
            ],
            "exclusions": []
          }
        }
      },
      "backupTarget": {
        "targetType": "LocalFolder",
        "localPath": "C:\\VeeamBackup",
        "sharedFolder": null,
        "backupRepository": null,
        "cloudRepository": null
      },
      "serverModeSettings": null,
      "workstationModeSettings": {
        "scheduleSetting": {
          "periodicalScheduleEnabled": true,
          "periodicalScheduleSettings": {
            "dailyScheduleSettings": {
              "time": "00:30",
              "dailyMode": "Everyday",
              "specificDays": null
            },
            "shutdownAction": "SkipBackup",
            "finalizingAction": "KeepRunning"
          },
          "eventTriggerSettings": {
            "backupOnLock": false,
            "backupOnLogOff": false,
            "backupOnTargetConnection": false,
            "ejectTargetOnBackupComplete": false,
            "backupNotOften": 2,
            "notOftenTimeUnit": "Hours"
          }
        },
        "retentionSettings": {
          "retentionDays": 5
        }
      },
      "advancedSettings": {
        "backupStorage": {
          "compressionLevel": "Optimal",
          "storageOptimization": "Lan",
          "encryptionEnabled": false,
          "password": null,
          "passwordHint": null
        },
        "scheduleSettings": {
          "syntheticFullOnDays": null,
          "activeFullSettings": null
        },
        "maintenanceSettings": {
          "backupHealthCheckSettings": null,
          "fullBackupFileMaintenanceSettings": {
            "enableDeletedFilesRetention": false,
            "removeDeletedItemsDataAfter": 30,
            "defragmentAndCompactFullBackupFileSettings": null
          }
        }
      },
      "gfsRetentionSettings": null
    }
  },
  {
    "instanceUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "createSubtenants": true,
    "createSubFolders": false,
    "unlimitedSubtenantQuota": false,
    "repositoryQuotaGb": 1,
    "operationMode": "Server",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "Volume",
        "computerLevelOptions": null,
        "volumeLevelOptions": {
          "mode": "InclusionMode",
          "backupOperatingSystem": false,
          "inclusions": [
            "C:\\"
          ],
          "exclusions": null
        },
        "fileLevelOptions": null
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "cloudRepository": {
          "backupCacheSettings": {
            "location": "C:\\string\\newPath",
            "maximumSizeGb": 5
          }
        }
      },
      "serverModeSettings": {
        "retentionSettings": {
          "retentionMode": "RestorePoints",
          "retentionCount": 7
        },
        "scheduleSetting": {
          "scheduleType": "Daily",
          "dailyScheduleSettings": {
            "time": "00:30",
            "dailyMode": "Everyday",
            "specificDays": null
          },
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null,
          "continuousScheduleSettings": null,
          "retrySettings": {
            "enabled": true,
            "retryTimes": 3,
            "waitTimeoutMinutes": 10
          },
          "backupWindow": null
        },
        "indexingSettings": null,
        "applicationAwareProcessingSettings": {
          "enabled": false,
          "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
          "sqlServerTransactionLogHandlingSettings": null,
          "oracleTransactionLogHandlingSettings": null,
          "sharePointAccountSettings": null,
          "scriptSettings": null
        }
      },
      "workstationModeSettings": null,
      "advancedSettings": {
        "backupStorage": {
          "compressionLevel": "Optimal",
          "storageOptimization": "Local",
          "encryptionEnabled": false,
          "password": null,
          "passwordHint": null
        },
        "scheduleSettings": {
          "syntheticFullOnDays": null,
          "activeFullSettings": null
        },
        "maintenanceSettings": {
          "backupHealthCheckSettings": null,
          "fullBackupFileMaintenanceSettings": {
            "enableDeletedFilesRetention": false,
            "removeDeletedItemsDataAfter": 30,
            "defragmentAndCompactFullBackupFileSettings": null
          }
        }
      },
      "gfsRetentionSettings": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Create Backup Policy for Windows Computers",
        "description": "Creates a backup policy for Microsoft Windows computers.",
        "operationId": "CreateWindowsBackupPolicy",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Backup policy properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowsBackupPolicyInput"
              },
              "example": {
  "name": "WindowSchedule",
  "description": null,
  "operationMode": "Server",
  "accessMode": "Private",
  "createSubtenants": true,
  "createSubFolders": false,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGb": 1,
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "FilesFolders",
      "computerLevelOptions": null,
      "volumeLevelOptions": null,
      "fileLevelOptions": {
        "directories": [
          "E:\\Archive"
        ],
        "inclusionMasks": null,
        "exclusionMasks": null,
        "osfilesIncluded": true,
        "excludeOneDriveFolders": true,
        "personalFilesIncluded": true,
        "personalFilesAdvancedSettings": {
          "mode": "Granular",
          "inclusions": [
            "Desktop"
          ],
          "exclusions": [
            "RoamingUsers"
          ]
        }
      }
    },
    "backupTarget": {
      "targetType": "SharedFolder",
      "localPath": null,
      "sharedFolder": {
        "path": "\\\\az-cl01-vbr\\AZShareSMB01",
        "credentials": {
          "username": "administrator",
          "password": "Password1"
        },
        "backupCacheSettings": null
      },
      "backupRepository": null,
      "cloudRepository": null
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "Days",
        "retentionCount": 1
      },
      "scheduleSetting": {
        "scheduleType": "Continuously",
        "dailyScheduleSettings": null,
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": {
          "backupWindowSettings": {
            "scheduleWindow": [
              {
                "day": "Sunday",
                "hours": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  22,
                  23
                ]
              }
            ],
            "shiftForMinutes": 30
          }
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 1
        },
        "backupWindow": [
          {
            "day": "Tuesday",
            "hours": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              22,
              23
            ]
          }
        ]
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": true,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": {
            "username": "admin",
            "password": null
          },
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": {
            "accountType": "Oracle",
            "username": "orladmin",
            "password": "Password1"
          },
          "archivedLogsRetentionMode": "DeleteLogsOlderThanHours",
          "backupLifeTimeHours": 60,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": true,
          "periodicallyBackupSetting": {
            "backupLogsEveryMin": 480,
            "backupRetentionMode": "KeepLastDays",
            "keepBackupsOnlyLastDays": 60
          }
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "IgnoreErrors",
          "preFreezeScript": {
            "fileName": "Script1.bat",
            "content": "bWQgYzpcc3lzdGVtXHRlc3Rfc2NyaXB0"
          },
          "postThawScript": {
            "fileName": "Script2.exe",
            "content": "aGpnYmFramJuIHp6a2puYWYsdmJqZWlqa2psMTIzNDI0NXJ0Z252bWJuIGFqa2tMTURWYy4u"
          },
          "credentials": {
            "username": "sptadmin",
            "password": "P@ssw0rd"
          }
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Dedupe",
        "storageOptimization": "Lan",
        "encryptionEnabled": true,
        "password": "P@ssw0rd",
        "passwordHint": "@0"
      },
      "scheduleSettings": null,
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": true,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9dd52dc8-df73-41a2-9934-4fb30d19194c",
  "createSubtenants": true,
  "createSubFolders": false,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGb": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "FilesFolders",
      "computerLevelOptions": null,
      "volumeLevelOptions": null,
      "fileLevelOptions": {
        "directories": [
          "E:\\Archive"
        ],
        "inclusionMasks": null,
        "exclusionMasks": null,
        "osfilesIncluded": true,
        "excludeOneDriveFolders": true,
        "personalFilesIncluded": true,
        "personalFilesAdvancedSettings": {
          "mode": "Granular",
          "inclusions": [
            "Desktop"
          ],
          "exclusions": [
            "RoamingUsers"
          ]
        }
      }
    },
    "backupTarget": {
      "targetType": "SharedFolder",
      "localPath": null,
      "sharedFolder": {
        "path": "\\\\az-cl01-vbr\\AZShareSMB01",
        "credentials": {
          "username": "administrator",
          "password": null
        },
        "backupCacheSettings": null
      },
      "backupRepository": null,
      "cloudRepository": null
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "Days",
        "retentionCount": 1
      },
      "scheduleSetting": {
        "scheduleType": "Continuously",
        "dailyScheduleSettings": null,
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": {
          "backupWindowSettings": {
            "scheduleWindow": [
              {
                "day": "Sunday",
                "hours": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  22,
                  23
                ]
              },
              {
                "day": "Monday",
                "hours": []
              },
              {
                "day": "Tuesday",
                "hours": []
              },
              {
                "day": "Wednesday",
                "hours": []
              },
              {
                "day": "Thursday",
                "hours": []
              },
              {
                "day": "Friday",
                "hours": []
              },
              {
                "day": "Saturday",
                "hours": []
              }
            ],
            "shiftForMinutes": 30
          }
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 1
        },
        "backupWindow": [
          {
            "day": "Tuesday",
            "hours": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              22,
              23
            ]
          },
          {
            "day": "Sunday",
            "hours": []
          },
          {
            "day": "Monday",
            "hours": []
          },
          {
            "day": "Wednesday",
            "hours": []
          },
          {
            "day": "Thursday",
            "hours": []
          },
          {
            "day": "Friday",
            "hours": []
          },
          {
            "day": "Saturday",
            "hours": []
          }
        ]
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": true,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": {
            "username": "admin",
            "password": null
          },
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": {
            "accountType": "Oracle",
            "username": "orladmin",
            "password": null
          },
          "archivedLogsRetentionMode": "DeleteLogsOlderThanHours",
          "backupLifeTimeHours": 60,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": true,
          "periodicallyBackupSetting": {
            "backupLogsEveryMin": 480,
            "backupRetentionMode": "KeepLastDays",
            "keepBackupsOnlyLastDays": 60
          }
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "IgnoreErrors",
          "preFreezeScript": {
            "fileName": "Script1.bat",
            "content": null
          },
          "postThawScript": {
            "fileName": "Script2.exe",
            "content": null
          },
          "credentials": {
            "username": "sptadmin",
            "password": null
          }
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Dedupe",
        "storageOptimization": "Lan",
        "encryptionEnabled": true,
        "password": null,
        "passwordHint": "@0"
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": true,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies/linux": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get All Policies for Linux Computers",
        "description": "Returns a collection resource representation of all backup policies configured for Linux computers.",
        "operationId": "GetLinuxBackupPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8284d79e-a049-414b-909f-8dbb917d0dc9",
    "createSubtenants": true,
    "unlimitedSubtenantQuota": false,
    "repositoryQuotaGB": 1,
    "operationMode": "Server",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "Volume",
        "volumeLevelOptions": {
          "volumes": [
            {
              "volumeType": "Device",
              "path": "/home"
            }
          ]
        },
        "fileLevelOptions": null
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "enableDeletedFilesRetention": false,
        "removeDeletedItemsDataAfter": 30
      },
      "backupStorage": {
        "compressionLevel": "Optimal",
        "blockSize": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null,
        "isSnapshotRequired": true
      },
      "indexingSettings": {
        "indexingType": "ExceptSpecifiedFolders",
        "includedFolders": null,
        "excludedFolders": [
          "home"
        ]
      },
      "scriptSettings": {
        "enabled": true,
        "preJobScript": {
          "fileName": "prejob_pre.sh",
          "content": null
        },
        "postJobScript": {
          "fileName": "postjob_post.sh",
          "content": null
        },
        "preFreezeScript": {
          "fileName": "prefreeze_pre.sh",
          "content": null
        },
        "postThawScript": {
          "fileName": "postthaw_post.sh",
          "content": null
        }
      },
      "retentionSettings": {
        "restorePointsCount": 7
      },
      "scheduleSettings": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "03:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicallyScheduleSettings": null,
        "activeFullSettings": {
          "scheduleType": "Weekly",
          "dayOfMonth": null,
          "weeklyOnDays": [
            "Monday",
            "Saturday"
          ]
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        }
      },
      "applicationAwareProcessingSettings": {
        "oracleAapSettings": {
          "processingType": "TryProcess",
          "credentials": {
            "username": "root1",
            "password": null
          },
          "truncationConfig": {
            "truncationMode": "TruncateDisabled",
            "sizeGB": 10,
            "lifeTimeHours": 24
          },
          "useOracleCredentials": true
        },
        "mySqlAapSettings": {
          "processingType": "RequireSuccess",
          "credentials": {
            "username": "root2",
            "password": null
          },
          "authType": "MySQLPassword",
          "passwordFilePath": ""
        },
        "postgreSqlAapSettings": {
          "processingType": "TryProcess",
          "credentials": {
            "username": "root3",
            "password": null
          },
          "authType": "PSQLPassword"
        }
      }
    }
  },
  {
    "instanceUid": "a98e1093-96ae-457c-a6d3-4ceb90f65d44",
    "createSubtenants": true,
    "unlimitedSubtenantQuota": false,
    "repositoryQuotaGB": 1,
    "operationMode": "Server",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "Volume",
        "volumeLevelOptions": {
          "volumes": [
            {
              "volumeType": "MountPoint",
              "path": "/cafe"
            },
            {
              "volumeType": "Device",
              "path": "/work"
            }
          ]
        },
        "fileLevelOptions": null
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "enableDeletedFilesRetention": false,
        "removeDeletedItemsDataAfter": 30
      },
      "backupStorage": {
        "compressionLevel": "Optimal",
        "blockSize": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null,
        "isSnapshotRequired": true
      },
      "indexingSettings": {
        "indexingType": "ExceptSpecifiedFolders",
        "includedFolders": null,
        "excludedFolders": [
          "home",
          "work"
        ]
      },
      "scriptSettings": {
        "enabled": true,
        "preJobScript": {
          "fileName": "prejob_pre.sh",
          "content": null
        },
        "postJobScript": {
          "fileName": "postjob_post.sh",
          "content": null
        },
        "preFreezeScript": null,
        "postThawScript": null
      },
      "retentionSettings": {
        "restorePointsCount": 7
      },
      "scheduleSettings": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "05:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicallyScheduleSettings": null,
        "activeFullSettings": null,
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        }
      },
      "applicationAwareProcessingSettings": {
        "oracleAapSettings": {
          "processingType": "TryProcess",
          "credentials": {
            "username": "root1",
            "password": null
          },
          "truncationConfig": {
            "truncationMode": "TruncateDisabled",
            "sizeGB": 10,
            "lifeTimeHours": 24
          },
          "useOracleCredentials": true
        },
        "mySqlAapSettings": {
          "processingType": "RequireSuccess",
          "credentials": {
            "username": "root2",
            "password": null
          },
          "authType": "MySQLPassword",
          "passwordFilePath": ""
        },
        "postgreSqlAapSettings": {
          "processingType": "TryProcess",
          "credentials": {
            "username": "root3",
            "password": null
          },
          "authType": "PSQLPassword"
        }
      }
    }
  },
  {
    "instanceUid": "c961d15c-c08a-4a00-9200-dc8970faa9a5",
    "createSubtenants": true,
    "unlimitedSubtenantQuota": true,
    "repositoryQuotaGB": null,
    "operationMode": "Workstation",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "FilesFolders",
        "volumeLevelOptions": null,
        "fileLevelOptions": {
          "directories": [
            "/home"
          ],
          "inclusionMasks": null,
          "exclusionMasks": null
        }
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "enableDeletedFilesRetention": false,
        "removeDeletedItemsDataAfter": 30
      },
      "backupStorage": {
        "compressionLevel": "Optimal",
        "blockSize": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null,
        "isSnapshotRequired": true
      },
      "indexingSettings": {
        "indexingType": "None",
        "includedFolders": null,
        "excludedFolders": [
          "/cdrom",
          "/dev",
          "/media",
          "/mnt",
          "/proc",
          "/tmp",
          "/lost+found"
        ]
      },
      "scriptSettings": {
        "enabled": false,
        "preJobScript": null,
        "postJobScript": null,
        "preFreezeScript": null,
        "postThawScript": null
      },
      "retentionSettings": {
        "restorePointsCount": 7
      },
      "scheduleSettings": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicallyScheduleSettings": null,
        "activeFullSettings": {
          "scheduleType": "NotScheduled",
          "dayOfMonth": null,
          "weeklyOnDays": null
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        }
      },
      "applicationAwareProcessingSettings": {
        "oracleAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "truncationConfig": {
            "truncationMode": "TruncateDisabled",
            "sizeGB": 10,
            "lifeTimeHours": 24
          },
          "useOracleCredentials": true
        },
        "mySqlAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "authType": "MySQLPassword",
          "passwordFilePath": null
        },
        "postgreSqlAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "authType": "PSQLPassword"
        }
      }
    }
  },
  {
    "instanceUid": "8aa2248e-2093-4c54-b396-13def0d21b18",
    "createSubtenants": false,
    "unlimitedSubtenantQuota": true,
    "repositoryQuotaGB": null,
    "operationMode": "Workstation",
    "jobConfiguration": {
      "backupSource": {
        "backupMode": "FilesFolders",
        "volumeLevelOptions": null,
        "fileLevelOptions": {
          "directories": [
            "/home"
          ],
          "inclusionMasks": null,
          "exclusionMasks": null
        }
      },
      "backupTarget": {
        "targetType": "CloudRepository",
        "localPath": null,
        "sharedFolder": null,
        "backupRepository": null,
        "enableDeletedFilesRetention": false,
        "removeDeletedItemsDataAfter": 30
      },
      "backupStorage": {
        "compressionLevel": "Optimal",
        "blockSize": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null,
        "isSnapshotRequired": true
      },
      "indexingSettings": {
        "indexingType": "None",
        "includedFolders": null,
        "excludedFolders": [
          "/cdrom",
          "/dev",
          "/media",
          "/mnt",
          "/proc",
          "/tmp",
          "/lost+found"
        ]
      },
      "scriptSettings": {
        "enabled": false,
        "preJobScript": null,
        "postJobScript": null,
        "preFreezeScript": null,
        "postThawScript": null
      },
      "retentionSettings": {
        "restorePointsCount": 7
      },
      "scheduleSettings": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicallyScheduleSettings": null,
        "activeFullSettings": {
          "scheduleType": "NotScheduled",
          "dayOfMonth": null,
          "weeklyOnDays": null
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        }
      },
      "applicationAwareProcessingSettings": {
        "oracleAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "truncationConfig": {
            "truncationMode": "TruncateDisabled",
            "sizeGB": 10,
            "lifeTimeHours": 24
          },
          "useOracleCredentials": true
        },
        "mySqlAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "authType": "MySQLPassword",
          "passwordFilePath": null
        },
        "postgreSqlAapSettings": {
          "processingType": "DisableProcess",
          "credentials": null,
          "authType": "PSQLPassword"
        }
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Create Backup Policy for Linux Computers",
        "description": "Creates a backup policy for Linux computers.",
        "operationId": "CreateLinuxBackupPolicy",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Backup policy properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxBackupPolicyInput"
              },
              "example": {
  "name": "LServerVolumeCloudComplex",
  "description": "",
  "operationMode": "Server",
  "accessMode": "Private",
  "createSubtenants": true,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGB": 1,
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "Device",
            "path": "/home"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home"
      ]
    },
    "scriptSettings": null,
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "03:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "Weekly",
        "dayOfMonth": 2,
        "weeklyOnDays": [
          "Monday",
          "Saturday"
        ]
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root1",
          "password": "Password1"
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 10,
          "lifeTimeHours": 24
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "RequireSuccess",
        "credentials": {
          "username": "root2",
          "password": "Password1"
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root3",
          "password": "Password1"
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "97964e65-30ba-46ba-973e-83b5aa71f117",
  "createSubtenants": true,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGB": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "Device",
            "path": "/home"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home"
      ]
    },
    "scriptSettings": null,
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "03:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "Weekly",
        "dayOfMonth": null,
        "weeklyOnDays": [
          "Monday",
          "Saturday"
        ]
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root1",
          "password": null
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 10,
          "lifeTimeHours": 24
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "RequireSuccess",
        "credentials": {
          "username": "root2",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root3",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies/windows/{policyUid}": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get Backup Policy for Windows Computers",
        "description": "Returns a resource representation of a Windows computer backup policy with the specified UID.",
        "operationId": "GetWindowsBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9dd52dc8-df73-41a2-9934-4fb30d19194c",
  "createSubtenants": true,
  "createSubFolders": false,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGb": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "FilesFolders",
      "computerLevelOptions": null,
      "volumeLevelOptions": null,
      "fileLevelOptions": {
        "directories": [
          "E:\\Files"
        ],
        "inclusionMasks": null,
        "exclusionMasks": null,
        "osfilesIncluded": true,
        "excludeOneDriveFolders": true,
        "personalFilesIncluded": true,
        "personalFilesAdvancedSettings": {
          "mode": "Granular",
          "inclusions": [
            "Desktop"
          ],
          "exclusions": [
            "RoamingUsers"
          ]
        }
      }
    },
    "backupTarget": {
      "targetType": "SharedFolder",
      "localPath": null,
      "sharedFolder": {
        "path": "\\\\az-cl01-vbr\\AZShareSMB01",
        "credentials": {
          "username": "administrator",
          "password": null
        },
        "backupCacheSettings": null
      },
      "backupRepository": null,
      "cloudRepository": null
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "Days",
        "retentionCount": 1
      },
      "scheduleSetting": {
        "scheduleType": "Continuously",
        "dailyScheduleSettings": null,
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": {
          "backupWindowSettings": {
            "scheduleWindow": [
              {
                "day": "Sunday",
                "hours": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  22,
                  23
                ]
              },
              {
                "day": "Monday",
                "hours": []
              },
              {
                "day": "Tuesday",
                "hours": []
              },
              {
                "day": "Wednesday",
                "hours": []
              },
              {
                "day": "Thursday",
                "hours": []
              },
              {
                "day": "Friday",
                "hours": []
              },
              {
                "day": "Saturday",
                "hours": []
              }
            ],
            "shiftForMinutes": 30
          }
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 1
        },
        "backupWindow": [
          {
            "day": "Tuesday",
            "hours": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              22,
              23
            ]
          },
          {
            "day": "Sunday",
            "hours": []
          },
          {
            "day": "Monday",
            "hours": []
          },
          {
            "day": "Wednesday",
            "hours": []
          },
          {
            "day": "Thursday",
            "hours": []
          },
          {
            "day": "Friday",
            "hours": []
          },
          {
            "day": "Saturday",
            "hours": []
          }
        ]
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": true,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": {
            "username": "usernameTL",
            "password": null
          },
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": {
            "accountType": "Oracle",
            "username": "usernameORL",
            "password": null
          },
          "archivedLogsRetentionMode": "DeleteLogsOlderThanHours",
          "backupLifeTimeHours": 60,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": true,
          "periodicallyBackupSetting": {
            "backupLogsEveryMin": 480,
            "backupRetentionMode": "KeepLastDays",
            "keepBackupsOnlyLastDays": 60
          }
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "IgnoreErrors",
          "preFreezeScript": {
            "fileName": "prefreeze_Script1.bat",
            "content": null
          },
          "postThawScript": {
            "fileName": "postthaw_Script2.exe",
            "content": null
          },
          "credentials": {
            "username": "usernameS",
            "password": null
          }
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Dedupe",
        "storageOptimization": "Lan",
        "encryptionEnabled": true,
        "password": null,
        "passwordHint": "Password1"
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": true,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsBackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Modify Backup Policy for Windows Computers",
        "description": "Modifies a Windows computer backup policy with the specified UID.",
        "operationId": "PatchWindowsBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "null",
    "path": "/jobconfiguration/backuptarget/cloudrepository",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9dd52dc8-df73-41a2-9934-4fb30d19194c",
  "createSubtenants": true,
  "createSubFolders": false,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGb": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "FilesFolders",
      "computerLevelOptions": null,
      "volumeLevelOptions": null,
      "fileLevelOptions": {
        "directories": [
          "E:\\Files"
        ],
        "inclusionMasks": null,
        "exclusionMasks": null,
        "osfilesIncluded": true,
        "excludeOneDriveFolders": true,
        "personalFilesIncluded": true,
        "personalFilesAdvancedSettings": {
          "mode": "Granular",
          "inclusions": [
            "Desktop"
          ],
          "exclusions": [
            "RoamingUsers"
          ]
        }
      }
    },
    "backupTarget": {
      "targetType": "SharedFolder",
      "localPath": null,
      "sharedFolder": {
        "path": "\\\\az-cl01-vbr\\AZShareSMB01",
        "credentials": {
          "username": "administrator",
          "password": null
        },
        "backupCacheSettings": null
      },
      "backupRepository": null,
      "cloudRepository": null
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "Days",
        "retentionCount": 1
      },
      "scheduleSetting": {
        "scheduleType": "Continuously",
        "dailyScheduleSettings": null,
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": {
          "backupWindowSettings": {
            "scheduleWindow": [
              {
                "day": "Sunday",
                "hours": [
                  0,
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  22,
                  23
                ]
              },
              {
                "day": "Monday",
                "hours": []
              },
              {
                "day": "Tuesday",
                "hours": []
              },
              {
                "day": "Wednesday",
                "hours": []
              },
              {
                "day": "Thursday",
                "hours": []
              },
              {
                "day": "Friday",
                "hours": []
              },
              {
                "day": "Saturday",
                "hours": []
              }
            ],
            "shiftForMinutes": 30
          }
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 1
        },
        "backupWindow": [
          {
            "day": "Tuesday",
            "hours": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              22,
              23
            ]
          },
          {
            "day": "Sunday",
            "hours": []
          },
          {
            "day": "Monday",
            "hours": []
          },
          {
            "day": "Wednesday",
            "hours": []
          },
          {
            "day": "Thursday",
            "hours": []
          },
          {
            "day": "Friday",
            "hours": []
          },
          {
            "day": "Saturday",
            "hours": []
          }
        ]
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": true,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": {
            "username": "usernameTL",
            "password": null
          },
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": {
            "accountType": "Oracle",
            "username": "usernameORL",
            "password": null
          },
          "archivedLogsRetentionMode": "DeleteLogsOlderThanHours",
          "backupLifeTimeHours": 60,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": true,
          "periodicallyBackupSetting": {
            "backupLogsEveryMin": 480,
            "backupRetentionMode": "KeepLastDays",
            "keepBackupsOnlyLastDays": 60
          }
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "IgnoreErrors",
          "preFreezeScript": {
            "fileName": "prefreeze_Script1.bat",
            "content": null
          },
          "postThawScript": {
            "fileName": "postthaw_Script2.exe",
            "content": null
          },
          "credentials": {
            "username": "usernameS",
            "password": null
          }
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Dedupe",
        "storageOptimization": "Lan",
        "encryptionEnabled": true,
        "password": null,
        "passwordHint": "Password1"
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": true,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": {
      "weekly": {
        "keepWeeklyBackupsForWeeks": 1,
        "useFullBackupFrom": "Saturday"
      },
      "monthly": {
        "keepMonthlyBackupsForMonths": 2,
        "useWeeklyFullBackupForTheFollowingWeekOfMonth": "Last"
      },
      "yearly": {
        "keepYearlyBackupsForYears": 3,
        "useMonthlyFullBackupForTheFollowingMonth": "Dec"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsBackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/configuration/backupPolicies/linux/{policyUid}": {
      "get": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Get Backup Policy for Linux Computers",
        "description": "Returns a resource representation of a Linux computer backup policy with the specified UID.",
        "operationId": "GetLinuxBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "97964e65-30ba-46ba-973e-83b5aa71f117",
  "createSubtenants": true,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGB": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "Device",
            "path": "/home"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home"
      ]
    },
    "scriptSettings": {
      "enabled": true,
      "preJobScript": {
        "fileName": "prejob_pre.sh",
        "content": null
      },
      "postJobScript": {
        "fileName": "postjob_post.sh",
        "content": null
      },
      "preFreezeScript": {
        "fileName": "prefreeze_pre.sh",
        "content": null
      },
      "postThawScript": {
        "fileName": "postthaw_post.sh",
        "content": null
      }
    },
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "03:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "Weekly",
        "dayOfMonth": null,
        "weeklyOnDays": [
          "Monday",
          "Saturday"
        ]
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root1",
          "password": null
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 10,
          "lifeTimeHours": 24
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "RequireSuccess",
        "credentials": {
          "username": "root2",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root3",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/LinuxBackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Policies"
        ],
        "summary": "Modify Backup Policy for Linux Computers",
        "description": "Modifies a Linux computer backup policy with the specified UID.",
        "operationId": "PatchLinuxBackupPolicy",
        "parameters": [
          {
            "name": "policyUid",
            "in": "path",
            "description": "Policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "CloudRepository",
    "path": "/jobconfiguration/backuptarget/targettype",
    "op": "replace"
  },
  {
    "value": null,
    "path": "/jobconfiguration/backuptarget/sharedfolder",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Modified backup policy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxBackupPolicy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "42f31cca-b1a6-445f-944f-dd015252d910",
  "createSubtenants": true,
  "unlimitedSubtenantQuota": false,
  "repositoryQuotaGB": 1,
  "operationMode": "Server",
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "MountPoint",
            "path": "/misc"
          },
          {
            "volumeType": "Device",
            "path": "/work"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home",
        "work",
        "smthelse"
      ]
    },
    "scriptSettings": {
      "enabled": true,
      "preJobScript": {
        "fileName": "prejob_pre.sh",
        "content": null
      },
      "postJobScript": {
        "fileName": "postjob_post.sh",
        "content": null
      },
      "preFreezeScript": null,
      "postThawScript": null
    },
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "05:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": null,
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root1",
          "password": null
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 10,
          "lifeTimeHours": 24
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "RequireSuccess",
        "credentials": {
          "username": "root2",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "root3",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/LinuxBackupPolicy"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/containers": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Get All Containers",
        "description": "Returns a collection resource representation of all organization containers.",
        "operationId": "GetOrgContainers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrgContainer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "e4c58977-2b42-4995-8e34-1836237d1783",
    "name": "Managed Companies",
    "type": "DefaultCompanies",
    "childrenOrganizations": [
      "7c184d87-53c6-4a24-b607-ccdb60f5cd20",
      "610a45df-81de-4f22-9717-19fcb709db4e",
      "781677c1-6ffb-48d8-a13f-6b5aa5484285",
      "84a9bf07-4739-47db-9be5-e19d0bf5de8a",
      "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
      "38a67935-c027-4011-8c46-d396bfb1b230"
    ],
    "childrenContainers": []
  },
  {
    "instanceUid": "0288aaef-01b6-42c4-8a3d-9c690bfb2938",
    "name": "Resellers",
    "type": "DefaultResellers",
    "childrenOrganizations": [
      "95db13b5-d291-4c0b-9324-698985243aa5",
      "8b5b0096-fc39-455a-8b70-754300bbf05f",
      "9119114e-6f0d-4a93-b8ab-d560b50c3cc3"
    ],
    "childrenContainers": []
  },
  {
    "instanceUid": "235124e8-a118-415d-9949-73a5a3ac637a",
    "name": "REST Container",
    "type": "Custom",
    "childrenOrganizations": [
      "5a9e523c-9acf-4585-8f38-8f919ad0ece8"
    ],
    "childrenContainers": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Containers"
        ],
        "summary": "Create Container",
        "description": "Creates a new organization container with specific properties.",
        "operationId": "CreateOrgContainer",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Container properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgContainerInput"
              },
              "example": {
  "name": "OrgContainer1",
  "childrenOrganizations": [
    "5a9e523c-9acf-4585-8f38-8f919ad0ece8"
  ],
  "childrenContainers": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrgContainer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "e1057fbd-9ba7-4360-a27a-26e091419e14",
  "name": "OrgContainer1",
  "type": "Custom",
  "childrenOrganizations": [
    "5a9e523c-9acf-4585-8f38-8f919ad0ece8"
  ],
  "childrenContainers": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/containers/{containerUid}": {
      "get": {
        "tags": [
          "Containers"
        ],
        "summary": "Get Container",
        "description": "Returns a resource representation of an organization container with the specified UID.",
        "operationId": "GetOrgContainer",
        "parameters": [
          {
            "name": "containerUid",
            "in": "path",
            "description": "Container UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrgContainer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "e4c58977-2b42-4995-8e34-1836237d1783",
  "name": "Managed Companies",
  "type": "DefaultCompanies",
  "childrenOrganizations": [
    "7c184d87-53c6-4a24-b607-ccdb60f5cd20",
    "610a45df-81de-4f22-9717-19fcb709db4e",
    "781677c1-6ffb-48d8-a13f-6b5aa5484285",
    "84a9bf07-4739-47db-9be5-e19d0bf5de8a",
    "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "38a67935-c027-4011-8c46-d396bfb1b230"
  ],
  "childrenContainers": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/OrgContainer"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Containers"
        ],
        "summary": "Modify Container",
        "description": "Modifies an organization container with the specified UID.",
        "operationId": "PatchOrgContainer",
        "parameters": [
          {
            "name": "containerUid",
            "in": "path",
            "description": "Container UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "REST Container",
    "path": "/name",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrgContainer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "235124e8-a118-415d-9949-73a5a3ac637a",
  "name": "Container 1",
  "type": "Custom",
  "childrenOrganizations": [
    "5a9e523c-9acf-4585-8f38-8f919ad0ece8"
  ],
  "childrenContainers": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/OrgContainer"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Containers"
        ],
        "summary": "Delete Container",
        "description": "Deletes an organization container with the specified UID.",
        "operationId": "DeleteOrgContainer",
        "parameters": [
          {
            "name": "containerUid",
            "in": "path",
            "description": "Container UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "Container has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Resellers",
        "description": "Returns a collection resource representation of all resellers.",
        "operationId": "GetResellers",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ResellerExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Reseller"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "proPartnerId": "PRA-00001",
    "name": "Gamma",
    "status": "Active",
    "permissions": [
      "REST"
    ],
    "quota": {
      "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
      "serversQuota": null,
      "isServersQuotaUnlimited": true,
      "workstationsQuota": null,
      "isWorkstationsQuotaUnlimited": true,
      "dataTransferOutQuota": null,
      "isDataTransferOutQuotaUnlimited": true,
      "insiderProtectionQuota": null,
      "isWanAccelerationEnabled": false
    },
    "_embedded": {
      "organization": {
        "instanceUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
        "name": "Gamma",
        "alias": "gamma",
        "type": "Reseller",
        "taxId": "38567",
        "email": "s.smith@gamma.com",
        "phone": "414-351-6025",
        "country": 1,
        "state": 49,
        "city": "Milwaukee",
        "street": "3025 Johnny Lane",
        "notes": "",
        "zipCode": "53217",
        "website": "www.gamma.com",
        "companyId": "gamma"
      }
    }
  },
  {
    "instanceUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
    "proPartnerId": null,
    "name": "Delta",
    "status": "Active",
    "permissions": [
      "REST"
    ],
    "quota": {
      "resellerUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
      "serversQuota": null,
      "isServersQuotaUnlimited": true,
      "workstationsQuota": null,
      "isWorkstationsQuotaUnlimited": true,
      "dataTransferOutQuota": null,
      "isDataTransferOutQuotaUnlimited": true,
      "insiderProtectionQuota": null,
      "isWanAccelerationEnabled": false
    },
    "_embedded": {
      "organization": {
        "instanceUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
        "name": "Delta",
        "alias": "delta",
        "type": "Reseller",
        "taxId": "09876",
        "email": "m.lore@delta.com",
        "phone": "503-254-0212",
        "country": 1,
        "state": 37,
        "city": "Portland",
        "street": "5006 Gateway Road",
        "notes": "",
        "zipCode": "97220",
        "website": "www.delta.com",
        "companyId": "delta"
      }
    }
  },
  {
    "instanceUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "proPartnerId": null,
    "name": "Epsilon",
    "status": "Active",
    "permissions": [
      "REST"
    ],
    "quota": {
      "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
      "serversQuota": null,
      "isServersQuotaUnlimited": true,
      "workstationsQuota": null,
      "isWorkstationsQuotaUnlimited": true,
      "dataTransferOutQuota": null,
      "isDataTransferOutQuotaUnlimited": true,
      "insiderProtectionQuota": null,
      "isWanAccelerationEnabled": false
    },
    "_embedded": {
      "organization": {
        "instanceUid": "afdf791a-106e-429e-b2ca-72fed865b376",
        "name": "Epsilon",
        "alias": "epsilon",
        "type": "Reseller",
        "taxId": "65432",
        "email": "t.barb@epsilon.com",
        "phone": "916-336-1534",
        "country": 1,
        "state": 5,
        "city": "Sacramento",
        "street": "3211 Pearl Street",
        "notes": "Basic configuration",
        "zipCode": "95814",
        "website": "www.epsilon.com",
        "companyId": "2"
      }
    }
  },
  {
    "instanceUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
    "proPartnerId": null,
    "name": "Zeta",
    "status": "Active",
    "permissions": [
      "REST"
    ],
    "quota": {
      "resellerUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
      "serversQuota": null,
      "isServersQuotaUnlimited": true,
      "workstationsQuota": null,
      "isWorkstationsQuotaUnlimited": true,
      "dataTransferOutQuota": null,
      "isDataTransferOutQuotaUnlimited": true,
      "insiderProtectionQuota": null,
      "isWanAccelerationEnabled": false
    },
    "_embedded": {
      "organization": {
        "instanceUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
        "name": "Zeta",
        "alias": "zeta",
        "type": "Reseller",
        "taxId": "57228",
        "email": "s.steel@zeta.com",
        "phone": "416-988-1635",
        "country": 2,
        "state": null,
        "city": "Toronto",
        "street": "3920 Merton Street",
        "notes": "",
        "zipCode": "M1L 3K7",
        "website": "www.zeta.com",
        "companyId": "zeta"
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Create Reseller",
        "description": "Creates a new reseller with specific properties.",
        "operationId": "CreateReseller",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Reseller properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerInput"
              },
              "example": {
  "description": null,
  "proPartnerId": null,
  "organizationInput": {
    "name": "Atrium Solutions",
    "alias": "atrium",
    "taxId": "34598",
    "email": "d.baker@atrium.com",
    "phone": "606-932-3427",
    "country": 1,
    "state": 17,
    "city": "South Shore",
    "street": "464 Hinkle Deegan Lake Road",
    "notes": "Basic configuration",
    "zipCode": "41175",
    "website": "www.atrium.com",
    "companyId": "2"
  },
  "quota": {
    "resellerUid": "00000000-0000-0000-0000-000000000000",
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "dataTransferOutQuota": null,
    "isDataTransferOutQuotaUnlimited": true,
    "insiderProtectionQuota": 0,
    "isWanAccelerationEnabled": false
  },
  "ownerCredentials": {
    "userName": "owner",
    "password": "Password1"
  },
  "permissions": [
    "REST"
  ]
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8994096d-e3f1-45a6-8bb5-e6b8bdab220b",
  "proPartnerId": null,
  "name": "Atrium Solutions",
  "status": "Active",
  "permissions": [
    "REST"
  ],
  "quota": {
    "resellerUid": "8994096d-e3f1-45a6-8bb5-e6b8bdab220b",
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "dataTransferOutQuota": null,
    "isDataTransferOutQuotaUnlimited": true,
    "insiderProtectionQuota": null,
    "isWanAccelerationEnabled": false
  },
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/identityProviders": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get All Identity Providers",
        "description": "Returns a collection resource representation of all identity providers.",
        "operationId": "GetIdentityProviders",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IdentityProviderSettings"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "name": "Alpha",
    "displayName": "Alpha",
    "template": "Keycloak",
    "type": "SAML2",
    "configurationValidationSucceeded": true,
    "errorMessage": null,
    "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Alpha\"\n returnUrl=\"https://vspc:1280/Saml2/Alpha/\"\n modulePath=\"Saml2/Alpha/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Alpha\" \n displayName=\"Alpha\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1MPIkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
    "rulesCount": 0,
    "configurationCompleted": true,
    "enabled": true,
    "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d"
  },
  {
    "name": "Sigma",
    "displayName": "Sigma",
    "template": "Keycloak",
    "type": "SAML2",
    "configurationValidationSucceeded": true,
    "errorMessage": null,
    "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Sigma\"\n returnUrl=\"https://vspc:1280/Saml2/Sigma/\"\n modulePath=\"Saml2/Sigma/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Sigma\" \n displayName=\"Sigma\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1MPIkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
    "rulesCount": 0,
    "configurationCompleted": true,
    "enabled": true,
    "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/identityProviders/name": {
      "post": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Check Uniqueness of Identity Provider Name.",
        "description": "Checks whether the specified name of an identity provider is unique.",
        "operationId": "CheckUniquenessForIdentityProviderName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "maxLength": 32,
              "minLength": 5,
              "pattern": "^[\\._a-zA-Z0-9]+$",
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "The `true` value indicates that the identity provider name is unique. The `false` value insicates that the identity provider name is already taken.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "boolean",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": true
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get All Identity Providers of Organization",
        "description": "Returns a collection resource representation of all identity providers managing user identities of an organization with the specified UID.",
        "operationId": "GetOrganizationIdentityProviders",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IdentityProviderSettings"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "name": "Sigma",
    "displayName": "Sigma",
    "template": "Keycloak",
    "type": "SAML2",
    "configurationValidationSucceeded": true,
    "errorMessage": null,
    "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Sigma\"\n returnUrl=\"https://vspc:1280/Saml2/Sigma/\"\n modulePath=\"Saml2/Sigma/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Sigma\" \n displayName=\"Sigma\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1MPIkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
    "rulesCount": 2,
    "configurationCompleted": true,
    "enabled": true,
    "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/saml2": {
      "post": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Create SAML2 Identity Provider",
        "description": "Creates a new SAML2 identity provider.",
        "operationId": "CreateSaml2IdentityProvider",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderSettings"
              },
              "example": {
  "name": "Sigma",
  "displayName": "Sigma",
  "template": "Keycloak",
  "type": "SAML2",
  "configurationValidationSucceeded": true,
  "errorMessage": null,
  "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Sigma\"\n returnUrl=\"https://vspc:1280/Saml2/Sigma/\"\n modulePath=\"Saml2/Sigma/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Sigma\" \n displayName=\"Sigma\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1M3IkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
  "rulesCount": 0,
  "configurationCompleted": true,
  "enabled": true,
  "organizationUid": "00000000-0000-0000-0000-000000000000"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Resource representation of a created identity provider.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "Sigma",
  "displayName": "Sigma",
  "template": "Keycloak",
  "type": "SAML2",
  "configurationValidationSucceeded": true,
  "errorMessage": null,
  "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Sigma\"\n returnUrl=\"https://vspc:1280/Saml2/Sigma/\"\n modulePath=\"Saml2/Sigma/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Sigma\" \n displayName=\"Sigma\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1M3IkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
  "rulesCount": 0,
  "configurationCompleted": true,
  "enabled": true,
  "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-codegen-request-body-name": "settings",
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/rules": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get Mapping Rules of All Organization Identity Providers",
        "description": "Returns a collection resource representation of mapping rules configured for all identity providers of an organization with the specified UID.",
        "operationId": "GetOrganizationIdentityProvidersRules",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityProviderRoleMappingRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8cf555d6-b15b-4f4c-8956-e5e5dacc1a60",
    "name": "PortalAdministrator",
    "providerName": "Alpha",
    "description": "PortalAdministrator rule",
    "role": "PortalAdministrator",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Alpha",
        "displayName": "Alpha",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
        "enabled": true
      }
    }
  },
  {
    "instanceUid": "6ae66fdc-4ddf-448a-83b9-9998a6f76f31",
    "name": "ResellerOwner",
    "providerName": "Alpha",
    "description": "ResellerOwner rule",
    "role": "ResellerOwner",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Alpha",
        "displayName": "Alpha",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
        "enabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/identityProviders/rules": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get All Mapping Rules",
        "description": "Returns a collection resource representation of all mapping rules.",
        "operationId": "GetOrganizationsIdentityProvidersRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityProviderRoleMappingRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8cf555d6-b15b-4f4c-8956-e5e5dacc1a60",
    "name": "PortalAdministrator",
    "providerName": "Alpha",
    "description": "PortalAdministrator rule",
    "role": "PortalAdministrator",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Alpha",
        "displayName": "Alpha",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
        "enabled": true
      }
    }
  },
  {
    "instanceUid": "6ae66fdc-4ddf-448a-83b9-9998a6f76f31",
    "name": "ResellerOwner",
    "providerName": "Alpha",
    "description": "ResellerOwner rule",
    "role": "ResellerOwner",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Alpha",
        "displayName": "Alpha",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
        "enabled": true
      }
    }
  },
  {
    "instanceUid": "f98ca8e9-d990-456f-b5f8-ff584660587a",
    "name": "ResellerAdministrator",
    "providerName": "Sigma",
    "description": "ResellerAdministrator rule",
    "role": "ResellerAdministrator",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Sigma",
        "displayName": "Sigma",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351",
        "enabled": true
      }
    }
  },
  {
    "instanceUid": "1b7d075c-87da-4ae9-a2a7-75cb189b0c41",
    "name": "CompanyOwner",
    "providerName": "Sigma",
    "description": "CompanyOwner rule",
    "role": "CompanyOwner",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": {
        "name": "Sigma",
        "displayName": "Sigma",
        "template": "Keycloak",
        "type": "SAML2",
        "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351",
        "enabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/{identityProviderName}/rules": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get Mapping Rules of Organization Identity Provider",
        "description": "Returns a collection resource representation of mapping rules configured for an organization identity provider with the specified name.",
        "operationId": "GetIdentityProviderRules",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/IdentityProviderRoleMappingRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8cf555d6-b15b-4f4c-8956-e5e5dacc1a60",
    "name": "PortalAdministrator",
    "providerName": "Alpha",
    "description": "PortalAdministrator rule",
    "role": "PortalAdministrator",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": null
    }
  },
  {
    "instanceUid": "6ae66fdc-4ddf-448a-83b9-9998a6f76f31",
    "name": "ResellerOwner",
    "providerName": "Alpha",
    "description": "ResellerOwner rule",
    "role": "ResellerOwner",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": null
    }
  },
  {
    "instanceUid": "8b6997da-0fe7-4ce1-91e9-01d8290409fd",
    "name": "PortalReadonlyOperator",
    "providerName": "Alpha",
    "description": "PortalReadonlyOperator rule",
    "role": "PortalReadonlyOperator",
    "enabled": true,
    "managedCompaniesUids": null,
    "manageAllCompanies": true,
    "organizationMappingSourceClaimType": "Company",
    "locationsMappingSourceClaimType": null,
    "additionalMappings": [],
    "attributeMappings": [],
    "_embedded": {
      "providerInfo": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Create Mapping Rule for Organization Identity Provider",
        "description": "Creates mapping rule for an organization identity provider with the specified name.",
        "operationId": "CreateIdentityProviderRule",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
              },
              "example": {
  "instanceUid": "00000000-0000-0000-0000-000000000000",
  "name": "CompanyLocationUser",
  "providerName": null,
  "description": "Keycloak Company Location User",
  "role": "CompanyLocationUser",
  "enabled": true,
  "managedCompaniesUids": null,
  "manageAllCompanies": true,
  "organizationMappingSourceClaimType": "Company",
  "locationsMappingSourceClaimType": null,
  "additionalMappings": null,
  "attributeMappings": null,
  "_embedded": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created mapping rule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "7bd17374-37fb-40d6-828c-897bf1d3099b",
  "name": "CompanyLocationUser",
  "providerName": "Sigma",
  "description": "Keycloak Company Location User",
  "role": "CompanyLocationUser",
  "enabled": true,
  "managedCompaniesUids": null,
  "manageAllCompanies": true,
  "organizationMappingSourceClaimType": "Company",
  "locationsMappingSourceClaimType": null,
  "additionalMappings": [],
  "attributeMappings": [],
  "_embedded": {
    "providerInfo": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-codegen-request-body-name": "settings",
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/{identityProviderName}/rules/{ruleUid}": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get Organization Identity Provider Mapping Rule",
        "description": "Returns a resource representation of an organization identity provider mapping rule with the specified UID.",
        "operationId": "GetIdentityProviderRule",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Mapping rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8b6997da-0fe7-4ce1-91e9-01d8290409fd",
  "name": "PortalReadonlyOperator",
  "providerName": "Alpha",
  "description": "PortalReadonlyOperator rule",
  "role": "PortalReadonlyOperator",
  "enabled": false,
  "managedCompaniesUids": null,
  "manageAllCompanies": true,
  "organizationMappingSourceClaimType": "Company",
  "locationsMappingSourceClaimType": null,
  "additionalMappings": [],
  "attributeMappings": [],
  "_embedded": {
    "providerInfo": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Modify Organization Identity Provider Mapping Rule",
        "description": "Modifies an organization identity provider mapping rule with the specified UID.",
        "operationId": "PatchIdentityProviderRule",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Mapping rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "PortalReadonlyOperator_patched",
    "path": "/Name",
    "op": "replace"
  },
  {
    "value": false,
    "path": "/Enabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8b6997da-0fe7-4ce1-91e9-01d8290409fd",
  "name": "PortalReadonlyOperator_patched",
  "providerName": "Alpha",
  "description": "PortalReadonlyOperator rule",
  "role": "PortalReadonlyOperator",
  "enabled": false,
  "managedCompaniesUids": null,
  "manageAllCompanies": true,
  "organizationMappingSourceClaimType": "Company",
  "locationsMappingSourceClaimType": null,
  "additionalMappings": [],
  "attributeMappings": [],
  "_embedded": {
    "providerInfo": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/IdentityProviderRoleMappingRule"
        },
        "x-codegen-request-body-name": "modelPatches",
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Delete Organization Identity Provider Mapping Rule",
        "description": "Deletes an organization identity provider mapping rule with the specified UID.",
        "operationId": "DeleteIdentityProviderRule",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Mapping rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/{identityProviderName}": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get Organization Identity Provider",
        "description": "Returns a resource representation of an organization identity provider with the specified name.",
        "operationId": "GetIdentityProvider",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "Alpha",
  "displayName": "Alpha",
  "template": "Keycloak",
  "type": "SAML2",
  "configurationValidationSucceeded": true,
  "errorMessage": null,
  "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Alpha\"\n returnUrl=\"https://vspc:1280/Saml2/Alpha/\"\n modulePath=\"Saml2/Alpha/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Alpha\" \n displayName=\"Alpha\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1MPIkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
  "rulesCount": 0,
  "configurationCompleted": true,
  "enabled": true,
  "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/IdentityProviderSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Modify Organization Identity Provider",
        "description": "Modifies an organization identity provider with the specified name.",
        "operationId": "PatchIdentityProvider",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Alpha",
    "path": "/DisplayName",
    "op": "replace"
  },
  {
    "value": false,
    "path": "/Enabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/IdentityProviderSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "Alpha",
  "displayName": "Alpha",
  "template": "Keycloak",
  "type": "SAML2",
  "configurationValidationSucceeded": true,
  "errorMessage": null,
  "configuration": "\n <identityProvider>\n <saml2\n entityId=\"Alpha\"\n returnUrl=\"https://vspc:1280/Saml2/Alpha/\"\n modulePath=\"Saml2/Alpha/\"\n authenticateRequestSigningBehavior=\"IfIdpWantAuthnRequestsSigned\"\n outboundSigningAlgorithm=\"http://www.w3.org/2001/04/xmldsig-more#rsa-sha256\"\n > \n <compatibility ignoreMissingInResponseTo=\"true\" unpackEntitiesDescriptorInIdentityProviderMetadata=\"true\" />\n <nameIdPolicy format=\"EmailAddress\"/>\n <requestedAuthnContext \n comparison=\"Exact\"\n classRef=\"Password\"\n />\n <metadata \n cacheDuration=\"PT1H\" \n validDuration=\"7.12:00:00\" \n wantAssertionsSigned=\"true\"\n >\n <organization \n name=\"Alpha\" \n displayName=\"Alpha\" \n url=\"https://vspc:1280\" \n language=\"en\" \n />\n <contactPerson \n type=\"Other\" \n email=\"\" \n />\n <requestedAttributes>\n <add name=\"Minimal\" />\n </requestedAttributes>\n </metadata>\n <identityProviders>\n <add\n entityId=\"http://keycloak.vspc:8080/auth/realms/master\"\n metadataLocation=\"http://keycloak.vspc:8080/auth/realms/master/protocol/saml/descriptor\"\n allowUnsolicitedAuthnResponse=\"true\"\n loadMetadata=\"true\"\n />\n </identityProviders>\n \n \n <serviceCertificates>\n <add \n status=\"Current\"\n use=\"Both\"\n fileName=\"data:application/x-pkcs12;base64,MIIJ4AIBAzCCCZwGCSqGSIb3DQEHAaCCCY0EggmJMIIJhTCCBd4GCSqGSIb3DQEHAaCCBc8EggXLMIIFxzCCBcMGCyqGSIb3DQEMCgECoIIE/jCCBPowHAYKKoZIhvcNAQwBAzAOBAh+4+aU9uel+QICB9AEggTYZpp0tMgqweHx1/jkPuSD70AfAoongtgXpFSxKML8Rr88Qfnfqw1yvZJkKSagtRbV5EF0VLDrSZfg1Z1aMCLDd9A3wqvNC3BbgUe+bAdGrqCp3XvFDXd/tC1HN0EhwYkoZE5OwgfJm64dm+bzRuY1ANyrPjcPstc0aUwsryUwoaxXRfGEyhk5R7MXJBCyx/gkkooyXzkuceU1qb8L9IUyBN56XMt8xmR7iyTq2vcMzv+J4z9A2I9B2wnhnncSy1jvijKygMO0qGfL1dZV+tQtr5SYyVN6606+c99OMYwT8g0KWfNSLiDz5yMfNYb6b5kC4I/6samRwh/hDv7+edkVuftGb575nQn3lBkNq5PbRovseOIhREThicDx9ixq/GsbYn7x8ad8ZP/vX3NHO+eaialwzj1O+s6xCHiBZrfHjxnt5JqPpBJ/CUmNDTKoQ6k8jmm2ckhP+PXfZJJgI2LDKv1g8HSvWpGy1y8+PPXEnjDQDOSKLhh5irYWQxx25+3aWNh/+OAV6zszn7cI3uTZE8bN/3AECRFxWNJx5kR3FR7SVdR9dbjKj2aidOoDfGnGfSjpmY4Ow7yaBW4KzJMVi6ruU3zNuyK8wjqRHYfJQs2gDJdUG03gIGOucKps5rpbH0qzO4vGK1r9jrxHjuKPL1lZVAVE3nvZdqLR+dU7qyVKNNcRjYDobXiSeUtMaF6MrMSQeUKds1fz97ModxDuP71rp0jCzJi00v4lGy5SzwwGAbnwdUkbijJBiGER3f9Nts8Yx3/qQ4twlkrcLyn3xkY6VAQrY7p5T2wssR8xLKMgzU+CU/0KGDcTT2dTcTDQT1bcFZypuMDiIZ28BPzd5TReciFr+YthitEDvIHcDrG2UuY2Ir77yfD08iZIDy8jsIg9fDAeaGPQCIwlCuWDi4raYGg5FysqGujkxfz7hZUzs/F4vwWX0ouWvqjfPzsGRn+OS0ZCi28HXWM7he8iGAbZzA87XPOXyMEtZLrl/09tvSkHOfMd0yXPAXUNim6OMXHVWNwfdc7Da3dYUJM+FPc6A9uE5w0DDaXYFygCpP1bznpVSVq5AcRngcrJl/2+6GntvEHNL+5WVJqbqBQ8M+Lcg0exPX9OC/KoR0bl1L8RdvBL+m9XrJsX4kfScS/1kEPpUYD9BP+6PlEdjtwWzD7ub0GcvwfVekUti4REVbD0FuF3j6k7J/9RkYSp4HTak6P5ps1Qfo8ue8XdJBZUtqC674eb2aRrmkr2fvnzJych+ztPunOR6vMmdwE84ukEz1s6owp6qwmWnZ0Vaul3tbMZ89WGSaCdfKiwWPuXbtLEqTtx6FB2Af7vB4h8srViZRyXw/0GLEFwGme4IzXfoGuYo1vq5stsVm7jVlnHa75GHRCNH4te4UMrDtpv3L+qMCXmCGJ7uVc1B+Vg4pJF057ITuaBZN7DrPDjxtZA49u4z9SarRwhUbH3nmGHAr6/ntsB5CIs5KjxAoHX+OGazxE64zEKC4shR/Vj8MthKszfbfVYtP7IH9+DRurfh3zoqhPglXcYieQ4LKgyiyRgp66jpTg1/FeFSYQE3tVkHJIpu1B8NIcD3Bm7IGS8kV+MyW3OGebABVM4GDXlNbMRTqeegnlCfMAldXuSHEtXudIrKRV4P9rUWzGBsTATBgkqhkiG9w0BCRUxBgQEAQAAADAfBgkqhkiG9w0BCRQxEh4QAEEATQBHAC0AVgBBAEMAJDB5BgkrBgEEAYI3EQExbB5qAE0AaQBjAHIAbwBzAG8AZgB0ACAARQBuAGgAYQBuAGMAZQBkACAAUgBTAEEAIABhAG4AZAAgAEEARQBTACAAQwByAHkAcAB0AG8AZwByAGEAcABoAGkAYwAgAFAAcgBvAHYAaQBkAGUAcjCCA58GCSqGSIb3DQEHBqCCA5AwggOMAgEAMIIDhQYJKoZIhvcNAQcBMBwGCiqGSIb3DQEMAQMwDgQIDYEQnhB4LpsCAgfQgIIDWHYiX0spwWoCkzChuX/XoOFuQKfFPLxwHbr01mmlkMh9xaaETYiEys5drr7KP+jUw6dMy08NZJ9PV70TsEdG9DDL7EIidTsEA25CZXxLktyn730N2rmuGZ1hG1pB+Buj7wKSGQhF18I53s3q9S1bupWiV+xkhvxyp3DCjqY1GEKIzZiJFmIviVBEUxRtuWdIIwdbV1tcw/rIB71GsYB2vFo3V5as/J7nfWpTjiLSbORxWjkl8BRO0AUkg1qx5rQyeIBugn+ExzT+u51VeAdbTXwq8qLiKxaGvSiSyRX3AcrYLL/rW/pWGc/KNjnRxJpmZfe61J68oXigqdP7oKdaRvkJKyfeODd8SvdtkxA8w6sv+A3DPEeMAQUT5lYUoTRyjxZeSpScdyZBhuTNjidxb2AhWbd/7Z+AAK5+d7VzWMCLy0eGn0Af2PwI+IU3Tc0HIDz92+ijHNMZzAtIOnpGeAu/1iIIUlyFrALotSgO9r4KjIY3TgiUFQsvABNX3lcyImC4/IMqVzwPG0OmSYXz8DpDkO0bqVh+XKs1rRHGfO/hLJdzYygNSJgyWkut3SqXkSxvyDO5iQI4t8ziavQzWPUPKOj/LtqNFEzr1yy79G6TVLIc5by3OkglDUWOYeLopQQCEpYkxFaciRJOpAzXouhJbVVUtCLxGqUp/LQtWzJ0lrT4YumXNaW9AeZx+CUS76fyRrl+g3wsLs4jV80NM0W1cfweeIac6z0ql2/Q5UAkxy0yJZnoWJl8kCTCZ5TUADV8b/KoBZbz3EblZ0JthC4sKt3/DGjXuS0i+RxowAMX2+BpWuvp9838gXTkiJ2KLAGL1OaJn6m4tb2lAZSVh9gVrJBt2SL5mmZXCzt3XGuaN6bWm9RaPikXRCHTCz9DcwlKcMXu3OebVXD9XylVnSpptyxXKUhbRlT7QMSKKDLfqAZfG4aPbVEzWo95B0iHduOcDUN8biNxm5ZbBeJiXIhvhYBRkU/iyaBqUdCjuKIvXXCHBK1NQZLeQWDfTpMT3OLY37FEmVkK/lFO1dgowwAGE/URufqS/CgWC7r2WMsQRqX590vAi0Py2Cp+oh7SWm3fZqQax3r+5fPcpQMdnLsLjM3bQfp/9DjzexMwF9Er+n1MPIkIBw4wOzAfMAcGBSsOAwIaBBS9qHemVZA1Vk8rJ8KI6VlNkPRr5AQUCjqzhtsN24vg9lZfSDXHxyAbx0gCAgfQ\"\n />\n </serviceCertificates>\n </saml2>\n </identityProvider>\n ",
  "rulesCount": 0,
  "configurationCompleted": false,
  "enabled": false,
  "organizationUid": "40cc4945-9790-4f60-bee1-d0a6a0777351"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/IdentityProviderSettings"
        },
        "x-codegen-request-body-name": "modelPatches",
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Delete Organization Identity Provider",
        "description": "Deletes an organization identity provider with the specified name.",
        "operationId": "DeleteIdentityProvider",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/{identityProviderName}/revalidate": {
      "post": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Revalidate Organization Identity Provider",
        "description": "Revalidates an organization identity provider with the specified name.",
        "operationId": "RevalidateIdentityProvider",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/identityProviders/saml2/{identityProviderName}/metadata": {
      "get": {
        "tags": [
          "Single Sign On"
        ],
        "summary": "Get Metadata for Organization Identity Provider.",
        "description": "Returns content of the metadata XML file that is sent to an organization identity provider.\n> Error response is returned in the JSON format.'\n",
        "operationId": "GetSaml2IdentityProviderClientMetadata",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "identityProviderName",
            "in": "path",
            "description": "Identity provider name.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "object",
                  "description": "Metadata in the XML format."
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "x-veeam-allow-anonymous": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller",
        "description": "Returns a resource representation of a reseller with the specified UID.",
        "operationId": "GetReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
  "proPartnerId": null,
  "name": "Gamma",
  "status": "Active",
  "permissions": [
    "REST"
  ],
  "quota": {
    "resellerUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "dataTransferOutQuota": null,
    "isDataTransferOutQuotaUnlimited": true,
    "insiderProtectionQuota": null,
    "isWanAccelerationEnabled": false
  },
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/Reseller"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify Reseller",
        "description": "Modifies a reseller with the specified UID.",
        "operationId": "PatchReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/quota/IsWorkstationsQuotaUnlimited",
    "op": "replace"
  },
  {
    "value": 51,
    "path": "/quota/WorkstationsQuota",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Reseller"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
  "proPartnerId": null,
  "name": "Gamma",
  "status": "Active",
  "permissions": [
    "REST"
  ],
  "quota": {
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": 51,
    "isWorkstationsQuotaUnlimited": false,
    "dataTransferOutQuota": null,
    "isDataTransferOutQuotaUnlimited": true,
    "insiderProtectionQuota": null,
    "isWanAccelerationEnabled": false
  },
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/Reseller"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Delete Reseller",
        "description": "Deletes a reseller with the specified UID.",
        "operationId": "DeleteReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "Reseller has been deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/permissions": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller Permissions",
        "description": "Returns a resource representation of the Veeam Service Provider Console components that a reseller with the specified UID can access.",
        "operationId": "GetResellerPermissions",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerPermissions"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  "REST"
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerPermissions"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify Reseller Permissions",
        "description": "Modifies set of the Veeam Service Provider Console components that a reseller with the specified UID can access.",
        "operationId": "PatchResellerPermissions",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "REST",
    "path": "/-",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerPermissions"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  "REST"
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ResellerPermissions"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/welcomeEmail": {
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Send Welcome Email to Reseller",
        "description": "Sends a welcome email to a reseller with the specified UID.",
        "operationId": "SendWelcomeEmailToReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "requestBody": {
          "description": "Password for the account.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WelcomeEmailOptions"
              },
              "example": {
  "password": "Password1"
}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/companies": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Companies Managed by Reseller",
        "description": "Returns a collection resource representation of companies managed by a reseller with the specified UID.",
        "operationId": "GetCompaniesByReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompanyExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "Alpha",
    "status": "Active",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "name": "Alpha",
        "alias": "alpha",
        "type": "Company",
        "taxId": "12345",
        "email": "s.smith@alpha.com",
        "phone": "414-351-6025",
        "country": 1,
        "state": 49,
        "city": "Milwaukee",
        "street": "3025 Johnny Lane",
        "notes": "",
        "zipCode": "53217",
        "website": "www.alpha.com",
        "companyId": "alpha"
      }
    }
  },
  {
    "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Beta",
    "status": "Active",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
        "name": "Beta",
        "alias": "beta",
        "type": "Company",
        "taxId": "09876",
        "email": "m.lore@beta.com",
        "phone": "503-254-0212",
        "country": 1,
        "state": 37,
        "city": "Portland",
        "street": "5006 Gateway Road",
        "notes": "",
        "zipCode": "97220",
        "website": "www.beta.com",
        "companyId": "beta"
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Assign Company to Reseller",
        "description": "Assigns a company with the specified UID to a reseller.",
        "operationId": "AssignCompanyToReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyUid",
            "in": "query",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Unassign Company from Reseller",
        "description": "Unassigns a company with the specified UID from a reseller.",
        "operationId": "UnassignCompanyFromReseller",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "companyUid",
            "in": "query",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/configuration/notification/welcomeEmails": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get All Custom Settings of Email Notification",
        "description": "Returns a collection resource representation of all custom settings configured for email notifications.",
        "operationId": "GetCustomWelcomeEmailTemplates",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "Organization UID.",
              "format": "uuid",
              "nullable": true
            }
          },
          {
            "name": "organizationType",
            "in": "query",
            "schema": {
              "enum": [
                "Unknown",
                "Company",
                "Reseller"
              ],
              "type": "string",
              "description": "Organization type.",
              "nullable": true,
              "x-ms-enum": {
                "name": "NotificationOrganizationType"
              }
            }
          },
          {
            "name": "organizationScope",
            "in": "query",
            "schema": {
              "enum": [
                "Unknown",
                "CurrentObject",
                "ChildObjects"
              ],
              "type": "string",
              "description": "Scope of notified organizations.",
              "nullable": true,
              "x-ms-enum": {
                "name": "NotificationOrganizationScope"
              }
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "organizationType": "Company",
    "organizationScope": "CurrentObject",
    "emailContent": "Company welcome template",
    "showSelfServiceSection": true,
    "isDefault": false
  },
  {
    "organizationUid": "9119114e-6f0d-4a93-b8ab-d560b50c3cc3",
    "organizationType": "Reseller",
    "organizationScope": "CurrentObject",
    "emailContent": "Reseller welcome template",
    "showSelfServiceSection": true,
    "isDefault": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/notification/welcomeEmail": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Custom Settings of Organization Email Notifications",
        "description": "Returns a resource representation of custom settings configured for email notifications of an organization with the specified UID.",
        "operationId": "GetCustomWelcomeEmailTemplate",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Organization UID.",
              "format": "uuid"
            }
          },
          {
            "name": "organizationType",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "Company",
                "Reseller"
              ],
              "type": "string",
              "description": "Organization type.",
              "x-ms-enum": {
                "name": "NotificationOrganizationType"
              }
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
  "organizationType": "Company",
  "organizationScope": "CurrentObject",
  "emailContent": "Company welcome template",
  "showSelfServiceSection": true,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Configure Custom Settings for Organization Email Notifications",
        "description": "Configures custom settings for email notifications of an organization with the specified UID.",
        "operationId": "CreateCustomWelcomeEmailTemplate",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Email notification settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
              },
              "example": {
  "organizationUid": "00000000-0000-0000-0000-000000000000",
  "organizationType": "Company",
  "organizationScope": "CurrentObject",
  "emailContent": "SP_ Company welcome template",
  "showSelfServiceSection": true,
  "isDefault": false
}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
  "organizationType": "Company",
  "organizationScope": "CurrentObject",
  "emailContent": "SP_ Company welcome template",
  "showSelfServiceSection": true,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Custom Settings of Organization Email Notifications",
        "description": "Modifies custom settings configured for email notification of an organization with the specified UID.",
        "operationId": "PatchCustomWelcomeEmailTemplate",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "organizationType",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "Company",
                "Reseller"
              ],
              "type": "string",
              "description": "Organization type.",
              "x-ms-enum": {
                "name": "NotificationOrganizationType"
              }
            }
          },
          {
            "name": "organizationScope",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "Unknown",
                "CurrentObject",
                "ChildObjects"
              ],
              "type": "string",
              "description": "Scope of notified organizations.",
              "x-ms-enum": {
                "name": "NotificationOrganizationScope"
              }
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Reseller welcome template modified",
    "path": "/EmailContent",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "organizationUid": "9119114e-6f0d-4a93-b8ab-d560b50c3cc3",
  "organizationType": "Reseller",
  "organizationScope": "CurrentObject",
  "emailContent": "Rlab2_SP_ Reseller welcome template_modified",
  "showSelfServiceSection": true,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CustomWelcomeEmailTemplate"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/alarms": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get All Organization Alarm Templates",
        "description": "Returns a resource representation of all alarm templates configured for an organization with the specified UID.",
        "operationId": "GetOrganizationAlarms",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Alarm"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "21ebca1f-522a-4b25-896e-b724dc372e55",
    "name": "Job state",
    "category": "BackupVmJob",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "internalId": 1,
    "knowledge": {
      "summary": "Job is in a disabled state or without any configured schedule for more than an allowed time period.",
      "cause": "Veeam Backup & Replication server allows disabling scheduled jobs during maintenance windows. If a job stays in a disabled state or does not have any schedule at all for more than an allowed time period, it should be enabled back or the schedule has to be configured.",
      "resolution": "Enable all disabled jobs using the backup portal UI or the Veeam Backup & Replication console."
    },
    "isPredifined": true,
    "isEnabled": true
  },
  {
    "instanceUid": "a8fa1554-c420-447d-9d5e-fe5f1dedd397",
    "name": "Max allowed job duration",
    "category": "BackupVmJob",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "internalId": 2,
    "knowledge": {
      "summary": "Job has exceeded its allowed execution time.",
      "cause": "Veeam job has exceeded the configured threshold of maximum allowed job duration.",
      "resolution": "Verify that VMware CBT was used for all VMs in the configured backup/replication job. Check the number of read and transferred data blocks for each VM or changed files during the latest file job session, make sure your Veeam proxy servers have sufficient number of concurrently running tasks allowed. Alternatively, adjust the maximum allowed job duration threshold for this alarm. Once triggered, this alarm needs to be resolved manually."
    },
    "isPredifined": true,
    "isEnabled": true
  },
  {
    "instanceUid": "20f434f5-dc94-435b-8f81-e4f662ef19fa",
    "name": "Backup proxy connection state",
    "category": "BackupProxy",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "internalId": 3,
    "knowledge": {
      "summary": "Veeam Backup & Replication server lost connection to the proxy server.",
      "cause": "Veeam Backup & Replication may lose connection to the backup proxy due to one of the following reasons: failure of the network cable, disconnect of the cable, failure of the physical network card, backup proxy services failure, firewall issues, backup proxy power state.",
      "resolution": "Verify that backup proxy is accessible by Veeam Backup & Replication server. Check firewall settings on the proxy server (if applicable) and make sure Veeam backup proxy services are up and running."
    },
    "isPredifined": true,
    "isEnabled": true
  },
  {
    "instanceUid": "ee68f203-38f8-481c-92d1-6a168f064c07",
    "name": "Backup repository connection state",
    "category": "BackupRepository",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "internalId": 4,
    "knowledge": {
      "summary": "Veeam Backup & Replication server lost connection to the backup repository.",
      "cause": "Veeam Backup & Replication may lose connection to the backup repository due to one of the following reasons: failure of the network cable, disconnect of the cable, failure of the physical network card, backup repository services failure, firewall issues, backup repository power state.",
      "resolution": "Verify that backup repository is accessible by both backup proxy and Veeam Backup & Replication servers. Check firewall settings on the proxy server (if applicable) and make sure Veeam backup repository services are up and running."
    },
    "isPredifined": true,
    "isEnabled": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/alarms/enable": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Enable Organization Alarm Templates",
        "description": "Enables all alarm templates configured for an organization with the specified UID.",
        "operationId": "EnableOrganizationAlarms",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/alarms/disable": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Disable Organization Alarm Templates",
        "description": "Disables all alarm templates configured for an organization with the specified UID.",
        "operationId": "DisableOrganizationAlarms",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/policy": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization Policy Settings",
        "description": "Returns a resource representation of policy settings configured for an organization with the specified UID.",
        "operationId": "GetOrganizationPolicySettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PolicySettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "mfaPolicyStatus": "Enabled",
  "enforceMfaPolicy": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/PolicySettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Organization Policy Settings",
        "description": "Modifies policy settings configured for an organization with the specified UID.",
        "operationId": "PatchOrganizationPolicySettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Disabled",
    "path": "/MfaPolicyStatus",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PolicySettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "mfaPolicyStatus": "Disabled",
  "enforceMfaPolicy": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/PolicySettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/notification": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization Notification Settings",
        "description": "Returns a resource representation of notification settings of an organization with the specified UID.",
        "operationId": "GetOrganizationNotificationSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "smtp": {
    "serverAddress": "smtp://z.vspc.local:25",
    "tlsMode": "auto",
    "timeout": "00:05:00",
    "passwordCredential": null,
    "oAuth2Credential": null,
    "exclusivelyAcceptedCertificateHash": null,
    "serverCertificate": null
  },
  "billing": {
    "from": "billing@mycompany.com",
    "subject": "Billing Notifications"
  },
  "discovery": {
    "from": "discovery@mycompany.com",
    "to": "admin@mycompany.com",
    "subject": "Discovery Notifications",
    "isDailyNotificationEnabled": true,
    "dailyTime": "2021-08-16T10:00:00+02:00"
  },
  "alarms": {
    "from": "alarms@mycompany.com",
    "to": "admin@mycompany.com",
    "dailySubject": "Alarm Notification",
    "isDailyNotificationEnabled": true,
    "dailyTime": "2021-08-16T10:00:00+02:00"
  },
  "license": {
    "from": "licensing@mycompany.com",
    "to": "admin@mycompany.com",
    "enabled": true
  },
  "level": "summary",
  "defaultFrom": "notifications@mycompany.com"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/NotificationSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Organization Notification Settings",
        "description": "Modifies notification settings of an organization with the specified UID.",
        "operationId": "PatchOrganizationNotificationSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "notifications@mycompany.com",
    "path": "/defaultfrom",
    "op": "replace"
  },
  {
    "value": true,
    "path": "/license/enabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/NotificationSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "smtp": {
    "serverAddress": "smtp://z.vspc.local:25",
    "tlsMode": "auto",
    "timeout": "00:05:00",
    "passwordCredential": null,
    "oAuth2Credential": null,
    "exclusivelyAcceptedCertificateHash": null,
    "serverCertificate": null
  },
  "billing": {
    "from": "billing@mycompany.com",
    "subject": "Billing Notifications"
  },
  "discovery": {
    "from": "discovery@mycompany.com",
    "to": "admin@mycompany.com",
    "subject": "Discovery Notifications",
    "isDailyNotificationEnabled": true,
    "dailyTime": "2021-08-16T10:00:00+02:00"
  },
  "alarms": {
    "from": "alarms@mycompany.com",
    "to": "admin@mycompany.com",
    "dailySubject": "Alarm Notification",
    "isDailyNotificationEnabled": true,
    "dailyTime": "2021-08-16T10:00:00+02:00"
  },
  "license": {
    "from": "licensing@mycompany.com",
    "to": "admin@mycompany.com",
    "enabled": true
  },
  "level": "summary",
  "defaultFrom": "notifications@mycompany.com"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/NotificationSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/notification/smtp/test": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Test SMTP Server Settings",
        "description": "Checks provided SMTP server settings. Returns updated and corrected settings and additional information on SMTP server.",
        "operationId": "TestNotificationSmtpSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "SMTP settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SmtpSettings"
              },
              "example": {
  "serverAddress": "smtp://z.vspc.local:25",
  "tlsMode": "auto",
  "timeout": "00:05:00",
  "passwordCredential": null,
  "oAuth2Credential": null,
  "exclusivelyAcceptedCertificateHash": null,
  "serverCertificate": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SmtpSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "serverAddress": "smtp://z.vspc.local:25/",
  "tlsMode": "auto",
  "timeout": "00:05:00",
  "passwordCredential": null,
  "oAuth2Credential": null,
  "exclusivelyAcceptedCertificateHash": null,
  "serverCertificate": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/notification/test": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Test Email Notifications",
        "description": "Sends test email message with the specified settings.",
        "operationId": "SendTestNotificationEmail",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "requestBody": {
          "description": "Test email settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestEmailOptions"
              },
              "example": {
  "from": "notification@mycompany.com",
  "to": "s.smith@mycompany.com"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/branding": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization Branding Settings",
        "description": "Returns a resource representation of branding settings of an organization with the specified UID.",
        "operationId": "GetOrganizationBrandingSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BrandingSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "webUri": "https://vspcsrv:1280/",
  "portalColorTheme": "Turquoise"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/BrandingSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Organization Branding Settings",
        "description": "Modifies branding settings of an organization with the specified UID.",
        "operationId": "PatchOrganizationBrandingSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Green",
    "path": "/portalColorTheme",
    "op": "replace"
  },
  {
    "value": "https://vspcsite1:1280/",
    "path": "/WebUri",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BrandingSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "webUri": "https://vspcsite1:1280/",
  "portalColorTheme": "Green"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BrandingSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/autodeployment": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization Automatic Deployment Settings",
        "description": "Returns a resource representation of Veeam backup agent automatic deployment settings configured for an organization with the specified UID.",
        "operationId": "GetOrganizationAutoDeploymentSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AutoDeploymentSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
  "isEnabled": false,
  "windowsBackupPolicyUid": null,
  "linuxBackupPolicyUid": null,
  "macBackupPolicyUid": null,
  "isRetryEnabled": false,
  "retryCount": 3,
  "retryInterval": 7,
  "acceptNewConnections": true,
  "installDriver": false,
  "setReadOnlyAccess": true,
  "backupAgentSettings": {
    "backupAgentUid": "00000000-0000-0000-0000-000000000000",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbitPerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/AutoDeploymentSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Organization Automatic Deployment Settings",
        "description": "Modifies Veeam backup agent automatic deployment settings configured for an organization with the specified UID.",
        "operationId": "PatchOrganizationAutoDeploymentSettings",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "7",
    "path": "/retryCount",
    "op": "replace"
  },
  {
    "value": "7",
    "path": "/retryInterval",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/AutoDeploymentSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
  "isEnabled": false,
  "windowsBackupPolicyUid": null,
  "linuxBackupPolicyUid": null,
  "macBackupPolicyUid": null,
  "isRetryEnabled": false,
  "retryCount": 7,
  "retryInterval": 7,
  "acceptNewConnections": true,
  "installDriver": false,
  "setReadOnlyAccess": false,
  "backupAgentSettings": {
    "backupAgentUid": "00000000-0000-0000-0000-000000000000",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbitPerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/AutoDeploymentSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/licenseResource": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Reseller License Management Resources",
        "description": "Returns a collection resource representation of all license management resources allocated to resellers.",
        "operationId": "GetResellersLicenseResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerLicenseResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "pulseConfigurationStatus": "Warning",
    "pulseConfigurationStatusMessage": "The VCSP Pulse plugin has been disabled by the service provider. ",
    "isLicenseManagementEnabled": false,
    "licenseContractId": null,
    "licensePointsQuota": 0,
    "isLicensePointsQuotaUnlimited": true,
    "licensePointsUsage": 0.0,
    "isCreatingNewCompaniesToPulseEnabled": false
  },
  {
    "resellerUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
    "pulseConfigurationStatus": "Warning",
    "pulseConfigurationStatusMessage": "The VCSP Pulse plugin has been disabled by the service provider. ",
    "isLicenseManagementEnabled": false,
    "licenseContractId": null,
    "licensePointsQuota": 0,
    "isLicensePointsQuotaUnlimited": true,
    "licensePointsUsage": 0.0,
    "isCreatingNewCompaniesToPulseEnabled": false
  },
  {
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "pulseConfigurationStatus": "Warning",
    "pulseConfigurationStatusMessage": "The VCSP Pulse plugin has been disabled by the service provider. ",
    "isLicenseManagementEnabled": false,
    "licenseContractId": null,
    "licensePointsQuota": 0,
    "isLicensePointsQuotaUnlimited": true,
    "licensePointsUsage": 0.0,
    "isCreatingNewCompaniesToPulseEnabled": false
  },
  {
    "resellerUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
    "pulseConfigurationStatus": "Warning",
    "pulseConfigurationStatusMessage": "The VCSP Pulse plugin has been disabled by the service provider. ",
    "isLicenseManagementEnabled": false,
    "licenseContractId": null,
    "licensePointsQuota": 0,
    "isLicensePointsQuotaUnlimited": true,
    "licensePointsUsage": 0.0,
    "isCreatingNewCompaniesToPulseEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/licenseResource": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get License Management Resource Allocated to Reseller",
        "description": "Returns a resource representation of a license management resource allocated to a reseller with the specified UID.",
        "operationId": "GetResellerLicenseResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerLicenseResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
  "pulseConfigurationStatus": "Warning",
  "pulseConfigurationStatusMessage": "The VCSP Pulse plugin has been disabled by the service provider. ",
  "isLicenseManagementEnabled": false,
  "licenseContractId": null,
  "licensePointsQuota": 0,
  "isLicensePointsQuotaUnlimited": true,
  "licensePointsUsage": 0.0,
  "isCreatingNewCompaniesToPulseEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerLicenseResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify License Management Resource Allocated to Reseller",
        "description": "Modifies a license management resource allocated to a reseller with the specified UID.",
        "operationId": "PatchResellerLicenseResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "true",
    "path": "/isLicenseManagementEnabled",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerLicenseResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resellerUid": "6774727f-9610-4ee0-b057-0974de797c4b",
  "pulseConfigurationStatus": "NotConfigured",
  "pulseConfigurationStatusMessage": "",
  "isLicenseManagementEnabled": true,
  "licenseContractId": null,
  "licensePointsQuota": 0,
  "isLicensePointsQuotaUnlimited": true,
  "licensePointsUsage": 0.0,
  "isCreatingNewCompaniesToPulseEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ResellerLicenseResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Reseller Site Resources",
        "description": "Returns a collection resource representation of managed company quotas configured for all resellers.",
        "operationId": "GetResellersSiteResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "tenantsQuota": 45,
    "usedTenantsQuota": 0,
    "isTenantsQuotaUnlimited": false
  },
  {
    "resellerUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "tenantsQuota": 45,
    "usedTenantsQuota": 0,
    "isTenantsQuotaUnlimited": false
  },
  {
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "tenantsQuota": 45,
    "usedTenantsQuota": 0,
    "isTenantsQuotaUnlimited": false
  },
  {
    "resellerUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "tenantsQuota": 45,
    "usedTenantsQuota": 0,
    "isTenantsQuotaUnlimited": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Site Resources Allocated to Reseller",
        "description": "Returns a collection resource representation of managed company quotas configured for a reseller with the specified UID on all sites.",
        "operationId": "GetResellerSiteResources",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "tenantsQuota": 45,
    "usedTenantsQuota": 13,
    "isTenantsQuotaUnlimited": false
  },
  {
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "siteUid": "491a2482-2d20-43d2-b199-d54fdde8dfee",
    "tenantsQuota": 25,
    "usedTenantsQuota": 7,
    "isTenantsQuotaUnlimited": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Create Reseller Site Resource",
        "description": "Creates a managed company quota for a reseller with the specified UID.",
        "operationId": "CreateResellerSiteResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Company quota properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerSiteResource"
              },
              "example": {
  "resellerUid": "00000000-0000-0000-0000-000000000000",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "tenantsQuota": 45,
  "usedTenantsQuota": 0,
  "isTenantsQuotaUnlimited": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "tenantsQuota": 45,
  "usedTenantsQuota": 0,
  "isTenantsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller Site Resource",
        "description": "Returns a resource representation of a managed companies quota configured for a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resellerUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
  "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
  "tenantsQuota": 50,
  "usedTenantsQuota": 9,
  "isTenantsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify Reseller Site Resource",
        "description": "Modifies a managed companies quota configured for a reseller on the site with the specified UID.",
        "operationId": "PatchResellerSiteResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/isTenantsQuotaUnlimited",
    "op": "replace"
  },
  {
    "value": 71,
    "path": "/tenantsQuota",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "tenantsQuota": 71,
  "usedTenantsQuota": 0,
  "isTenantsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ResellerSiteResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Delete Reseller Site Resource",
        "description": "Deletes a managed companies quota configured for a reseller on the site with the specified UID.",
        "operationId": "DeleteResellerSiteResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites/backupResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Reseller Backup Resources",
        "description": "Returns a collection resource representation of all reseller cloud backup resources.",
        "operationId": "GetResellersSiteBackupResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteBackupResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resourceFriendlyName": "GammaResource1",
    "storageQuota": 1073741824,
    "isStorageQuotaUnlimited": false,
    "serversQuota": 1,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": 1,
    "isWorkstationsQuotaUnlimited": false,
    "vmsQuota": 1,
    "isVmsQuotaUnlimited": false
  },
  {
    "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "3a6f094b-439f-4bbc-9ba7-9d58a280d32e",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resourceFriendlyName": "GammaResource2",
    "storageQuota": 2147483648,
    "isStorageQuotaUnlimited": false,
    "serversQuota": 2,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": 2,
    "isWorkstationsQuotaUnlimited": false,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true
  },
  {
    "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resourceFriendlyName": "GammaResource3",
    "storageQuota": 2147483648,
    "isStorageQuotaUnlimited": false,
    "serversQuota": 2,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": 2,
    "isWorkstationsQuotaUnlimited": false,
    "vmsQuota": 1,
    "isVmsQuotaUnlimited": false
  },
  {
    "instanceUid": "3cdd74a1-c5ab-6878-8207-8719924f8bd1",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resourceFriendlyName": "GammaResource4",
    "storageQuota": 53687091200,
    "isStorageQuotaUnlimited": false,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/backupResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Backup Resources Allocated to Reseller on Site",
        "description": "Returns a collection resource representation of all cloud backup resources allocated to a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteBackupResources",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteBackupResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resourceFriendlyName": "GammaResource",
    "storageQuota": 1073741824,
    "isStorageQuotaUnlimited": false,
    "serversQuota": 1,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": 1,
    "isWorkstationsQuotaUnlimited": false,
    "vmsQuota": 1,
    "isVmsQuotaUnlimited": false
  },
  {
    "instanceUid": "f9e2c149-7a33-4743-a755-717c3990581d",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "repositoryUid": "38d1847e-ae49-406f-a6b8-3636ae0504de",
    "resourceFriendlyName": "GammaResource2",
    "storageQuota": 1073741824,
    "isStorageQuotaUnlimited": false,
    "serversQuota": 2,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": 10,
    "isWorkstationsQuotaUnlimited": false,
    "vmsQuota": 10,
    "isVmsQuotaUnlimited": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Create Reseller Backup Resource on Site",
        "description": "Creates a reseller cloud backup resource on a site with the specified UID.",
        "operationId": "CreateResellerSiteBackupResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerSiteBackupResourceInput"
              },
              "example": {
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "resourceFriendlyName": "AtriumResource",
  "storageQuota": 1073741824,
  "isStorageQuotaUnlimited": false,
  "serversQuota": 1,
  "isServersQuotaUnlimited": false,
  "workstationsQuota": 1,
  "isWorkstationsQuotaUnlimited": false,
  "vmsQuota": 1,
  "isVmsQuotaUnlimited": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "resourceFriendlyName": "AtriumResource",
  "storageQuota": 1073741824,
  "isStorageQuotaUnlimited": false,
  "serversQuota": 1,
  "isServersQuotaUnlimited": false,
  "workstationsQuota": 1,
  "isWorkstationsQuotaUnlimited": false,
  "vmsQuota": 1,
  "isVmsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites/backupResources/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Usage of All Reseller Backup Resources",
        "description": "Returns a collection resource representation of cloud backup resource usage by all resellers.",
        "operationId": "GetResellersSiteBackupResourcesUsages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteBackupResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupResourceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "storageQuota": 32212254720,
    "usedStorageQuota": 9855565824,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 1,
    "workstationBackups": 0,
    "vmBackups": 0
  },
  {
    "backupResourceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "storageQuota": 53687091200,
    "usedStorageQuota": 12582912,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 1,
    "vmBackups": 0
  },
  {
    "backupResourceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "storageQuota": 53687091200,
    "usedStorageQuota": 0,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 0,
    "vmBackups": 0
  },
  {
    "backupResourceUid": "a509568f-1427-4f44-a548-e2028cf776b5",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "storageQuota": 53687091200,
    "usedStorageQuota": 1304428544,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 2608857088,
    "serverBackups": 2,
    "workstationBackups": 0,
    "vmBackups": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/backupResources/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Usage of Reseller Backup Resources on Site",
        "description": "Returns a resource representation of usage of all cloud backup resources allocated to a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteBackupResourcesUsage",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteBackupResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupResourceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "storageQuota": 32212254720,
    "usedStorageQuota": 9855565824,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 1,
    "workstationBackups": 0,
    "vmBackups": 0
  },
  {
    "backupResourceUid": "77204359-b0ea-440a-8c87-a5f6fff73757",
    "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
    "storageQuota": 53687091200,
    "usedStorageQuota": 1304428544,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 2608857088,
    "serverBackups": 2,
    "workstationBackups": 0,
    "vmBackups": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/backupResources/{resourceUid}": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller Backup Resource",
        "description": "Returns a resource representation of a reseller cloud backup resource with the specified UID.",
        "operationId": "GetResellerSiteBackupResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "57fb9596-ad1a-46de-ae9a-2a22ef29e3fc",
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "resourceFriendlyName": "GammaResource",
  "storageQuota": 1073741824,
  "isStorageQuotaUnlimited": false,
  "serversQuota": 1,
  "isServersQuotaUnlimited": false,
  "workstationsQuota": 1,
  "isWorkstationsQuotaUnlimited": false,
  "vmsQuota": 1,
  "isVmsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify Reseller Backup Resource",
        "description": "Modifies a reseller cloud backup resource with the specified UID.",
        "operationId": "PatchResellerSiteBackupResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": 2147483648,
    "path": "/storageQuota",
    "op": "replace"
  },
  {
    "value": 2,
    "path": "/serversQuota",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "94497043-29b2-62dd-a879-a70957f439c9",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "80ddb41c-dfe9-48f1-a461-c85f22e20015",
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "resourceFriendlyName": "CCRepo1",
  "storageQuota": 2147483648,
  "isStorageQuotaUnlimited": false,
  "serversQuota": 2,
  "isServersQuotaUnlimited": false,
  "workstationsQuota": 2,
  "isWorkstationsQuotaUnlimited": false,
  "vmsQuota": 1,
  "isVmsQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ResellerSiteBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Delete Reseller Backup Resource",
        "description": "Deletes a reseller cloud backup resource with the specified UID.",
        "operationId": "DeleteResellerSiteBackupResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites/replicationResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Reseller Replication Resources",
        "description": "Returns a collection resource representation of all reseller cloud replication resources.",
        "operationId": "GetResellersSiteReplicationResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanQuota": 10,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  },
  {
    "instanceUid": "f78fa44b-90bf-650b-bd09-337b175483ab",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
    "tenantsPerPlanQuota": 15,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  },
  {
    "instanceUid": "978ea884-3d58-6f4e-8734-b47a5f7ba2f6",
    "siteUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "hardwarePlanUid": "d784598f-32ae-452c-8886-fd4255944e7c",
    "tenantsPerPlanQuota": 15,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  },
  {
    "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "6a1faa21-3b93-4a9a-a5d0-d64df9db821b",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanQuota": 10,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/replicationResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Replication Resources Allocated to Reseller on Site",
        "description": "Returns a collection resource representation of all cloud replication resources allocated to a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteReplicationResources",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanQuota": 100,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  },
  {
    "instanceUid": "47594235-76ab-4e54-a913-664c73ca3c20",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "5697ea0c-4dd3-4525-a1c6-e3b9aa3b86f2",
    "tenantsPerPlanQuota": 50,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Create Reseller Replication Resource on Site",
        "description": "Creates a reseller site replication resource on a site with the specified UID.",
        "operationId": "CreateResellerSiteReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerSiteReplicationResourceInput"
              },
              "example": {
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "tenantsPerPlanQuota": 1073741824,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "db2d8172-ca2d-4b98-863a-a027945ad5ed",
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "tenantsPerPlanQuota": 1073741824,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites/replicationResources/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Usage of All Reseller Replication Resources",
        "description": "Returns a collection resource representation of site replication resource usage by all resellers.",
        "operationId": "GetResellersSiteReplicationResourcesUsages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "replicationResourceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanUsage": 8
  },
  {
    "replicationResourceUid": "f78fa44b-90bf-650b-bd09-337b175483ab",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
    "tenantsPerPlanUsage": 10
  },
  {
    "replicationResourceUid": "978ea884-3d58-6f4e-8734-b47a5f7ba2f6",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "hardwarePlanUid": "d784598f-32ae-452c-8886-fd4255944e7c",
    "tenantsPerPlanUsage": 13
  },
  {
    "replicationResourceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanUsage": 9
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteReplicationResourceUsage"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/replicationResources/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Usage of Replication Resources by Reseller on Site",
        "description": "Returns a resource representation of cloud replication resource usage by a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteReplicationResourcesUsage",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "replicationResourceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "tenantsPerPlanUsage": 12
  },
  {
    "replicationResourceUid": "95c0a947-6425-49ba-b3b4-0c34dbdcaf87",
    "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
    "hardwarePlanUid": "5697ea0c-4dd3-4525-a1c6-e3b9aa3b86f2",
    "tenantsPerPlanUsage": 8
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteReplicationResourceUsage"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/replicationResources/{resourceUid}": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller Replication Resource",
        "description": "Returns a resource representation of a reseller cloud replication resource with the specified UID.",
        "operationId": "GetResellerSiteReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "afdf791a-106e-429e-b2ca-72fed865b376",
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "tenantsPerPlanQuota": 1073741824,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Resellers"
        ],
        "summary": "Modify Reseller Replication Resource",
        "description": "Modifies a reseller cloud replication resource with the specified UID.",
        "operationId": "PatchResellerSiteReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": true,
    "path": "/isWanAccelerationEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cecf8d0a-593a-6fda-8c35-fd3b030800a2",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "resellerUid": "6a1faa21-3b93-4a9a-a5d0-d64df9db821b",
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "tenantsPerPlanQuota": 1073741824,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ResellerSiteReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Delete Reseller Replication Resource",
        "description": "Deletes a reseller cloud replication resource with the specified UID.",
        "operationId": "DeleteResellerSiteReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/sites/vcdReplicationResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All Reseller VMware Cloud Director Replication Resources",
        "description": "Returns a collection resource representation of all reseller VMware Cloud Director replication resources.",
        "operationId": "GetResellersSiteVcdReplicationResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteVcdReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "41bc34f2-b5ea-6cfd-a53c-7061060dd38b",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "vcdOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230"
  },
  {
    "instanceUid": "c73ce849-2c27-6226-8f1c-332e8483ea7e",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0"
  },
  {
    "instanceUid": "a69c79b6-686e-6e0a-beeb-65fe6aedc36c",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/vcdReplicationResources": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get All VMware Cloud Director Replication Resources Allocated to Reseller on Site",
        "description": "Returns a collection resource representation of all VMware Cloud Director replication resources allocated to a reseller on a site with the specified UID.",
        "operationId": "GetResellerSiteVcdReplicationResources",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerSiteVcdReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8745c308-006e-6a9e-9aaa-441722aaecbf",
    "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
    "resellerUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
    "vcdOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230"
  },
  {
    "instanceUid": "318a58ec-3ddc-686e-a11d-624f1f2521e8",
    "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
    "resellerUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
    "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0"
  },
  {
    "instanceUid": "0b3b8056-e33b-6988-b59f-025c69a878ef",
    "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
    "resellerUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
    "vcdOrganizationUid": "2dde13e4-1386-4714-9782-715486bca6e6"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Resellers"
        ],
        "summary": "Create Reseller VMware Cloud Director Replication Resource on Site",
        "description": "Creates a VMware Cloud Director replication resource allocated to a reseller on a site with the specified UID.",
        "operationId": "CreateResellerSiteVcdReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResellerSiteVcdReplicationResourceInput"
              },
              "example": {
  "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0"
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteVcdReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "318a58ec-3ddc-686e-a11d-624f1f2521e8",
  "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
  "resellerUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
  "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/sites/{siteUid}/vcdReplicationResources/{resourceUid}": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Reseller VMware Cloud Director Replication Resource",
        "description": "Returns a resource representation of a reseller VMware Cloud Director replication resource with the specified UID.",
        "operationId": "GetResellerSiteVcdReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "VMware CLoud Director replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ResellerSiteVcdReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "41bc34f2-b5ea-6cfd-a53c-7061060dd38b",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
  "vcdOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ResellerSiteVcdReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Resellers"
        ],
        "summary": "Delete Reseller VMware Cloud Director Replication Resource",
        "description": "Deletes a reseller VMware Cloud Director replication resource with the specified UID.",
        "operationId": "DeleteResellerSiteVcdReplicationResource",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "VMware Cloud Director replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/resellers/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Services Usage by All Resellers",
        "description": "Returns a collection resource representation of services consumed by resellers.",
        "operationId": "GetResellersAggregatedUsage",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start timestamp of a searched time range.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End timestamp of a searched time range. Total time range must be less than or equal to 31 day.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerAggregatedUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 1,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 41899,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 10983186,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 1,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 8622,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 16899,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 1085938,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 12582912,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 2,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 3,
        "type": "ManagedVms"
      },
      {
        "value": 8,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 4350718,
        "type": "FileShareBackupSize"
      },
      {
        "value": 1124,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 12582912,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 3,
        "type": "ReplicatedVms"
      },
      {
        "value": 4,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "resellerUid": "9998dc09-7eb8-4d4a-adef-8c2dfb68d2fe",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 1,
        "type": "VmCloudBackups"
      },
      {
        "value": 1,
        "type": "ServerCloudBackups"
      },
      {
        "value": 1,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 898730,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 5512720986,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 1206756,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 32239891086,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 1,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 36107752208,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 3317760,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 2771640320,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 5,
        "type": "ManagedServerAgents"
      },
      {
        "value": 1,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 3,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 4350718,
        "type": "FileShareBackupSize"
      },
      {
        "value": 1124,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 2886729728,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 1,
        "type": "ReplicatedVms"
      },
      {
        "value": 2,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "resellerUid": "8b5b0096-fc39-455a-8b70-754300bbf05f",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 1,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/resellers/{resellerUid}/usage": {
      "get": {
        "tags": [
          "Resellers"
        ],
        "summary": "Get Services Usage by Reseller",
        "description": "Returns a collection resource representation of services consumed by a reseller with the specified UID.",
        "operationId": "GetResellerAggregatedUsage",
        "parameters": [
          {
            "name": "resellerUid",
            "in": "path",
            "description": "Reseller UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start timestamp of a searched time range.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End timestamp of a searched time range. Total time range must be less than or equal to 31 day.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResellerAggregatedUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 1,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 41899,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 10983186,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 1,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 8622,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 16899,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 1085938,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 12582912,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 2,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 3,
        "type": "ManagedVms"
      },
      {
        "value": 8,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 4350718,
        "type": "FileShareBackupSize"
      },
      {
        "value": 1124,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 12582912,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 3,
        "type": "ReplicatedVms"
      },
      {
        "value": 4,
        "type": "BackedupVms"
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get All Organizations",
        "description": "Returns a collection resource representation of all organizations (service provider, resellers, companies).",
        "operationId": "GetOrganizations",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Organization"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "My Company",
    "alias": "mycompany",
    "type": "Company",
    "taxId": "12345",
    "email": "s.smith@mycompany.com",
    "phone": "414-351-6025",
    "country": 1,
    "state": 49,
    "city": "Milwaukee",
    "street": "3025 Johnny Lane",
    "notes": "",
    "zipCode": "53217",
    "website": "www.mycompany.com",
    "companyId": "mycompany"
  },
  {
    "instanceUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "name": "Beta",
    "alias": "beta",
    "type": "Reseller",
    "taxId": "09876",
    "email": "m.lore@beta.com",
    "phone": "503-254-0212",
    "country": 1,
    "state": 37,
    "city": "Portland",
    "street": "5006 Gateway Road",
    "notes": "",
    "zipCode": "97220",
    "website": "www.beta.com",
    "companyId": "beta"
  },
  {
    "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Alpha",
    "alias": "alpha",
    "type": "Company",
    "taxId": "65432",
    "email": "t.barb@alpha.com",
    "phone": "916-336-1534",
    "country": 1,
    "state": 5,
    "city": "Sacramento",
    "street": "3211 Pearl Street",
    "notes": "",
    "zipCode": "95814",
    "website": "www.alpha.com",
    "companyId": "alpha"
  },
  {
    "instanceUid": "54afb123-a422-422b-8db3-d2bfa3c2936c",
    "name": "Gamma",
    "alias": "gamma",
    "type": "Company",
    "taxId": "57228",
    "email": "s.steel@gamma.com",
    "phone": "416-988-1635",
    "country": 2,
    "state": null,
    "city": "Toronto",
    "street": "3920 Merton Street",
    "notes": "Basic configuration",
    "zipCode": "M1L 3K7",
    "website": "www.gamma.com",
    "companyId": "gamma"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/{organizationUid}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization",
        "description": "Returns a resource representation of an organization with the specified UID.",
        "operationId": "GetOrganization",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
  "name": "My Company",
  "alias": "mycompany",
  "type": "Provider",
  "taxId": "12345",
  "email": "s.smith@mycompany.com",
  "phone": "414-351-6025",
  "country": 1,
  "state": 49,
  "city": "Milwaukee",
  "street": "3025 Johnny Lane",
  "notes": "",
  "zipCode": "53217",
  "website": "www.mycompany.com",
  "companyId": "mycompany"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/Organization"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Organizations"
        ],
        "summary": "Modify Organization",
        "description": "Modifies an organization with the specified UID.",
        "operationId": "PatchOrganization",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "My Company",
    "path": "/name",
    "op": "replace"
  },
  {
    "value": "www.mycompany.com",
    "path": "/website",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8134a0d3-f397-4f0e-8a17-825d5d1455dd",
  "name": "My Company",
  "alias": "mycompany",
  "type": "Provider",
  "taxId": "12345",
  "email": "s.smith@mycompany.com",
  "phone": "414-351-6025",
  "country": 1,
  "state": 49,
  "city": "Milwaukee",
  "street": "3025 Johnny Lane",
  "notes": "",
  "zipCode": "53217",
  "website": "www.mycompany.com",
  "companyId": "mycompany"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/Organization"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/configuration/refreshsecuritytoken": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Refresh Organization Security Token",
        "description": "Refreshes a security token issued to an organization with the specified UID.",
        "operationId": "RefreshSecurityToken",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/users": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Organization Users",
        "description": "Returns a collection resource representation of all users created for a Veeam Service Provider Console organization with the specified UID.",
        "operationId": "GetUsersByOrganization",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f1ea605d-99e3-4152-88e6-aecc4d08a1d8",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "owner",
    "status": "Enabled",
    "mfaPolicyStatus": "Disabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyOwner",
    "profile": {
      "firstName": "Maria",
      "lastName": "Lore",
      "title": "Ms",
      "email": "m.lore@exonco.com",
      "address": null,
      "phone": "410-510-2317"
    },
    "credentials": {
      "userName": "owner",
      "password": null
    }
  },
  {
    "instanceUid": "41221ff1-a8fb-4abf-a1a9-cfc4542635b6",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "administrator1",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyAdministrator",
    "profile": {
      "firstName": "John",
      "lastName": "Brown",
      "title": "Mr",
      "email": "j.brown@exonco.com",
      "address": null,
      "phone": "443-704-7088"
    },
    "credentials": {
      "userName": "administrator1",
      "password": null
    }
  },
  {
    "instanceUid": "5ccc20c1-f256-4e60-aa71-82cc5311f8e6",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "iauditor",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyInvoiceAuditor",
    "profile": {
      "firstName": "Persephone",
      "lastName": "Lilly",
      "title": "Ms",
      "email": "p.lilly@exonco.com",
      "address": null,
      "phone": "443-831-9556"
    },
    "credentials": {
      "userName": "iauditor",
      "password": null
    }
  },
  {
    "instanceUid": "00c1876e-706f-436c-a3ea-026be43e6ec8",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "administrator2",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyAdministrator",
    "profile": {
      "firstName": "Paul",
      "lastName": "Lucker",
      "title": "Mr",
      "email": "p.lucker@exonco.com",
      "address": null,
      "phone": "443-404-0355"
    },
    "credentials": {
      "userName": "administrator2",
      "password": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/provider": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get Service Provider",
        "description": "Returns a resource representation of a service provider.",
        "operationId": "GetProvider",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProviderExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Provider"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "_embedded": {
    "organization": {
      "instanceUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "name": "My Company",
      "alias": "mycompany",
      "type": "Provider",
      "taxId": "12345",
      "email": "s.smith@mycompany.com",
      "phone": "414-351-6025",
      "country": 1,
      "state": 49,
      "city": "Milwaukee",
      "street": "3025 Johnny Lane",
      "notes": "",
      "zipCode": "53217",
      "website": "www.mycompany.com",
      "companyId": "mycompany"
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/provider/companies": {
      "get": {
        "tags": [
          "Provider"
        ],
        "summary": "Get Companies Managed by Service Provider",
        "description": "Returns a collection resource representation of all companies managed by a service provider.",
        "operationId": "GetProviderCompanies",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompanyExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "7c184d87-53c6-4a24-b607-ccdb60f5cd20",
    "name": "ExonCo",
    "status": "Active",
    "resellerUid": null,
    "subscriptionPlanUid": null,
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "7c184d87-53c6-4a24-b607-ccdb60f5cd20",
        "name": "ExonCo",
        "alias": "exonco",
        "type": "Company",
        "taxId": "09876",
        "email": "m.lore@exonco.com",
        "phone": "503-254-0212",
        "country": 1,
        "state": 37,
        "city": "Portland",
        "street": "5006 Gateway Road",
        "notes": "Company with network appliance",
        "zipCode": "97220",
        "website": "www.exonco.com",
        "companyId": "exonco"
      }
    }
  },
  {
    "instanceUid": "38a67935-c027-4011-8c46-d396bfb1b230",
    "name": "CJtech",
    "status": "Active",
    "resellerUid": null,
    "subscriptionPlanUid": null,
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "38a67935-c027-4011-8c46-d396bfb1b230",
        "name": "CJtech",
        "alias": "cjtec",
        "type": "Company",
        "taxId": "65432",
        "email": "t.barb@cjtech.com",
        "phone": "916-336-1534",
        "country": 1,
        "state": 5,
        "city": "Sacramento",
        "street": "3211 Pearl Street",
        "notes": "Company with network appliance",
        "zipCode": "95814",
        "website": "www.cjtech.com",
        "companyId": "cjtech"
      }
    }
  },
  {
    "instanceUid": "610a45df-81de-4f22-9717-19fcb709db4e",
    "name": "ShopFront",
    "status": "Deleting",
    "resellerUid": null,
    "subscriptionPlanUid": null,
    "permissions": [],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "610a45df-81de-4f22-9717-19fcb709db4e",
        "name": "ShopFront",
        "alias": "shopfront",
        "type": "Company",
        "taxId": "57228",
        "email": "s.steel@shopfront.com",
        "phone": "416-988-1635",
        "country": 2,
        "state": null,
        "city": "Toronto",
        "street": "3920 Merton Street",
        "notes": "",
        "zipCode": "M1L 3K7",
        "website": "www.shopfront.com",
        "companyId": "shopfront"
      }
    }
  },
  {
    "instanceUid": "781677c1-6ffb-48d8-a13f-6b5aa5484285",
    "name": "Alpha",
    "status": "Deleting",
    "resellerUid": null,
    "subscriptionPlanUid": null,
    "permissions": [],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "781677c1-6ffb-48d8-a13f-6b5aa5484285",
        "name": "Alpha",
        "alias": "alpha",
        "type": "Company",
        "taxId": "30587",
        "email": "r.boseman@alpha.com",
        "phone": "406-451-3913",
        "country": 1,
        "state": 26,
        "city": "Billings",
        "street": "397 West Fork Street",
        "notes": "",
        "zipCode": "59101",
        "website": "www.alpha.com",
        "companyId": "alpha"
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Companies",
        "description": "Returns a collection resource representation of all companies managed in Veeam Service Provider Console.",
        "operationId": "GetCompanies",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompanyExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "Alpha",
    "status": "Active",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "name": "Alpha",
        "alias": "alpha",
        "type": "Company",
        "taxId": "12345",
        "email": "s.smith@alpha.com",
        "phone": "414-351-6025",
        "country": 1,
        "state": 49,
        "city": "Milwaukee",
        "street": "3025 Johnny Lane",
        "notes": "",
        "zipCode": "53217",
        "website": "www.alpha.com",
        "companyId": "alpha"
      }
    }
  },
  {
    "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Beta",
    "status": "Active",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
        "name": "Beta",
        "alias": "beta",
        "type": "Company",
        "taxId": "09876",
        "email": "m.lore@beta.com",
        "phone": "503-254-0212",
        "country": 1,
        "state": 37,
        "city": "Portland",
        "street": "5006 Gateway Road",
        "notes": "",
        "zipCode": "97220",
        "website": "www.beta.com",
        "companyId": "beta"
      }
    }
  },
  {
    "instanceUid": "38a67935-c027-4011-8c46-d396bfb1b230",
    "name": "Gamma",
    "status": "Active",
    "resellerUid": null,
    "subscriptionPlanUid": null,
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "38a67935-c027-4011-8c46-d396bfb1b230",
        "name": "Gamma",
        "alias": "gamma",
        "type": "Company",
        "taxId": "65432",
        "email": "t.barb@gamma.com",
        "phone": "916-336-1534",
        "country": 1,
        "state": 5,
        "city": "Sacramento",
        "street": "3211 Pearl Street",
        "notes": "Company with network appliance",
        "zipCode": "95814",
        "website": "www.gamma.com",
        "companyId": "gamma"
      }
    }
  },
  {
    "instanceUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "Delta",
    "status": "Active",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "subscriptionPlanUid": "a9d25e18-83d5-4850-9b44-a3ed39ce46ba",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": true,
    "_embedded": {
      "organization": {
        "instanceUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "name": "Delta",
        "alias": "delta",
        "type": "Company",
        "taxId": "57228",
        "email": "s.steel@delta.com",
        "phone": "416-988-1635",
        "country": 2,
        "state": null,
        "city": "Toronto",
        "street": "3920 Merton Street",
        "notes": "",
        "zipCode": "M1L 3K7",
        "website": "www.delta.com",
        "companyId": "delta"
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company",
        "description": "Creates a new company managed in Veeam Service Provider Console.\n> After you create a company, you must create a company site resource by performing the `CreateCompanySiteResource` operation.\n",
        "operationId": "CreateCompany",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Company properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyInput"
              },
              "example": {
  "resellerUid": null,
  "organizationInput": {
    "name": "Alpha",
    "alias": "Alpha",
    "taxId": "643-70-9745",
    "email": "s.smith@alpha.com",
    "phone": "906-284-7082",
    "country": 1,
    "state": 22,
    "city": "Marquette",
    "street": "4493 Railroad Street",
    "notes": null,
    "zipCode": 49855,
    "website": "www.alpha.com",
    "companyId": 2
  },
  "subscriptionPlanUid": null,
  "permissions": [
    "REST"
  ],
  "IsAlarmDetectEnabled": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
  "name": "Alpha",
  "status": "Creating",
  "resellerUid": null,
  "subscriptionPlanUid": null,
  "permissions": [
    "REST"
  ],
  "isAlarmDetectEnabled": false,
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company",
        "description": "Returns a resource representation of a company with the specified UID.",
        "operationId": "GetCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "name": "CCTenantSecond",
  "status": "Active",
  "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
  "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
  "permissions": [
    "REST"
  ],
  "IsAlarmDetectEnabled": false,
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/Company"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company",
        "description": "Modifies a company managed in Veeam Service Provider Console.",
        "operationId": "PatchCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Disabled",
    "path": "/status",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Company"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "408720e8-5ffc-4ff0-a2ef-bef7f3db0d12",
  "name": "Alpha",
  "status": "Active",
  "resellerUid": "40cc4945-9790-4f60-bee1-d0a6a0777351",
  "subscriptionPlanUid": "f39909eb-2fcc-4637-845d-1bbc77a0b9eb",
  "permissions": [
    "REST"
  ],
  "IsAlarmDetectEnabled": true,
  "_embedded": {
    "organization": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/Company"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company",
        "description": "Deletes a company with the specified UID.",
        "operationId": "DeleteCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeAllAgents",
            "in": "query",
            "description": "Defines if all agents installed on the computers in the company infrastructure must be deleted.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "removeBackups",
            "in": "query",
            "description": "Defines if all backup files of a company must be deleted.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/permissions": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Permissions",
        "description": "Returns a collection resource representation of the Veeam Service Provider Console components that a company with the specified UID can access.",
        "operationId": "GetCompanyPermissions",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyPermissions"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  "REST"
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanyPermissions"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Permissions",
        "description": "Modifies a set of the Veeam Service Provider Console components that a company with the specified UID can access.",
        "operationId": "PatchCompanyPermissions",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "REST",
    "path": "/-",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyPermissions"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  "REST"
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanyPermissions"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/sites": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get All Site Licenses",
        "description": "Returns a collection resource representation of all licenses installed on the Veeam Cloud Connect servers.",
        "operationId": "GetSiteLicenses",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteLicense"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Backup"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": "2021-10-31T02:00:00+02:00",
    "supportExpirationDate": null,
    "licenseIds": [
      "00772222-1111-2222-3333-111122223333"
    ],
    "supportIds": [
      "00123456"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Valid",
    "cloudConnect": "Yes",
    "units": 1000.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  },
  {
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Backup"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": "2021-10-31T02:00:00+02:00",
    "supportExpirationDate": null,
    "licenseIds": [
      "00772222-1111-2222-3333-111122223333"
    ],
    "supportIds": [
      "00123456"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Valid",
    "cloudConnect": "Yes",
    "units": 1000.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  },
  {
    "siteUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Backup"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": "2021-10-31T02:00:00+02:00",
    "supportExpirationDate": null,
    "licenseIds": [
      "00772222-1111-2222-3333-111122223333"
    ],
    "supportIds": [
      "00123456"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Valid",
    "cloudConnect": "Yes",
    "units": 1000.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/{siteUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Site License",
        "description": "Returns a resource representation of a license installed on the Veeam Cloud Connect server with the specified UID.",
        "operationId": "GetSiteLicense",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "autoUpdateEnabled": false,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2021-10-31T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "00772222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "00123456"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "Yes",
  "units": 1000.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Install Site License",
        "description": "Installs a license on the Veeam Cloud Connect server with the specified UID.",
        "operationId": "InstallSiteLicense",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "license"
                ],
                "properties": {
                  "license": {
                    "type": "string",
                    "description": "License file.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "autoUpdateEnabled": true,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2021-10-31T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "00772222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "00123456"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "Yes",
  "units": 1000.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Licensing"
        ],
        "summary": "Modify Site License",
        "description": "Modifies a license on a Veeam Cloud Connect server with the specified UID.",
        "operationId": "PatchSiteLicense",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "true",
    "path": "/autoUpdateEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "autoUpdateEnabled": true,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2021-10-31T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "00772222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "00123456"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "Yes",
  "units": 1000.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/SiteLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Licensing"
        ],
        "summary": "Delete Site License",
        "description": "Deletes a license installed on the Veeam Cloud Connect server with the specified UID.",
        "operationId": "DeleteSiteLicense",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/{siteUid}/update": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Update Site License",
        "description": "Downloads a license from the Internet and installs it on the Veeam Cloud Connect server with the specified UID.",
        "operationId": "UpdateSiteLicense",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "autoUpdateEnabled": false,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2021-10-31T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "00772222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "00123456"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "Yes",
  "units": 1000.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of All Site Licenses",
        "description": "Returns a resource representation of the Veeam Cloud Connect licenses usage.",
        "operationId": "GetSitesUsage",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteCloudLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "installationId": "cba822da-e44f-4320-90b9-a626b05258ee",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "licenseId": "00772222-1111-2222-3333-111122223333",
    "counters": [
      {
        "type": "CC_Server_Backup",
        "unitType": "Points",
        "rentalUnits": 7.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_Workstation_Backup",
        "unitType": "Points",
        "rentalUnits": 6.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 2,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_VM_Backup",
        "unitType": "Points",
        "rentalUnits": 5.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_VM_Replica",
        "unitType": "Points",
        "rentalUnits": 0.0,
        "newUnits": 10.0,
        "usedUnits": 0.0,
        "rentalCount": 0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "installationId": "9a958eec-afee-4976-9194-a7b047377fab",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "licenseId": "00772222-1111-2222-3333-111122223333",
    "counters": [
      {
        "type": "CC_Workstation_Backup",
        "unitType": "Points",
        "rentalUnits": 3.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      }
    ]
  },
  {
    "installationId": "466a7235-f2ce-433d-9d5d-e7ab053236d5",
    "siteUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "licenseId": "00772222-1111-2222-3333-111122223333",
    "counters": [
      {
        "type": "CC_VM_Replica",
        "unitType": "Points",
        "rentalUnits": 0.0,
        "newUnits": 10.0,
        "usedUnits": 0.0,
        "rentalCount": 0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/{siteUid}/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Site License Usage",
        "description": "Returns a resource representation of license usage by the Veeam Cloud Connect server with the specified UID.",
        "operationId": "GetSiteUsage",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteCloudLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "installationId": "cba822da-e44f-4320-90b9-a626b05258ee",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "licenseId": "00772222-1111-2222-3333-111122223333",
  "counters": [
    {
      "type": "CC_Server_Backup",
      "unitType": "Points",
      "rentalUnits": 7.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_Workstation_Backup",
      "unitType": "Points",
      "rentalUnits": 6.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 2,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_VM_Backup",
      "unitType": "Points",
      "rentalUnits": 5.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_VM_Replica",
      "unitType": "Points",
      "rentalUnits": 0.0,
      "newUnits": 10.0,
      "usedUnits": 0.0,
      "rentalCount": 0,
      "newCount": 1,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/usage/companies": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Site Licenses by All Companies",
        "description": "Returns a resource representation of the Veeam Cloud Connect licenses usage by companies.",
        "operationId": "GetSiteUsageByCompanies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyCloudLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "counters": [
      {
        "type": "CC_Server_Backup",
        "unitType": "Points",
        "rentalUnits": 7.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_Workstation_Backup",
        "unitType": "Points",
        "rentalUnits": 3.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_VM_Backup",
        "unitType": "Points",
        "rentalUnits": 5.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "CC_VM_Replica",
        "unitType": "Points",
        "rentalUnits": 0.0,
        "newUnits": 10.0,
        "usedUnits": 0.0,
        "rentalCount": 0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "counters": [
      {
        "type": "CC_Workstation_Backup",
        "unitType": "Points",
        "rentalUnits": 3.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      }
    ]
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "tenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "counters": [
      {
        "type": "CC_Workstation_Backup",
        "unitType": "Points",
        "rentalUnits": 3.0,
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "rentalCount": 1,
        "newCount": 0,
        "usedCount": 0
      }
    ]
  },
  {
    "companyUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "tenantUid": "179c48b7-644f-4af8-b652-0b64de4784e5",
    "counters": [
      {
        "type": "CC_VM_Replica",
        "unitType": "Points",
        "rentalUnits": 0.0,
        "newUnits": 10.0,
        "usedUnits": 0.0,
        "rentalCount": 0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/usage/companies/{companyUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Site Licenses by Company",
        "description": "Returns a resource representation of the Veeam Cloud Connect license usage by a company with the specified UID.",
        "operationId": "GetSiteUsageByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyCloudLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
  "counters": [
    {
      "type": "CC_Server_Backup",
      "unitType": "Points",
      "rentalUnits": 7.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_Workstation_Backup",
      "unitType": "Points",
      "rentalUnits": 3.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_VM_Backup",
      "unitType": "Points",
      "rentalUnits": 5.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "CC_VM_Replica",
      "unitType": "Points",
      "rentalUnits": 0.0,
      "newUnits": 10.0,
      "usedUnits": 0.0,
      "rentalCount": 0,
      "newCount": 1,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/sites/usage/companies/vcc/{tenantUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup and Replication Licenses by Tenant",
        "description": "Returns a resource representation of Veeam Cloud Connect license usage by a tenant with the specified UID.",
        "operationId": "GetSiteUsageByTenantUID",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyCloudLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
  "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
  "counters": [
    {
      "type": "CC_Workstation_Backup",
      "unitType": "Points",
      "rentalUnits": 3.0,
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "rentalCount": 1,
      "newCount": 0,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/reports": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get All License Usage Reports",
        "description": "Returns a collection resource representation of the Veeam license usage reports.",
        "operationId": "GetLicensingReports",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SingleLicenseReport"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 1,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 2,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/reports/latest": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Latest License Usage Reports",
        "description": "Returns a collection resource representation of the latest Veeam license usage reports.",
        "operationId": "GetLatestLicensingReports",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SingleLicenseReport"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 2,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 1,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/reports/{date}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get License Usage Reports for Date",
        "description": "Returns a collection resource representation of the Veeam license usage reports with the specified generation date.",
        "operationId": "GetLicensingReportsForDate",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "Report generation date in the YYYY-MM format.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SingleLicenseReport"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 1,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  {
    "reportStatus": "ApprovalRequired",
    "reportParemeters": {
      "reportId": 2,
      "organizationName": "My Company",
      "organizationUid": "138f54fc-8bac-4593-85d3-a5be7b3386a6",
      "licenseCompanyName": "Veeam Software Group GmbH",
      "generationDate": "2020-02-02T09:00:00+01:00",
      "reportInterval": {
        "startOfInterval": "2020-01-01T09:00:00+01:00",
        "endOfInterval": "2020-01-31T09:00:00+01:00"
      }
    },
    "reportSummary": {
      "totalPoints": 161.0,
      "productsUsage": [
        {
          "productType": "BackupAndReplication",
          "totalPoints": 143.0,
          "licenseEdition": "Enterprise Plus",
          "workloadUsage": [
            {
              "workloadType": "VBR_NAS_Backup",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VBR_VM",
              "initialCount": 10,
              "reportedCount": 10,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 130.0
            }
          ]
        },
        {
          "productType": "VSPC",
          "totalPoints": 18.0,
          "licenseEdition": "Standard",
          "workloadUsage": [
            {
              "workloadType": "VAC_Server_Agent",
              "initialCount": 2,
              "reportedCount": 1,
              "newCount": 0,
              "weight": 13.0,
              "usedPoints": 13.0
            },
            {
              "workloadType": "VAC_Workstation_Agent",
              "initialCount": 1,
              "reportedCount": 1,
              "newCount": 1,
              "weight": 5.0,
              "usedPoints": 5.0
            }
          ]
        }
      ]
    },
    "organizationsUsage": [
      {
        "organizationType": "Reseller",
        "organizationName": "Lambda",
        "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
        "tenantUid": null,
        "usedPoints": 161.0
      }
    ],
    "notCollectedCloudServers": null,
    "usageDetails": [
      {
        "organizationName": "Alpha",
        "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
        "tenantUid": null,
        "supportId": "00276360",
        "notCollectedClientServers": [],
        "clonedClientServers": null,
        "usageByLicenseAndProduct": [
          {
            "licenseId": "11112222-1111-2222-3333-111122223333",
            "productType": "BackupAndReplication",
            "licenseEdition": "Enterprise Plus",
            "usedPoints": 143.0,
            "workloadUsage": [
              {
                "workloadType": "VBR_NAS_Backup",
                "initialCount": 1,
                "reportedCount": 1,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 13.0
              },
              {
                "workloadType": "VBR_VM",
                "initialCount": 10,
                "reportedCount": 10,
                "newCount": 0,
                "weight": 13.0,
                "usedPoints": 130.0
              }
            ]
          }
        ]
      }
    ],
    "appendices": [
      {
        "licenseCompanyName": "Veeam Software AG",
        "appendixSummary": {
          "totalPoints": 30.0,
          "productsUsage": [
            {
              "productType": "CloudConnect",
              "totalPoints": 30.0,
              "licenseEdition": "Enterprise Plus",
              "workloadUsage": [
                {
                  "workloadType": "CC_VM_Replica",
                  "initialCount": 5,
                  "reportedCount": 3,
                  "newCount": 0,
                  "weight": 10.0,
                  "usedPoints": 30.0
                }
              ]
            }
          ]
        },
        "organizationsUsage": [
          {
            "organizationType": "Reseller",
            "organizationName": "Lambda",
            "organizationUid": "ac9d04a1-4a50-4780-8e82-1881bce59421",
            "tenantUid": null,
            "usedPoints": 30.0
          }
        ],
        "notCollectedCloudServers": [
          "srv7"
        ],
        "clonedCloudServers": null,
        "usageDetails": [
          {
            "organizationName": "Alpha",
            "organizationUid": "a69c7e6c-9dd3-4c3d-bcc2-a31353dd81ed",
            "tenantUid": null,
            "supportId": "00276360",
            "notCollectedClientServers": [],
            "clonedClientServers": null,
            "usageByLicenseAndProduct": [
              {
                "licenseId": "11112222-1111-2222-3333-111122223333",
                "productType": "CloudConnect",
                "licenseEdition": "Enterprise Plus",
                "usedPoints": 30.0,
                "workloadUsage": [
                  {
                    "workloadType": "CC_VM_Replica",
                    "initialCount": 5,
                    "reportedCount": 3,
                    "newCount": 0,
                    "weight": 10.0,
                    "usedPoints": 30.0
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/reports/finalization": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Finalize License Usage Reports",
        "description": "Finalize the Veeam license usage reports.",
        "operationId": "FinalizeLicensingReports",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LicenseReportFinalizationStatus"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "reportApprovalStatus": "Finalization",
  "message": "Finalization"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/reports/settings": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get License Usage Report Settings",
        "description": "Returns a resource representation of license usage report settings.",
        "operationId": "GetLicensingReportsSettings",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SingleLicenseReportSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "autoApprove": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/SingleLicenseReportSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Licensing"
        ],
        "summary": "Modify License Usage Report Settings",
        "description": "Modifies the Veeam licenses usage reports settings.",
        "operationId": "PatchLicensingReportsSettings",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": true,
    "path": "/AutoApprove",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SingleLicenseReportSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "autoApprove": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/SingleLicenseReportSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/licensing/backupServers": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get All Veeam Backup & Replication Licenses",
        "description": "Returns a collection resource representation of the licenses installed on all managed Veeam Backup & Replication servers.",
        "operationId": "GetBackupServersLicenses",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerLicense"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Backup"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": "2022-02-09T01:00:00+01:00",
    "supportExpirationDate": null,
    "licenseIds": [
      "e8bc6e2f-d91b-0916-9d6c-368369526fcc"
    ],
    "supportIds": [
      "02096572"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Valid",
    "cloudConnect": "No",
    "sockets": 0.0,
    "usedSockets": 0.0,
    "capacity": null,
    "usedCapacity": null,
    "units": 1300.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  },
  {
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Backup"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": "2022-02-09T01:00:00+01:00",
    "supportExpirationDate": null,
    "licenseIds": [
      "e8bc6e2f-d91b-0916-9d6c-368369526fcc"
    ],
    "supportIds": [
      "02096572"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Valid",
    "cloudConnect": "No",
    "sockets": 0.0,
    "usedSockets": 0.0,
    "capacity": null,
    "usedCapacity": null,
    "units": 1300.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  },
  {
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "autoUpdateEnabled": false,
    "edition": "Enterprise Plus",
    "monitoring": null,
    "packages": [
      "Suite"
    ],
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "contactPerson": null,
    "expirationDate": null,
    "supportExpirationDate": "2021-03-01T01:00:00+01:00",
    "licenseIds": [
      "11112222-1111-2222-3333-111122223333"
    ],
    "supportIds": [
      "02067762"
    ],
    "sectionTypes": [
      "Instance"
    ],
    "status": "Warning",
    "cloudConnect": "No",
    "sockets": 0.0,
    "usedSockets": 0.0,
    "capacity": null,
    "usedCapacity": null,
    "units": 100.0,
    "usedUnits": 4.0,
    "unitType": "Instances",
    "type": "Perpetual"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/{backupServerUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Backup & Replication License",
        "description": "Returns a resource representation of a license installed on a managed Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerLicense",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
  "autoUpdateEnabled": false,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Suite",
    "Essentials"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": null,
  "supportExpirationDate": "2022-03-01T09:00:00+01:00",
  "licenseIds": [
    "11112222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "02367762"
  ],
  "sectionTypes": [
    "Instance",
    "Socket"
  ],
  "status": "Warning",
  "cloudConnect": "No",
  "sockets": 100.0,
  "usedSockets": 0.0,
  "capacity": null,
  "usedCapacity": null,
  "units": 106.0,
  "usedUnits": 4.0,
  "unitType": "Instances",
  "type": "Perpetual"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Install Veeam Backup & Replication License",
        "description": "Install a license on a managed Veeam Backup & Replication server with the specified UID.",
        "operationId": "InstallBackupServerLicense",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "license"
                ],
                "properties": {
                  "license": {
                    "type": "string",
                    "description": "License file.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
  "autoUpdateEnabled": false,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Suite",
    "Essentials"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": null,
  "supportExpirationDate": "2021-03-01T09:00:00+01:00",
  "licenseIds": [
    "11112222-1111-2222-3333-111122223333"
  ],
  "supportIds": [
    "02067762"
  ],
  "sectionTypes": [
    "Instance",
    "Socket"
  ],
  "status": "Warning",
  "cloudConnect": "No",
  "sockets": 100.0,
  "usedSockets": 0.0,
  "capacity": null,
  "usedCapacity": null,
  "units": 106.0,
  "usedUnits": 4.0,
  "unitType": "Instances",
  "type": "Perpetual"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Licensing"
        ],
        "summary": "Delete Veeam Backup & Replication License",
        "description": "Deletes a license from a managed Veeam Backup & Replication server with the specified UID.",
        "operationId": "DeleteBackupServerLicense",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "sectionForDelete",
            "in": "query",
            "description": "License section that must be deleted.",
            "required": true,
            "schema": {
              "enum": [
                "Socket",
                "Instance",
                "All"
              ],
              "type": "string",
              "default": "All"
            },
            "x-ms-enum": {
              "name": "LicenseSectionTypeForDelete"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Licensing"
        ],
        "summary": "Modify Veeam Backup & Replication License",
        "description": "Modifies a license on a managed Veeam Backup & Replication server with the specified UID.",
        "operationId": "PatchBackupServerLicense",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "true",
    "path": "/autoUpdateEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
  "autoUpdateEnabled": true,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2022-04-30T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "c5b909ad-70e4-7d44-6dac-04b05d17bafd"
  ],
  "supportIds": [
    "02436535"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "No",
  "sockets": 0.0,
  "usedSockets": 0.0,
  "capacity": null,
  "usedCapacity": null,
  "units": 298.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupServerLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/{backupServerUid}/update": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Update Veeam Backup & Replication License",
        "description": "Downloads a new license from the Internet and installs it on a Veeam Backup & Replication server.",
        "operationId": "UpdateBackupServerLicense",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
  "autoUpdateEnabled": false,
  "edition": "Enterprise Plus",
  "monitoring": null,
  "packages": [
    "Backup"
  ],
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "contactPerson": null,
  "expirationDate": "2022-04-30T02:00:00+02:00",
  "supportExpirationDate": null,
  "licenseIds": [
    "c5b909ad-70e4-7d44-6dac-04b05d17bafd"
  ],
  "supportIds": [
    "02436535"
  ],
  "sectionTypes": [
    "Instance"
  ],
  "status": "Valid",
  "cloudConnect": "No",
  "sockets": 0.0,
  "usedSockets": 0.0,
  "capacity": null,
  "usedCapacity": null,
  "units": 298.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of All Veeam Backup & Replication Licenses",
        "description": "Returns a resource representation of the Veeam Backup & Replication licenses usage.",
        "operationId": "GetBackupServersUsage",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "installationId": "81c0b20d-c7d1-4783-966d-38e7e8f72102",
    "counters": [
      {
        "type": "VBR_vSphere_VM",
        "unitType": "Points",
        "newUnits": 33.0,
        "usedUnits": 0.0,
        "newCount": 3,
        "usedCount": 0
      },
      {
        "type": "VBR_NAS_Backup",
        "unitType": "Points",
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "VBR_Server_Agent",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "installationId": "56118b22-97f8-4663-aa70-5e125f905de6",
    "counters": [
      {
        "type": "VBR_vSphere_VM",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      },
      {
        "type": "VBR_NAS_Backup",
        "unitType": "Points",
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "VBR_Server_Agent",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "installationId": "cfab393f-dcbb-44a8-8c81-a453ef86f58a",
    "counters": [
      {
        "type": "VBR_vSphere_VM",
        "unitType": "Instances",
        "newUnits": 0.0,
        "usedUnits": 2.0,
        "newCount": 0,
        "usedCount": 2
      },
      {
        "type": "VBR_Cloud_VM",
        "unitType": "Instances",
        "newUnits": 0.0,
        "usedUnits": 2.0,
        "newCount": 0,
        "usedCount": 2
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/{backupServerUid}/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup & Replication License",
        "description": "Returns a resource representation of the license usage by a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerUsage",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
  "installationId": "81c0b20d-c7d1-4783-966d-38e7e8f72102",
  "counters": [
    {
      "type": "VBR_vSphere_VM",
      "unitType": "Points",
      "newUnits": 33.0,
      "usedUnits": 0.0,
      "newCount": 3,
      "usedCount": 0
    },
    {
      "type": "VBR_NAS_Backup",
      "unitType": "Points",
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "VBR_Server_Agent",
      "unitType": "Points",
      "newUnits": 11.0,
      "usedUnits": 0.0,
      "newCount": 1,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/usage/companies": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup & Replication Licenses by All Companies",
        "description": "Returns a resource representation of the Veeam Backup & Replication licenses usage by companies.",
        "operationId": "GetBackupServerUsageByCompanies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyBackupServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "counters": [
      {
        "type": "VBR_vSphere_VM",
        "unitType": "Points",
        "newUnits": 33.0,
        "usedUnits": 0.0,
        "newCount": 3,
        "usedCount": 0
      },
      {
        "type": "VBR_NAS_Backup",
        "unitType": "Points",
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "VBR_Server_Agent",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "tenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "counters": [
      {
        "type": "VBR_vSphere_VM",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      },
      {
        "type": "VBR_NAS_Backup",
        "unitType": "Points",
        "newUnits": 0.0,
        "usedUnits": 0.0,
        "newCount": 0,
        "usedCount": 0
      },
      {
        "type": "VBR_Server_Agent",
        "unitType": "Points",
        "newUnits": 11.0,
        "usedUnits": 0.0,
        "newCount": 1,
        "usedCount": 0
      }
    ]
  },
  {
    "companyUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "tenantUid": "179c48b7-644f-4af8-b652-0b64de4784e5",
    "counters": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/usage/companies/{companyUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup & Replication Licenses by Company",
        "description": "Returns a resource representation of the Veeam Backup & Replication license usage by a company with the specified UID.",
        "operationId": "GetBackupServerUsageByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyBackupServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
  "counters": [
    {
      "type": "VBR_vSphere_VM",
      "unitType": "Points",
      "newUnits": 33.0,
      "usedUnits": 0.0,
      "newCount": 3,
      "usedCount": 0
    },
    {
      "type": "VBR_NAS_Backup",
      "unitType": "Points",
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "VBR_Server_Agent",
      "unitType": "Points",
      "newUnits": 11.0,
      "usedUnits": 0.0,
      "newCount": 1,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/backupServers/usage/companies/vcc/{tenantUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup & Replication Licenses by Tenant",
        "description": "Returns a resource representation of Veeam Backup & Replication license usage by a tenant with the specified UID.",
        "operationId": "GetBackupServerUsageByTenantUID",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyBackupServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
  "counters": [
    {
      "type": "VBR_vSphere_VM",
      "unitType": "Points",
      "newUnits": 33.0,
      "usedUnits": 0.0,
      "newCount": 3,
      "usedCount": 0
    },
    {
      "type": "VBR_NAS_Backup",
      "unitType": "Points",
      "newUnits": 0.0,
      "usedUnits": 0.0,
      "newCount": 0,
      "usedCount": 0
    },
    {
      "type": "VBR_Server_Agent",
      "unitType": "Points",
      "newUnits": 11.0,
      "usedUnits": 0.0,
      "newCount": 1,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get All Veeam One Licenses",
        "description": "Returns a collection resource representation of the licenses installed on all managed Veeam One servers.",
        "operationId": "GetVOneServersLicenses",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VOneServerLicense"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "autoUpdateEnabled": true,
    "company": "ExonCo",
    "email": "m.lore@exonco.com",
    "expirationDate": "2022-03-01T01:00:00+01:00",
    "supportExpirationDate": null,
    "licenseId": "12ffb772-3041-dba6-005c-84e1c7e11b6d",
    "supportId": "02436535",
    "status": "Valid",
    "statusMessage": "Valid (196 days until expiration)",
    "sockets": null,
    "usedSockets": null,
    "units": 600.0,
    "usedUnits": 0.0,
    "unitType": "Points",
    "type": "Rental"
  },
  {
    "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "autoUpdateEnabled": true,
    "company": "Monitor Co",
    "email": "s.mercer@monitor.com",
    "expirationDate": "2024-01-01T01:00:00+01:00",
    "supportExpirationDate": null,
    "licenseId": null,
    "supportId": null,
    "status": "Valid",
    "statusMessage": "Valid",
    "sockets": null,
    "usedSockets": null,
    "units": 10000.0,
    "usedUnits": 0.0,
    "unitType": "Instances",
    "type": "Evaluation"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/{vOneServerUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam One License",
        "description": "Returns a resource representation of a license installed on a managed Veeam One server with the specified UID.",
        "operationId": "GetVOneServerLicense",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "autoUpdateEnabled": true,
  "company": "Monitor Co",
  "email": "s.mercer@monitor.com",
  "expirationDate": "2024-01-01T01:00:00+01:00",
  "supportExpirationDate": null,
  "licenseId": null,
  "supportId": null,
  "status": "Valid",
  "statusMessage": "Valid",
  "sockets": null,
  "usedSockets": null,
  "units": 10000.0,
  "usedUnits": 0.0,
  "unitType": "Instances",
  "type": "Evaluation"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Install Veeam One License",
        "description": "Install a license on a managed Veeam One server with the specified UID.",
        "operationId": "InstallVOneServerLicense",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "license"
                ],
                "properties": {
                  "license": {
                    "type": "string",
                    "description": "License file.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "autoUpdateEnabled": true,
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "expirationDate": "2022-03-01T01:00:00+01:00",
  "supportExpirationDate": null,
  "licenseId": "12ffb772-3041-dba6-005c-84e1c7e11b6d",
  "supportId": "02436535",
  "status": "Valid",
  "statusMessage": "Valid (196 days until expiration)",
  "sockets": null,
  "usedSockets": null,
  "units": 600.0,
  "usedUnits": 0.0,
  "unitType": "Points",
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Licensing"
        ],
        "summary": "Delete Veeam One License",
        "description": "Deletes a license from a managed Veeam One server with the specified UID.",
        "operationId": "DeleteVOneServerLicense",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Licensing"
        ],
        "summary": "Modify Veeam One License",
        "description": "Modifies a license on a managed Veeam One server with the specified UID.",
        "operationId": "PatchVOneServerLicense",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "true",
    "path": "/autoUpdateEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "autoUpdateEnabled": true,
  "company": "Monitor Co",
  "email": "s.mercer@monitor.com",
  "expirationDate": "2024-01-01T01:00:00+01:00",
  "supportExpirationDate": null,
  "licenseId": null,
  "supportId": null,
  "status": "Valid",
  "statusMessage": "Valid",
  "sockets": null,
  "usedSockets": null,
  "units": 10000.0,
  "usedUnits": 0.0,
  "unitType": "Instances",
  "type": "Evaluation"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/VOneServerLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/{vOneServerUid}/update": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Update Veeam One License",
        "description": "Downloads a new license from the Internet and installs it on a Veeam One server.",
        "operationId": "UpdateVOneServerLicense",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "autoUpdateEnabled": true,
  "company": "Monitor Co",
  "email": "s.mercer@monitor.com",
  "expirationDate": "2024-01-01T01:00:00+01:00",
  "supportExpirationDate": null,
  "licenseId": null,
  "supportId": null,
  "status": "Valid",
  "statusMessage": "Valid",
  "sockets": null,
  "usedSockets": null,
  "units": 10000.0,
  "usedUnits": 0.0,
  "unitType": "Instances",
  "type": "Evaluation"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of All Veeam One Licenses",
        "description": "Returns a resource representation of the Veeam One licenses usage.",
        "operationId": "GetVOneServersUsage",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VOneServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "installationId": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "counters": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/{vOneServerUid}/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam One License",
        "description": "Returns a resource representation of the license usage by a Veeam One server with the specified UID.",
        "operationId": "GetVOneServerUsage",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam One server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vOneServerUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "installationId": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "counters": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/usage/companies": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam One Licenses by All Companies",
        "description": "Returns a resource representation of the Veeam One licenses usage by companies.",
        "operationId": "GetVOneServerUsageByCompanies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyVOneServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "7185d08e-a2cb-492c-91f6-f2f6aa450acd",
    "tenantUid": "d60c1a41-2469-458e-b696-afafc119e550",
    "counters": []
  },
  {
    "companyUid": "501e7a55-736a-42ca-8969-b613679a1993",
    "tenantUid": "6190f5e8-5583-4980-8753-bc6bca547d70",
    "counters": []
  },
  {
    "companyUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
    "tenantUid": "255497a2-5678-4b71-a698-cc6f7d036141",
    "counters": []
  },
  {
    "companyUid": "2a65d274-4f75-4ad5-9e7e-7c216c808766",
    "tenantUid": "c60ec4d3-50cd-4c0b-9e23-75829182f694",
    "counters": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/usage/companies/{companyUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam One Licenses by Company",
        "description": "Returns a resource representation of the Veeam One license usage by a company with the specified UID.",
        "operationId": "GetVOneServerUsageByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyVOneServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "7185d08e-a2cb-492c-91f6-f2f6aa450acd",
  "tenantUid": "d60c1a41-2469-458e-b696-afafc119e550",
  "counters": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/voneServers/usage/companies/vcc/{tenantUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam One Licenses by Tenant",
        "description": "Returns a resource representation of Veeam One license usage by a tenant with the specified UID.",
        "operationId": "GetVOneServerUsageByTenantUID",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyVOneServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "7185d08e-a2cb-492c-91f6-f2f6aa450acd",
  "tenantUid": "d60c1a41-2469-458e-b696-afafc119e550",
  "counters": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get All Veeam Backup for Microsoft 365 Licenses",
        "description": "Returns a collection resource representation of the licenses installed on all managed Veeam Backup for Microsoft 365 servers.",
        "operationId": "GetVbm365ServersLicenses",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vbm365ServerLicense"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "vbm365ServerUid": "d548839e-b7a4-44bb-ae93-0d6d8230102e",
    "autoUpdateEnabled": false,
    "company": "Travis Drake Associates",
    "email": "b.bills@td.com",
    "expirationDate": "2022-05-31T09:00:00+02:00",
    "supportExpirationDate": "2022-05-30T19:00:00+02:00",
    "licenseId": "e0528883-7664-2a6a-45d4-1abbb1a24e8c",
    "supportId": "02599364",
    "status": "Valid",
    "licensedUsers": 200,
    "protectedUsers": 1,
    "type": "Rental"
  },
  {
    "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
    "autoUpdateEnabled": false,
    "company": "My Company",
    "email": "s.smith@mycompany.com",
    "expirationDate": "2021-09-21T09:00:00+02:00",
    "supportExpirationDate": "2021-09-20T19:00:00+02:00",
    "licenseId": "0374b039-5321-5901-7a45-d46c0327681c",
    "supportId": "00782619",
    "status": "Valid",
    "licensedUsers": 3,
    "protectedUsers": 4,
    "type": "Rental"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/{vbm365ServerUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Backup for Microsoft 365 License",
        "description": "Returns a resource representation of a license installed on a managed Veeam Backup for Microsoft 365 server with the specified UID.",
        "operationId": "GetVbm365ServerLicense",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365ServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
  "autoUpdateEnabled": false,
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "expirationDate": "2021-09-21T09:00:00+02:00",
  "supportExpirationDate": "2021-09-20T19:00:00+02:00",
  "licenseId": "0374b039-5321-5901-7a45-d46c0327681c",
  "supportId": "00782619",
  "status": "Valid",
  "licensedUsers": 3,
  "protectedUsers": 4,
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Install Veeam Backup for Microsoft 365 License",
        "description": "Install a license on a managed Veeam Backup for Microsoft 365 server with the specified UID.",
        "operationId": "InstallVbm365ServerLicense",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "license"
                ],
                "properties": {
                  "license": {
                    "type": "string",
                    "description": "License file.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365ServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
  "autoUpdateEnabled": false,
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "expirationDate": "2021-09-21T09:00:00+02:00",
  "supportExpirationDate": "2021-09-20T19:00:00+02:00",
  "licenseId": "0374b039-5321-5901-7a45-d46c0327681c",
  "supportId": "00782619",
  "status": "Valid",
  "licensedUsers": 3,
  "protectedUsers": 4,
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Licensing"
        ],
        "summary": "Modify Veeam Backup for Microsoft 365 License",
        "description": "Modifies a license on a managed Veeam Backup for Microsoft 365 server with the specified UID.",
        "operationId": "PatchVbm365ServerLicense",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "true",
    "path": "/autoUpdateEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365ServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
  "autoUpdateEnabled": true,
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "expirationDate": "2021-09-21T09:00:00+02:00",
  "supportExpirationDate": "2021-09-20T19:00:00+02:00",
  "licenseId": "0374b039-5321-5901-7a45-d46c0327681c",
  "supportId": "00782619",
  "status": "Valid",
  "licensedUsers": 3,
  "protectedUsers": 4,
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/Vbm365ServerLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/{vbm365ServerUid}/update": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Update Veeam Backup for Microsoft 365 License",
        "description": "Downloads a new license from the Internet and installs it on a Veeam Backup for Microsoft 365 server.",
        "operationId": "UpdateVbm365ServerLicense",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365ServerLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
  "autoUpdateEnabled": false,
  "company": "My Company",
  "email": "s.smith@mycompany.com",
  "expirationDate": "2021-09-21T09:00:00+02:00",
  "supportExpirationDate": "2021-09-20T19:00:00+02:00",
  "licenseId": "0374b039-5321-5901-7a45-d46c0327681c",
  "supportId": "00782619",
  "status": "Valid",
  "licensedUsers": 3,
  "protectedUsers": 4,
  "type": "Rental"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of All Veeam Backup for Microsoft 365 Licenses",
        "description": "Returns a resource representation of the Veeam Backup for Microsoft 365 licenses usage.",
        "operationId": "GetVbm365ServersUsage",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vbm365ServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "vbm365ServerUid": "d548839e-b7a4-44bb-ae93-0d6d8230102e",
    "installationId": "d548839e-b7a4-44bb-ae93-0d6d8230102e",
    "counters": [
      {
        "type": "User",
        "unitType": "Points",
        "newUnits": 0,
        "usedUnits": 1.5,
        "newCount": 0,
        "usedCount": 1
      }
    ]
  },
  {
    "vbm365ServerUid": "b1f03e61-8706-4771-9618-61d50d148c43",
    "installationId": "b1f03e61-8706-4771-9618-61d50d148c43",
    "counters": [
      {
        "type": "User",
        "unitType": "Points",
        "newUnits": 0,
        "usedUnits": 1.5,
        "newCount": 0,
        "usedCount": 1
      }
    ]
  },
  {
    "vbm365ServerUid": "64c114ed-625b-4677-a100-13319f54c559",
    "installationId": "64c114ed-625b-4677-a100-13319f54c559",
    "counters": [
      {
        "type": "User",
        "unitType": "Points",
        "newUnits": 0,
        "usedUnits": 6,
        "newCount": 0,
        "usedCount": 4
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/{vbm365ServerUid}/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup for Microsoft 365 License",
        "description": "Returns a resource representation of the license usage by a Veeam Backup for Microsoft 365 server with the specified UID.",
        "operationId": "GetVbm365ServerUsage",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365ServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "vbm365ServerUid": "d548839e-b7a4-44bb-ae93-0d6d8230102e",
  "installationId": "d548839e-b7a4-44bb-ae93-0d6d8230102e",
  "counters": [
    {
      "type": "User",
      "unitType": "Points",
      "newUnits": 0,
      "usedUnits": 1.5,
      "newCount": 0,
      "usedCount": 1
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/usage/companies": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup for Microsoft 365 Licenses by All Companies",
        "description": "Returns a resource representation of the Veeam Backup for Microsoft 365 licenses usage by companies.",
        "operationId": "GetVbm365ServerUsageByCompanies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyVbm365ServerLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "9bc8fd23-2956-4dbb-9abd-971e3805e91d",
    "tenantUid": "2bf95f32-a7cd-4885-b0aa-d19b2bd1c8f4",
    "counters": []
  },
  {
    "companyUid": "8eb60f1a-d473-4ec2-934c-580e52af0130",
    "tenantUid": "f0098020-e3be-4746-8f91-0448ab2e54a1",
    "counters": []
  },
  {
    "companyUid": "dec647d7-04d3-44f5-9cdc-0bdf1138595d",
    "tenantUid": "c0558cbf-8825-4da5-bc20-b860545d18b6",
    "counters": []
  },
  {
    "companyUid": "88f5206f-41c7-41ba-974a-e480ab01c438",
    "tenantUid": "aaa06b5d-1110-4754-a8d1-127f656e9660",
    "counters": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/usage/companies/{companyUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup for Microsoft 365 Licenses by Company",
        "description": "Returns a resource representation of the Veeam Backup for Microsoft 365 license usage by a company with the specified UID.",
        "operationId": "GetVbm365ServerUsageByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyVbm365ServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "9bc8fd23-2956-4dbb-9abd-971e3805e91d",
  "tenantUid": "2bf95f32-a7cd-4885-b0aa-d19b2bd1c8f4",
  "counters": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/vbm365Servers/usage/companies/vcc/{tenantUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Usage of Veeam Backup for Microsoft 365 Licenses by Tenant",
        "description": "Returns a resource representation of Veeam Backup for Microsoft 365 license usage by a tenant with the specified UID.",
        "operationId": "GetVbm365ServerUsageByTenantUID",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyVbm365ServerLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "9bc8fd23-2956-4dbb-9abd-971e3805e91d",
  "tenantUid": "2bf95f32-a7cd-4885-b0aa-d19b2bd1c8f4",
  "counters": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/licensing/console": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console License",
        "description": "Returns resource representation of the currently installed Veeam Service Provider Console license.",
        "operationId": "GetConsoleLicenseInformation",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ConsoleLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "licenseId": "00772222-1111-2222-3333-111122223333",
  "edition": "Enterprise Plus",
  "package": "Backup",
  "licenseeCompany": "My Company",
  "licenseeEmail": "ssmith@mycompany.com",
  "licenseeAdministratorEmail": null,
  "contactPerson": null,
  "expirationDate": "2021-10-31T08:00:00+01:00",
  "supportExpirationDate": null,
  "supportId": "00123456",
  "status": "Valid",
  "statusMessage": "Valid (77 days until expiration)",
  "cloudConnect": "Yes",
  "instances": 1000.0,
  "type": "Rental",
  "lastUpdateDate": null,
  "lastUpdateMessage": null,
  "lastUpdateStatus": "Unknown"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      },
      "put": {
        "tags": [
          "Licensing"
        ],
        "summary": "Install Veeam Service Provider Console License",
        "description": "Installs Veeam Service Provider Console license.",
        "operationId": "InstallConsoleLicense",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "license"
                ],
                "properties": {
                  "license": {
                    "type": "string",
                    "description": "License file.",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ConsoleLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "licenseId": "696ebff8-4d1d-166f-ad59-80f790374581",
  "edition": "Enterprise Plus",
  "package": "Backup",
  "licenseeCompany": "My Company",
  "licenseeEmail": "s.smith@mycompany.com",
  "licenseeAdministratorEmail": null,
  "contactPerson": null,
  "expirationDate": "2022-03-25T08:00:00+01:00",
  "supportExpirationDate": null,
  "supportId": "02100753",
  "status": "Valid",
  "statusMessage": "Valid (222 days until expiration)",
  "cloudConnect": "Yes",
  "instances": 10000.0,
  "type": "Rental",
  "lastUpdateDate": "2021-08-15T14:41:59.8918624+02:00",
  "lastUpdateMessage": null,
  "lastUpdateStatus": "Success"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/licensing/console/usage": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console License Usage",
        "description": "Returns a resource representation of the Veeam Service Provider Console license usage.",
        "operationId": "GetConsoleLicenseUsage",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ConsoleLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "unitType": "Points",
  "usedUnits": 0.0,
  "usedCount": 0.0,
  "newUnits": 71.0,
  "newCount": 9.0,
  "licensedUnits": 1000.0,
  "counters": [
    {
      "type": "VAC_Server_Agent",
      "unitType": "Points",
      "usedUnits": 0.0,
      "newUnits": 55.0,
      "newCount": 5,
      "usedCount": 0
    },
    {
      "type": "VAC_Workstation_Agent",
      "unitType": "Points",
      "usedUnits": 0.0,
      "newUnits": 16.0,
      "newCount": 4,
      "usedCount": 0
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/console/usage/companies": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console License Usage by All Companies",
        "description": "Returns a resource representation of the Veeam Service Provider Console license usage by managed companies.",
        "operationId": "GetConsoleLicenseUsageByCompanies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanyConsoleLicenseUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "counters": [
      {
        "type": "VAC_Server_Agent",
        "unitType": "Points",
        "usedUnits": 0.0,
        "usedCount": 0,
        "newUnits": 44.0,
        "newCount": 4
      },
      {
        "type": "VAC_Workstation_Agent",
        "unitType": "Points",
        "usedUnits": 0.0,
        "usedCount": 0,
        "newUnits": 4.0,
        "newCount": 1
      }
    ]
  },
  {
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "counters": [
      {
        "type": "VAC_Workstation_Agent",
        "unitType": "Points",
        "usedUnits": 0.0,
        "usedCount": 0,
        "newUnits": 8.0,
        "newCount": 2
      }
    ]
  },
  {
    "companyUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
    "tenantUid": "da324b1a-4a43-4101-93a9-0e57456debdd",
    "counters": [
      {
        "type": "VAC_Workstation_Agent",
        "unitType": "Points",
        "usedUnits": 0.0,
        "usedCount": 0,
        "newUnits": 4.0,
        "newCount": 1
      }
    ]
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "tenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "counters": [
      {
        "type": "VAC_Server_Agent",
        "unitType": "Points",
        "usedUnits": 0.0,
        "usedCount": 0,
        "newUnits": 11.0,
        "newCount": 1
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/console/usage/companies/{companyUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console License Usage by Company",
        "description": "Returns a resource representation of the Veeam Service Provider Console license usage by a managed company with the specified UID.",
        "operationId": "GetConsoleLicenseUsageByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyConsoleLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "tenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
  "counters": [
    {
      "type": "VAC_Server_Agent",
      "unitType": "Points",
      "usedUnits": 0.0,
      "usedCount": 0,
      "newUnits": 11.0,
      "newCount": 1
    },
    {
      "type": "VAC_Workstation_Agent",
      "unitType": "Points",
      "usedUnits": 0.0,
      "usedCount": 0,
      "newUnits": 4.0,
      "newCount": 1
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/console/usage/companies/vcc/{tenantUid}": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console Licenses Usage by Tenant",
        "description": "Returns a resource representation of Veeam Service Provider Console license usage by a tenant with the specified UID.",
        "operationId": "GetConsoleLicenseUsageByTenantUID",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanyConsoleLicenseUsage"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
  "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
  "counters": [
    {
      "type": "VAC_Workstation_Agent",
      "unitType": "Points",
      "usedUnits": 0.0,
      "usedCount": 0,
      "newUnits": 8.0,
      "newCount": 2
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/licensing/console/update": {
      "post": {
        "tags": [
          "Licensing"
        ],
        "summary": "Update Veeam Service Provider Console License",
        "description": "Downloads a new Veeam Service Provider Console license from the Internet and installs it.",
        "operationId": "UpdateConsoleLicense",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ConsoleLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "licenseId": "00772222-1111-2222-3333-111122223333",
  "edition": "Enterprise Plus",
  "package": "Backup",
  "licenseeCompany": "My Company",
  "licenseeEmail": "ssmith@mycompany.com",
  "licenseeAdministratorEmail": null,
  "contactPerson": null,
  "expirationDate": "2021-10-31T08:00:00+01:00",
  "supportExpirationDate": null,
  "supportId": "00123456",
  "status": "Valid",
  "statusMessage": "Valid (77 days until expiration)",
  "cloudConnect": "Yes",
  "instances": 1000.0,
  "type": "Rental",
  "lastUpdateDate": null,
  "lastUpdateMessage": null,
  "lastUpdateStatus": "Unknown"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/licensing/console/settings": {
      "get": {
        "tags": [
          "Licensing"
        ],
        "summary": "Get Veeam Service Provider Console License Settings",
        "description": "Returns a resource representation of the currently installed Veeam Service Provider Console license settings.",
        "operationId": "GetConsoleLicenseSettings",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LicenseSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "isAutoUpdateEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/welcomeEmail": {
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Send Welcome Email to Company",
        "description": "Sends a welcome email to a company with the specified UID.",
        "operationId": "SendWelcomeEmailToCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "requestBody": {
          "description": "Password for the account.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WelcomeEmailOptions"
              },
              "example": {
  "password": "Password1"
}
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/sites": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Company Site Resources",
        "description": "Returns a resource representation of all site resources allocated to all companies.",
        "operationId": "GetCompaniesSiteResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cloudTenantType": "General",
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "cloudTenantUid": "5734fee5-a895-4068-9971-5c6db44544e7",
    "vCloudOrganizationUid": null,
    "lastActive": null,
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "cloudadmin",
      "password": null
    },
    "description": "Created by Powershell at 14.08.2021 20:04:47.",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": false,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "GatewayPool",
    "gatewayPoolsUids": [
      "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3"
    ],
    "isGatewayFailoverEnabled": false
  },
  {
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "cloudTenantType": "General",
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "cloudTenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "vCloudOrganizationUid": null,
    "lastActive": "2021-08-15T02:39:00+02:00",
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "ccadmin",
      "password": null
    },
    "description": "Created by Powershell at 14.08.2021 20:37:53.",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": false,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "StandaloneGateways",
    "gatewayPoolsUids": [],
    "isGatewayFailoverEnabled": false
  },
  {
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "cloudTenantType": "VCD",
    "companyUid": "e812c8af-7fd6-4a28-8b50-59036d4f215e",
    "cloudTenantUid": "e3f510c9-79ee-4ae9-a3f7-e8de7fcff3dd",
    "vCloudOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "lastActive": null,
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "alphaadmin",
      "password": null
    },
    "description": "",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": false,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "StandaloneGateways",
    "gatewayPoolsUids": [],
    "isGatewayFailoverEnabled": false
  },
  {
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cloudTenantType": "General",
    "companyUid": "54afb123-a422-422b-8db3-d2bfa3c2936c",
    "cloudTenantUid": "0ae90e69-13e2-4c11-a527-6681af61e9f8",
    "vCloudOrganizationUid": null,
    "lastActive": null,
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "srv3admin",
      "password": null
    },
    "description": "",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": true,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "StandaloneGateways",
    "gatewayPoolsUids": [],
    "isGatewayFailoverEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Site Resources Allocated to Company",
        "description": "Returns a resource representation of site resources allocated to a company with the specified UID.",
        "operationId": "GetCompanySiteResources",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cloudTenantType": "General",
    "companyUid": "a66deeca-3480-4cf1-ab1d-022819b749c3",
    "cloudTenantUid": "94669d5b-3378-471c-be59-6953f9fef52e",
    "vCloudOrganizationUid": null,
    "lastActive": null,
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "admin",
      "password": null
    },
    "description": "",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": true,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "StandaloneGateways",
    "gatewayPoolsUids": [],
    "isGatewayFailoverEnabled": false
  },
  {
    "siteUid": "0c7813a9-d0b4-4c32-9f46-a2ebfd84fa20",
    "cloudTenantType": "General",
    "companyUid": "a66deeca-3480-4cf1-ab1d-022819b749c3",
    "cloudTenantUid": "94669d5b-3378-471c-be59-6953f9fef52e",
    "vCloudOrganizationUid": null,
    "lastActive": "2021-08-19T03:00:00Z",
    "leaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "ownerCredentials": {
      "userName": "owner",
      "password": null
    },
    "description": "",
    "throttlingEnabled": false,
    "throttlingValue": 1,
    "throttlingUnit": "MbytePerSec",
    "maxConcurrentTask": 1,
    "backupProtectionEnabled": true,
    "backupProtectionPeriodDays": 1,
    "gatewaySelectionType": "StandaloneGateways",
    "gatewayPoolsUids": [],
    "isGatewayFailoverEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company Site Resource",
        "description": "Allocates a new site resource to a company with the specified UID.",
        "operationId": "CreateCompanySiteResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "includeInSummaryEmail",
            "in": "query",
            "description": "Defines if credentials of a company owner must be sent to a service provider. False by default.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Site resource properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySiteResource"
              },
              "example": {
  "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
  "cloudTenantType": "VCD",
  "companyUid": "24edf757-97e3-49d1-a432-f0ea268d8380",
  "cloudTenantUid": "00000000-0000-0000-0000-000000000000",
  "vCloudOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
  "lastActive": null,
  "leaseExpirationEnabled": false,
  "leaseExpirationDate": null,
  "ownerCredentials": {
    "userName": "vcdTenant",
    "password": "Password1"
  },
  "description": null,
  "throttlingEnabled": false,
  "throttlingValue": 1,
  "throttlingUnit": "MbytePerSec",
  "maxConcurrentTask": 1,
  "backupProtectionEnabled": false,
  "backupProtectionPeriodDays": 7,
  "gatewaySelectionType": "StandaloneGateways",
  "gatewayPoolsUids": null,
  "isGatewayFailoverEnabled": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "151fe1fc-625a-46c4-819c-203d804388bc",
  "cloudTenantType": "VCD",
  "companyUid": "24edf757-97e3-49d1-a432-f0ea268d8380",
  "cloudTenantUid": "1c9560e7-8265-48db-98a4-f1a189d0f619",
  "vCloudOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
  "lastActive": null,
  "leaseExpirationEnabled": false,
  "leaseExpirationDate": null,
  "ownerCredentials": {
    "userName": "vcdTenant",
    "password": null
  },
  "description": "",
  "throttlingEnabled": false,
  "throttlingValue": 1,
  "throttlingUnit": "MbytePerSec",
  "maxConcurrentTask": 1,
  "backupProtectionEnabled": false,
  "backupProtectionPeriodDays": 1,
  "gatewaySelectionType": "StandaloneGateways",
  "gatewayPoolsUids": [],
  "isGatewayFailoverEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Site Resource",
        "description": "Returns a resource representation of company site resource with the specified UID.",
        "operationId": "GetCompanySiteResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "cloudTenantType": "General",
  "companyUid": "9fbce87c-09f1-458b-b545-a325309dcb6f",
  "cloudTenantUid": "f439eaa7-3c39-4c81-ac45-1a671b28d1c8",
  "vCloudOrganizationUid": null,
  "lastActive": null,
  "leaseExpirationEnabled": false,
  "leaseExpirationDate": null,
  "ownerCredentials": {
    "userName": "owner",
    "password": null
  },
  "description": "RESTv3 description",
  "throttlingEnabled": false,
  "throttlingValue": 1,
  "throttlingUnit": "MbytePerSec",
  "maxConcurrentTask": 1,
  "backupProtectionEnabled": true,
  "backupProtectionPeriodDays": 1,
  "gatewaySelectionType": "StandaloneGateways",
  "gatewayPoolsUids": [],
  "isGatewayFailoverEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Site Resource",
        "description": "Modifies a company site resource with the specified UID.",
        "operationId": "PatchCompanySiteResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "2025-07-09T00:00:00",
    "path": "/leaseExpirationDate",
    "op": "replace"
  },
  {
    "value": "admin",
    "path": "/ownercredentials/username",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "cloudTenantType": "General",
  "companyUid": "9fbce87c-09f1-458b-b545-a325309dcb6f",
  "cloudTenantUid": "f439eaa7-3c39-4c81-ac45-1a671b28d1c8",
  "vCloudOrganizationUid": null,
  "lastActive": null,
  "leaseExpirationEnabled": true,
  "leaseExpirationDate": "2025-07-09T02:00:00+02:00",
  "ownerCredentials": {
    "userName": "admin",
    "password": null
  },
  "description": "Modified Description",
  "throttlingEnabled": false,
  "throttlingValue": 1,
  "throttlingUnit": "MbytePerSec",
  "maxConcurrentTask": 1,
  "backupProtectionEnabled": true,
  "backupProtectionPeriodDays": 1,
  "gatewaySelectionType": "StandaloneGateways",
  "gatewayPoolsUids": [],
  "isGatewayFailoverEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company Site Resource",
        "description": "Deletes a company site resource with the specified UID.",
        "operationId": "DeleteCompanySiteResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeBackups",
            "in": "query",
            "description": "Defines whether all backup files of a company must be deleted.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/sites/backupResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Company Backup Resources",
        "description": "Returns a collection resource representation of all company cloud backup resources.",
        "operationId": "GetCompaniesSiteBackupResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteBackupResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "912b0f66-bc45-4f3b-9043-6435c5380ce0",
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "cloudRepositoryName": "CloudRepo1",
    "storageQuota": 52613349376,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  },
  {
    "instanceUid": "e2d9aee9-fbf3-43c2-9474-74cd2154daa1",
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "cloudRepositoryName": "CloudRepo2",
    "storageQuota": 2147483648,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  },
  {
    "instanceUid": "dfc322e1-b44d-46dd-ae07-610857433bde",
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "repositoryUid": "a509568f-1427-4f44-a548-e2028cf776b5",
    "cloudRepositoryName": "CloudRepo3",
    "storageQuota": 10737418240,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  },
  {
    "instanceUid": "0b490eff-2267-4399-98a3-26236e31882c",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "cloudRepositoryName": "CloudRepo4",
    "storageQuota": 53687091200,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/backupResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Backup Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of all cloud backup resources allocated to a company on a site with the specified UID.",
        "operationId": "GetCompanySiteBackupResources",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteBackupResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "cloudRepositoryName": "CloudRepo1",
    "storageQuota": 53687091200,
    "serversQuota": null,
    "isServersQuotaUnlimited": true,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  },
  {
    "instanceUid": "ec8a0bbc-1369-4348-acea-ecf603181956",
    "companyUid": "22920a6a-6b34-4bc8-8281-57defe376d26",
    "siteUid": "365be228-b14d-421a-9a0e-a1a434e2195c",
    "repositoryUid": "0b282cbc-9b50-4c29-b17d-dd07d7ab4a86",
    "cloudRepositoryName": "CloudRepo2",
    "storageQuota": 1073741824,
    "serversQuota": 1,
    "isServersQuotaUnlimited": false,
    "workstationsQuota": null,
    "isWorkstationsQuotaUnlimited": true,
    "vmsQuota": null,
    "isVmsQuotaUnlimited": true,
    "isWanAccelerationEnabled": false,
    "wanAcceleratorUid": null,
    "isDefault": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Creates Company Backup Resource on Site",
        "description": "Allocate a new cloud backup resource to a company with the specified UID.",
        "operationId": "CreateCompanySiteBackupResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Cloud backup resource properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySiteBackupResourceInput"
              },
              "example": {
  "repositoryUid": "90b37cb5-ca36-4158-840d-c4c8b38f8251",
  "cloudRepositoryName": "PittsburghCompany repo",
  "storageQuota": 10737418240,
  "serversQuota": null,
  "isServersQuotaUnlimited": true,
  "workstationsQuota": null,
  "isWorkstationsQuotaUnlimited": true,
  "vmsQuota": null,
  "isVmsQuotaUnlimited": true,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null,
  "isDefault": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "3c7fa811-503c-42fe-b38e-39dfe761ea1b",
  "companyUid": "aad6ee62-05fc-4da0-93d0-9de71d5fe12d",
  "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
  "repositoryUid": "90b37cb5-ca36-4158-840d-c4c8b38f8251",
  "cloudRepositoryName": "PittsburghCompany repo",
  "storageQuota": 10737418240,
  "serversQuota": null,
  "isServersQuotaUnlimited": true,
  "workstationsQuota": null,
  "isWorkstationsQuotaUnlimited": true,
  "vmsQuota": null,
  "isVmsQuotaUnlimited": true,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null,
  "isDefault": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/backupResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All Backup Resources Allocated to Company on Site",
        "description": "Returns a resource representation of a cloud backup resource usage by a company on a site with the specified UID.",
        "operationId": "GetCompanySiteBackupResourcesUsage",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteBackupResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "backupResourceUid": "912b0f66-bc45-4f3b-9043-6435c5380ce0",
    "storageQuota": 51539607552,
    "usedStorageQuota": 12582912,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 1,
    "vmBackups": 0
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "backupResourceUid": "1c192428-c053-4082-9e62-93d29375ab93",
    "storageQuota": 5368709120,
    "usedStorageQuota": 569376768,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 1,
    "vmBackups": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/sites/backupResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All Company Backup Resources",
        "description": "Returns a collection resource representation of cloud backup resource usage by all companies.",
        "operationId": "GetCompaniesSiteBackupResourcesUsages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteBackupResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "backupResourceUid": "912b0f66-bc45-4f3b-9043-6435c5380ce0",
    "storageQuota": 51539607552,
    "usedStorageQuota": 12582912,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 1,
    "vmBackups": 0
  },
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "backupResourceUid": "e2d9aee9-fbf3-43c2-9474-74cd2154daa1",
    "storageQuota": 2147483648,
    "usedStorageQuota": 0,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 0,
    "vmBackups": 0
  },
  {
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "backupResourceUid": "dfc322e1-b44d-46dd-ae07-610857433bde",
    "storageQuota": 10737418240,
    "usedStorageQuota": 993001472,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 0,
    "workstationBackups": 1,
    "vmBackups": 0
  },
  {
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "backupResourceUid": "0b490eff-2267-4399-98a3-26236e31882c",
    "storageQuota": 53687091200,
    "usedStorageQuota": 2886729728,
    "archiveTierUsage": 0,
    "capacityTierUsage": 0,
    "perfomanceTierUsage": 0,
    "serverBackups": 1,
    "workstationBackups": 1,
    "vmBackups": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/backupResources/{resourceUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Backup Resource",
        "description": "Returns a resource representation of company cloud backup resource with the specified UID.",
        "operationId": "GetCompanySiteBackupResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "912b0f66-bc45-4f3b-9043-6435c5380ce0",
  "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "cloudRepositoryName": "psCloudRep",
  "storageQuota": 53687091200,
  "serversQuota": null,
  "isServersQuotaUnlimited": true,
  "workstationsQuota": null,
  "isWorkstationsQuotaUnlimited": true,
  "vmsQuota": null,
  "isVmsQuotaUnlimited": true,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null,
  "isDefault": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Backup Resource",
        "description": "Modifies a company cloud backup resource with the specified UID.",
        "operationId": "PatchCompanySiteBackupResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": 15,
    "path": "/workstationsQuota",
    "op": "replace"
  },
  {
    "value": false,
    "path": "/isWorkstationsQuotaUnlimited",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteBackupResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "912b0f66-bc45-4f3b-9043-6435c5380ce0",
  "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "cloudRepositoryName": "psCloudRep",
  "storageQuota": 52613349376,
  "serversQuota": null,
  "isServersQuotaUnlimited": true,
  "workstationsQuota": 15,
  "isWorkstationsQuotaUnlimited": false,
  "vmsQuota": null,
  "isVmsQuotaUnlimited": true,
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null,
  "isDefault": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteBackupResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Delete Company Backup Resource",
        "description": "Deletes a company cloud backup resource with the specified UID.",
        "operationId": "DeleteCompanySiteBackupResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "resourceUid",
            "in": "path",
            "description": "Cloud backup resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/traffic": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Traffic Resource",
        "description": "Returns a resource representation of a cloud traffic quota configured for a company on a site with the specified UID.",
        "operationId": "GetCompanySiteTrafficResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteTrafficResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "dataTransferOutQuota": null,
  "isDataTransferOutQuotaUnlimited": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteTrafficResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Traffic Resource",
        "description": "Modifies cloud traffic quota configured for a company on a site with the specified UID.",
        "operationId": "PatchCompanySiteTrafficResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/isDataTransferOutQuotaUnlimited",
    "op": "replace"
  },
  {
    "value": 53687091200,
    "path": "/dataTransferOutQuota",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteTrafficResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "dataTransferOutQuota": 53687091200,
  "isDataTransferOutQuotaUnlimited": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteTrafficResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/sites/replicationResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Company Replication Resources",
        "description": "Returns a collection resource representation of all company cloud replication resources.",
        "operationId": "GetCompaniesSiteReplicationResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "bbe14822-c2bd-2a4b-69fc-2211daef25b3",
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "hardwarePlans": [
      {
        "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": false,
    "isPublicAllocationEnabled": false,
    "numberOfPublicIps": 0
  },
  {
    "instanceUid": "3bf83d2e-b1e3-78ad-087b-2b0e89703323",
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "hardwarePlans": [
      {
        "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": false,
    "isPublicAllocationEnabled": false,
    "numberOfPublicIps": 0
  },
  {
    "instanceUid": "fb596f4a-c3bc-c257-61ff-1fd42336c5cf",
    "companyUid": "a66deeca-3480-4cf1-ab1d-022819b749c3",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "hardwarePlans": [
      {
        "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": true,
    "isPublicAllocationEnabled": false,
    "numberOfPublicIps": 0
  },
  {
    "instanceUid": "1c6a03db-bb5b-9c94-926d-6997eda91a4e",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "hardwarePlans": [
      {
        "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": false,
    "isPublicAllocationEnabled": false,
    "numberOfPublicIps": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/replicationResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Replication Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of a cloud replication resources allocated to a company on a site with the specified UID.",
        "operationId": "GetCompanySiteReplicationResources",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "7487a91d-94ee-5f33-62a6-06e0eb9e3ff6",
  "companyUid": "7226329b-90e5-42c2-a3ca-592a31618571",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "hardwarePlans": [
    {
      "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false,
  "isPublicAllocationEnabled": false,
  "numberOfPublicIps": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company Replication Resource on Site",
        "description": "Allocates a new cloud replication resource to a company on a site with the specified UID.",
        "operationId": "CreateCompanySiteReplicationResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Cloud replication resource properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySiteReplicationResourceInput"
              },
              "example": {
  "hardwarePlans": [
    {
      "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false,
  "isPublicAllocationEnabled": false,
  "numberOfPublicIps": 0
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "7487a91d-94ee-5f33-62a6-06e0eb9e3ff6",
  "companyUid": "7226329b-90e5-42c2-a3ca-592a31618571",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "hardwarePlans": [
    {
      "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false,
  "isPublicAllocationEnabled": false,
  "numberOfPublicIps": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Replication Resource on Site",
        "description": "Modifies a cloud replication resource allocated to a company on a site with the specified UID.",
        "operationId": "PatchCompanySiteReplicationResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/IsFailoverCapabilitiesEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "bbe14822-c2bd-2a4b-69fc-2211daef25b3",
  "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "hardwarePlans": [
    {
      "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false,
  "isPublicAllocationEnabled": false,
  "numberOfPublicIps": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/replicationResources/hardwarePlans/{hardwarePlanUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Hardware Plan",
        "description": "Returns a resource representation of a company hardware plan with the specified UID.",
        "operationId": "GetCompanySiteReplicationResourceHardwarePlan",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hardwarePlanUid",
            "in": "path",
            "description": "Hardware plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResourceHardwarePlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Unsubscribe Company from Hardware Plan",
        "description": "Unsubscribes a company from a hardware plan with the specified UID.",
        "operationId": "DeleteCompanySiteReplicationResourceHardwarePlan",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "hardwarePlanUid",
            "in": "path",
            "description": "Hardware plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/replicationResources/networkextensionAppliance": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Network Extension Appliances Allocated to Company on Site",
        "description": "Returns a collection resource representation of a network extension appliances configured for a company on a site with the specified UID.",
        "operationId": "GetCompanySiteReplicationResourcesNetworkAppliances",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteReplicationResourceNetworkAppliance"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "29d80e82-92c2-6cf4-8e69-49fab98684d5",
    "name": "NEA1",
    "hardwarePlanUid": "0f4beb68-af64-4693-8da2-71cc00281b3f",
    "hostName": "nea1",
    "rootHostName": "vc4.vspc",
    "externalNetworkName": "VM Network 1",
    "tcpIpSettings": {
      "dhcpEnabled": true,
      "ipAddress": null,
      "subnetMask": null,
      "defaultGateway": null
    }
  },
  {
    "instanceUid": "c0bc8f56-5a9e-4ea5-9186-4e5e4dce4bc9",
    "name": "NEA2",
    "hardwarePlanUid": "0f4beb68-af64-4693-8da2-71cc00281b3f",
    "hostName": "nea2",
    "rootHostName": "vc5.vspc",
    "externalNetworkName": "VM Network 2",
    "tcpIpSettings": {
      "dhcpEnabled": true,
      "ipAddress": null,
      "subnetMask": null,
      "defaultGateway": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/replicationResources/networkextensionAppliance/{applianceUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Network Extension Appliance",
        "description": "Returns a resource representation of a company network extension appliance with the specified UID.",
        "operationId": "GetCompanySiteReplicationResourcesNetworkAppliance",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceUid",
            "in": "path",
            "description": "Network extension appliance UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResourceNetworkAppliance"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "ff021675-c61e-6d70-8491-b1c53bf69c09",
  "name": "NEA1",
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "hostName": "nea1",
  "rootHostName": "vc.vspc",
  "externalNetworkName": "VM Network 1",
  "tcpIpSettings": {
    "dhcpEnabled": true,
    "ipAddress": null,
    "subnetMask": null,
    "defaultGateway": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResourceNetworkAppliance"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Network Extension Appliance",
        "description": "Modifies a company network extension appliance with the specified UID.",
        "operationId": "PatchCompanySiteReplicationResourcesNetworkAppliance",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceUid",
            "in": "path",
            "description": "Network extension appliance UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "172.16.21.165",
    "path": "/TcpIpSettings/IpAddress",
    "op": "replace"
  },
  {
    "value": "255.255.255.0",
    "path": "/TcpIpSettings/SubnetMask",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResourceNetworkAppliance"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "ff021675-c61e-6d70-8491-b1c53bf69c09",
  "name": "R2_SP_CompanyWithNetworkAppliance",
  "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "hostName": "pdcqa159.tech.local",
  "rootHostName": "vc.vspc",
  "externalNetworkName": "VM Network",
  "tcpIpSettings": {
    "dhcpEnabled": false,
    "ipAddress": "172.16.21.165",
    "subnetMask": "255.255.255.0",
    "defaultGateway": "8.8.8.8"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResourceNetworkAppliance"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/sites/replicationResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All Company Replication Resources",
        "description": "Returns a collection resource representation of usage of all company cloud replication resources.",
        "operationId": "GetCompaniesSiteReplicationResourcesUsages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "hardwarePlanUid": "94817a9b-730d-4318-872f-d953c238388d",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "vCPUsConsumed": 2,
    "memoryUsage": 4294967296,
    "storageUsage": 24296592144,
    "hostsCoresCount": 0,
    "numberOfVms": 1
  },
  {
    "hardwarePlanUid": "a78c949f-15ec-46b9-a469-215f441562f7",
    "companyUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "vCPUsConsumed": 1,
    "memoryUsage": 4294967296,
    "storageUsage": 1085938,
    "hostsCoresCount": 0,
    "numberOfVms": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/replicationResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All Replication Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of usage of all cloud replication resources allocated to a company on a site with the specified UID.",
        "operationId": "GetCompanySiteReplicationResourcesUsage",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "hardwarePlanUid": "94817a9b-730d-4318-872f-d953c238388d",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "vCPUsConsumed": 2,
    "memoryUsage": 4294967296,
    "storageUsage": 24296592144,
    "hostsCoresCount": 0,
    "numberOfVms": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/sites/vcdReplicationResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All Company VMware Cloud Director Replication Resources",
        "description": "Returns a collection resource representation of all company VMware Cloud Director replication resources.",
        "operationId": "GetCompaniesSiteVcdReplicationResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "6c8c3653-1ed7-b296-96d4-e107030060ab",
    "companyUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "dataCenters": [
      {
        "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      },
      {
        "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": false
  },
  {
    "instanceUid": "4056633c-0e1c-b0aa-420e-a0a72a75cc63",
    "companyUid": "e812c8af-7fd6-4a28-8b50-59036d4f215e",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "dataCenters": [
      {
        "dataCenterUid": "114adf14-0b30-4ae7-ae4c-90a89b338427",
        "isWanAccelerationEnabled": false,
        "wanAcceleratorUid": null
      }
    ],
    "isFailoverCapabilitiesEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/vcdReplicationResources": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All VMware Cloud Director Replication Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of a VMware Cloud Director replication resource allocated to a company on a site with the specified UID.",
        "operationId": "GetCompanySiteVcdReplicationResources",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "6b495602-c55e-2c72-075b-be85f563456e",
  "companyUid": "28e469b7-b94a-451a-8a04-8c114d9563a3",
  "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
  "dataCenters": [
    {
      "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    },
    {
      "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Companies"
        ],
        "summary": "Create Company VMware Cloud Director Replication Resource on Site",
        "description": "Allocates a new VMware Cloud Director replication resource to a company with the specified UID.",
        "operationId": "CreateCompanySiteVcdReplicationResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "VMware Cloud Director replication resource properties.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceInput"
              },
              "example": {
  "dataCenters": [
    {
      "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "6b495602-c55e-2c72-075b-be85f563456e",
  "companyUid": "28e469b7-b94a-451a-8a04-8c114d9563a3",
  "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
  "dataCenters": [
    {
      "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    },
    {
      "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company VMware Cloud Director Replication Resource",
        "description": "Modifies a VMware Cloud Director replication resource allocated to a company on a site with the specified UID.",
        "operationId": "PatchCompanySiteVcdReplicationResource",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/IsFailoverCapabilitiesEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "6b495602-c55e-2c72-075b-be85f563456e",
  "companyUid": "28e469b7-b94a-451a-8a04-8c114d9563a3",
  "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
  "dataCenters": [
    {
      "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    },
    {
      "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
      "isWanAccelerationEnabled": false,
      "wanAcceleratorUid": null
    }
  ],
  "isFailoverCapabilitiesEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteVcdReplicationResource"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/vcdReplicationResources/dataCenters/{dataCenterUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Organization VDC",
        "description": "Returns a resource representation of an organization VDC with the specified UID.",
        "operationId": "GetCompanySiteVcdReplicationResourceDataCenter",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataCenterUid",
            "in": "path",
            "description": "Organization vDC UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceDataCenter"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
  "isWanAccelerationEnabled": false,
  "wanAcceleratorUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Companies"
        ],
        "summary": "Unassign Organization VDC from Company",
        "description": "Unassignes from a company an organization VDC with the specified UID.",
        "operationId": "DeleteCompanySiteVcdReplicationResourceDataCenter",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "dataCenterUid",
            "in": "path",
            "description": "VMware Cloud Director replication resource UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/sites/vcdReplicationResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All Company VMware Cloud Director Replication Resources",
        "description": "Returns a collection resource representation of VMware Cloud Director replication resource usage by all companies.",
        "operationId": "GetCompaniesSiteVcdReplicationResourcesUsages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "dataCenterUid": "114adf14-0b30-4ae7-ae4c-90a89b338427",
    "companyUid": "e812c8af-7fd6-4a28-8b50-59036d4f215e",
    "cpuCountConsumed": 0,
    "memoryUsage": 0,
    "storageUsage": 0
  },
  {
    "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
    "companyUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "cpuCountConsumed": 0,
    "memoryUsage": 0,
    "storageUsage": 4294967296
  },
  {
    "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
    "companyUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "cpuCountConsumed": 0,
    "memoryUsage": 0,
    "storageUsage": 7516192768
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/vcdReplicationResources/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Usage of All VMware Cloud Director Replication Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of usage of all VMware Cloud Director replication resources allocated to a company on a site with the specified UID.",
        "operationId": "GetCompanySiteVcdReplicationResourcesUsage",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "dataCenterUid": "114adf14-0b30-4ae7-ae4c-90a89b338427",
    "companyUid": "e812c8af-7fd6-4a28-8b50-59036d4f215e",
    "cpuCountConsumed": 0,
    "memoryUsage": 0,
    "storageUsage": 1073741824
  },
  {
    "dataCenterUid": "699f94e7-9724-4f62-a12a-3b0677ebcef8",
    "companyUid": "e812c8af-7fd6-4a28-8b50-59036d4f215e",
    "cpuCountConsumed": 0,
    "memoryUsage": 0,
    "storageUsage": 2147483648
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/vcdReplicationResources/networkExtensionAppliance": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get All VMware Cloud Director Replication Resources Allocated to Company on Site",
        "description": "Returns a collection resource representation of all network extension appliances configured for a company on a site with the specified system ID.",
        "operationId": "GetCompanySiteVcdReplicationResourcesNetworkAppliances",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CompanySiteReplicationResourceVcdNetworkAppliance"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "68e49d74-cd26-6e0f-ac8d-44c0bbabbedd",
    "name": "Alpha Network Extension Appliance",
    "dataCenterUid": "cf82125f-5732-41b9-85ff-083300c081ef",
    "dataCenterName": "Alpha VDC",
    "tcpIpSettings": {
      "dhcpEnabled": true,
      "ipAddress": "172.16.21.125",
      "subnetMask": "255.255.255.0",
      "defaultGateway": "8.8.8.8"
    }
  },
  {
    "instanceUid": "cdc8687c-49b0-6cca-95d8-831f01e5d4b2",
    "name": "Beta Network Extension Appliance",
    "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
    "dataCenterName": "Beta VDC",
    "tcpIpSettings": {
      "dhcpEnabled": true,
      "ipAddress": "",
      "subnetMask": "",
      "defaultGateway": ""
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/sites/{siteUid}/vcdReplicationResources/networkExtensionAppliance/{applianceUid}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Company Network Extension Appliance",
        "description": "Returns a resource representation of a company network extension appliance with the specified UID.",
        "operationId": "GetCompanySiteVcdReplicationResourcesNetworkAppliance",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceUid",
            "in": "path",
            "description": "Network extension appliance UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResourceVcdNetworkAppliance"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cdc8687c-49b0-6cca-95d8-831f01e5d4b2",
  "name": "Alpha Network Extension Appliance",
  "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
  "dataCenterName": "Alpha VDC",
  "tcpIpSettings": {
    "dhcpEnabled": false,
    "ipAddress": "172.16.21.125",
    "subnetMask": "255.255.255.0",
    "defaultGateway": "8.8.8.8"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResourceVcdNetworkAppliance"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Companies"
        ],
        "summary": "Modify Company Network Extension Appliance",
        "description": "Modifies a company network extension appliance with the specified UID.",
        "operationId": "PatchCompanySiteVcdReplicationResourcesNetworkAppliance",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "applianceUid",
            "in": "path",
            "description": "Network extension appliance UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "255.255.255.0",
    "path": "/tcpipsettings/subnetmask",
    "op": "replace"
  },
  {
    "value": "8.8.8.8",
    "path": "/tcpipsettings/defaultgateway",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CompanySiteReplicationResourceVcdNetworkAppliance"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cdc8687c-49b0-6cca-95d8-831f01e5d4b2",
  "name": "Alpha Network Extension Appliance",
  "dataCenterUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
  "dataCenterName": "VDC1",
  "tcpIpSettings": {
    "dhcpEnabled": false,
    "ipAddress": "172.16.21.165",
    "subnetMask": "255.255.255.0",
    "defaultGateway": "8.8.8.8"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/CompanySiteReplicationResourceVcdNetworkAppliance"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator"
        ]
      }
    },
    "/organizations/companies/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Services Usage by All Companies",
        "description": "Returns a collection resource representation of services consumed by companies.",
        "operationId": "GetCompaniesAggregatedUsage",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start timestamp of a searched time range.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End timestamp of a searched time range. Total time range must be less than or equal to 31 day.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocationAggregatedUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "f2cfbefe-375e-433b-9169-127f7bc2b2f3",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 1,
        "type": "VmCloudBackups"
      },
      {
        "value": 1,
        "type": "ServerCloudBackups"
      },
      {
        "value": 1,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 898730,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 5512720986,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 1206756,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 32239891086,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 1,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 24296592144,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 3317760,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 2771640320,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 5,
        "type": "ManagedServerAgents"
      },
      {
        "value": 1,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 3,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 4350718,
        "type": "FileShareBackupSize"
      },
      {
        "value": 1124,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 2,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 2886729728,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 1,
        "type": "ReplicatedVms"
      },
      {
        "value": 2,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "a2b8d2a0-d28d-4d7b-a712-50b07ba63b12",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 11811160064,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 1,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 41899,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 10983186,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 12582912,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 2,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 1,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 4350718,
        "type": "FileShareBackupSize"
      },
      {
        "value": 1124,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 1,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 12582912,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 1,
        "type": "ReplicatedVms"
      },
      {
        "value": 1,
        "type": "BackedupVms"
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/companies/{companyUid}/usage": {
      "get": {
        "tags": [
          "Companies"
        ],
        "summary": "Get Services Usage by Company",
        "description": "Returns a collection resource representation of services consumed by a company with the specified UID.",
        "operationId": "GetCompanyAggregatedUsage",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Start timestamp of a searched time range.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "End timestamp of a searched time range. Total time range must be less than or equal to 31 day.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LocationAggregatedUsage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "f2cfbefe-375e-433b-9169-127f7bc2b2f3",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "bf15f36f-4464-460f-aff4-31c8c7fd661a",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "8fec94be-8c33-4a68-b273-423fb366b913",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  },
  {
    "companyUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "resellerUid": "95db13b5-d291-4c0b-9324-698985243aa5",
    "locationUid": "40ef48a6-3958-4df8-a5bd-291e24409898",
    "date": "2021-08-15T02:00:00+02:00",
    "counters": [
      {
        "value": 0,
        "type": "VmCloudBackups"
      },
      {
        "value": 0,
        "type": "ServerCloudBackups"
      },
      {
        "value": 0,
        "type": "WorkstationCloudBackups"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferOut"
      },
      {
        "value": 0,
        "type": "AgentCloudBackupDataTransferIn"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudBackupsDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicas"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaComputeTime"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferOut"
      },
      {
        "value": 0,
        "type": "VbrCloudReplicaDataTransferIn"
      },
      {
        "value": 0,
        "type": "VmCloudReplicaStorageUsage"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByVm"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByServerAgent"
      },
      {
        "value": 0,
        "type": "CloudRepositoryUsageByWorkstationAgent"
      },
      {
        "value": 0,
        "type": "ManagedServerAgents"
      },
      {
        "value": 0,
        "type": "ManagedWorkstationAgents"
      },
      {
        "value": 0,
        "type": "ManagedVms"
      },
      {
        "value": 0,
        "type": "ManagedCloudVms"
      },
      {
        "value": 0,
        "type": "FileShareArchiveSize"
      },
      {
        "value": 0,
        "type": "FileShareBackupSize"
      },
      {
        "value": 0,
        "type": "FileShareSourceSize"
      },
      {
        "value": 0,
        "type": "ManagedAgentsMacOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsLinuxOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsDesktopOS"
      },
      {
        "value": 0,
        "type": "ManagedAgentsWindowsServerOS"
      },
      {
        "value": 0,
        "type": "CloudInsiderProtectionBackupSize"
      },
      {
        "value": 0,
        "type": "CloudCapacityTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudPerfomanceTierBackupSize"
      },
      {
        "value": 0,
        "type": "CloudArchiveTierBackupSize"
      },
      {
        "value": 0,
        "type": "ManagedUsers"
      },
      {
        "value": 0,
        "type": "ReplicatedVms"
      },
      {
        "value": 0,
        "type": "BackedupVms"
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get All Locations",
        "description": "Returns a collection resource representation of all organization locations.",
        "operationId": "GetLocations",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationLocation"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f2cfbefe-375e-433b-9169-127f7bc2b2f3",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Default location",
    "quotaGb": 50,
    "isDefault": true
  },
  {
    "instanceUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
    "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "Manhattan",
    "quotaGb": 50,
    "isDefault": true
  },
  {
    "instanceUid": "a2b8d2a0-d28d-4d7b-a712-50b07ba63b12",
    "organizationUid": "68e03f2b-736c-49da-a33b-7b7567efb4b9",
    "name": "Los Angeles",
    "quotaGb": 50,
    "isDefault": true
  },
  {
    "instanceUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "Washington",
    "quotaGb": 50,
    "isDefault": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create Location",
        "description": "Creates a new organization location.",
        "operationId": "CreateLocation",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Location model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationLocation"
              },
              "example": {
  "instanceUid": "00000000-0000-0000-0000-000000000000",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "name": "SP_CompanyLocationUser",
  "quotaGb": 3000,
  "isDefault": false
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrganizationLocation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "343c8822-1b47-4d5e-a7e6-e4bc1e3b61c7",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "name": "SP_CompanyLocationUser",
  "quotaGb": 3000,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/{organizationUid}/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get All Organization Locations",
        "description": "Returns a collection resource representation of all locations of an organization with the specified UID.",
        "operationId": "GetLocationsByOrganization",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationLocation"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "b341b5bf-1fb7-4f78-8feb-d79620301a36",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Manhattan",
    "quotaGb": 0,
    "isDefault": false
  },
  {
    "instanceUid": "1d5e9edb-05fe-4fdf-a33d-5f5e2c7d5fad",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Los Angeles",
    "quotaGb": 0,
    "isDefault": false
  },
  {
    "instanceUid": "f2cfbefe-375e-433b-9169-127f7bc2b2f3",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Washington",
    "quotaGb": 2,
    "isDefault": true
  },
  {
    "instanceUid": "bf15f36f-4464-460f-aff4-31c8c7fd661a",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Quebec",
    "quotaGb": 0,
    "isDefault": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/locations/{locationUid}": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Get Location",
        "description": "Returns a resource representation of a organization location with the specified UID.",
        "operationId": "GetLocation",
        "parameters": [
          {
            "name": "locationUid",
            "in": "path",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrganizationLocation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1d5e9edb-05fe-4fdf-a33d-5f5e2c7d5fad",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "name": "Manhattan",
  "quotaGb": 0,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/OrganizationLocation"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "CompanyInvoiceAuditor",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Locations"
        ],
        "summary": "Modify Location",
        "description": "Modifies an organization location.",
        "operationId": "PatchLocation",
        "parameters": [
          {
            "name": "locationUid",
            "in": "path",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Manhattan",
    "path": "/Name",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/OrganizationLocation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8adf7ce3-3231-4026-8387-ca497459de1d",
  "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
  "name": "Manhattan",
  "quotaGb": 0,
  "isDefault": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/OrganizationLocation"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete Location",
        "description": "Deletes an organization location with the specified UID.",
        "operationId": "DeleteLocation",
        "parameters": [
          {
            "name": "locationUid",
            "in": "path",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/locations/{locationUid}/users": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get All Location Users",
        "description": "Returns a collection resource representation of all users that are assigned to a location with the specified UID.",
        "operationId": "GetUsersByLocation",
        "parameters": [
          {
            "name": "locationUid",
            "in": "path",
            "description": "Location UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f1ea605d-99e3-4152-88e6-aecc4d08a1d8",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "owner",
    "status": "Enabled",
    "mfaPolicyStatus": "Disabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyOwner",
    "profile": {
      "firstName": "Maria",
      "lastName": "Lore",
      "title": "Ms",
      "email": "m.lore@exonco.com",
      "address": null,
      "phone": "410-510-2317"
    },
    "credentials": {
      "userName": "owner",
      "password": null
    }
  },
  {
    "instanceUid": "41221ff1-a8fb-4abf-a1a9-cfc4542635b6",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "administrator1",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyAdministrator",
    "profile": {
      "firstName": "John",
      "lastName": "Brown",
      "title": "Mr",
      "email": "j.brown@exonco.com",
      "address": null,
      "phone": "443-704-7088"
    },
    "credentials": {
      "userName": "administrator1",
      "password": null
    }
  },
  {
    "instanceUid": "5ccc20c1-f256-4e60-aa71-82cc5311f8e6",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "iauditor",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyInvoiceAuditor",
    "profile": {
      "firstName": "Persephone",
      "lastName": "Lilly",
      "title": "Ms",
      "email": "p.lilly@exonco.com",
      "address": null,
      "phone": "443-831-9556"
    },
    "credentials": {
      "userName": "iauditor",
      "password": null
    }
  },
  {
    "instanceUid": "00c1876e-706f-436c-a3ea-026be43e6ec8",
    "organizationUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "userName": "administrator2",
    "status": "Enabled",
    "mfaPolicyStatus": "Enabled",
    "mfaPolicyConfigurationStatus": "NotConfigured",
    "role": "CompanyAdministrator",
    "profile": {
      "firstName": "Paul",
      "lastName": "Lucker",
      "title": "Mr",
      "email": "p.lucker@exonco.com",
      "address": null,
      "phone": "443-404-0355"
    },
    "credentials": {
      "userName": "administrator2",
      "password": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/organizations/companies/{companyUid}/subscriptionPlan": {
      "get": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Get Subscription Plan Assigned to Company",
        "description": "Returns a resource representation of a subscription plan assigned to a company with the specified UID. If there is no subscription plan assigned the response will be empty.",
        "operationId": "GetAssignedToCompanySubscriptionPlan",
        "parameters": [
          {
            "name": "companyUid",
            "in": "path",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SubscriptionPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
  "name": "Gold",
  "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "type": "Predefined",
  "description": "",
  "currency": "USD",
  "taxType": "VAT",
  "taxPercent": 10,
  "discountPercent": 12,
  "managedBackup": {
    "managedServicePrice": 21,
    "managedVmPrice": 2,
    "managedCloudVmPrice": 0.0,
    "managedWorkstationPrice": 4,
    "managedServerAgentPrice": 3,
    "freeManagedVms": 0,
    "freeManagedCloudVms": 0,
    "freeManagedWorkstations": 0,
    "freeManagedServerAgents": 0,
    "windowsServerOsPrice": 0.0,
    "windowsClientOsPrice": 0.0,
    "linuxOsPrice": 0.0,
    "macOsPrice": 0.0
  },
  "cloudReplication": {
    "replicatedVmPrice": 10,
    "cloudStorageConsumedSpacePrice": 10,
    "cloudStorageConsumedSpaceUnits": "TB",
    "freeCloudStorageConsumedSpace": null,
    "freeCloudStorageConsumedSpaceUnits": "GB",
    "computeResourcesPrice": 0.0,
    "computeResourcesUnits": "Hours",
    "freeComputeResources": 1,
    "freeComputeResourcesUnits": "Minutes",
    "replicationDataTransferOutPrice": 0.0,
    "replicationDataTransferOutUnits": "GB"
  },
  "fileShareBackup": {
    "fileShareBackupUsedSpacePrice": 0.0,
    "fileShareBackupUsedSpaceUnits": "GB",
    "freeFileShareBackupUsedSpace": null,
    "freeFileShareBackupUsedSpaceUnits": "GB",
    "fileShareArchiveUsedSpacePrice": 0.0,
    "fileShareArchiveUsedSpaceUnits": "GB",
    "freeFileShareArchiveUsedSpace": null,
    "freeFileShareArchiveUsedSpaceUnits": "GB",
    "sourceAmountOfDataPrice": 0.0,
    "sourceAmountOfDataUnits": "GB",
    "freeSourceAmountOfData": null,
    "freeSourceAmountOfDataUnits": "GB"
  },
  "cloudBackup": {
    "vmCloudBackupsPrice": 5,
    "serverCloudBackupsPrice": 6,
    "workstationCloudBackupsPrice": 7,
    "cloudRepositorySpaceUsageAlgorithm": "Consumed",
    "cloudRepositoryAllocatedSpacePrice": 0.0,
    "cloudRepositoryAllocatedSpaceUnits": "TB",
    "cloudRepositoryConsumedSpacePrice": 15,
    "cloudRepositoryConsumedSpaceUnits": "TB",
    "freeCloudRepositoryConsumedSpace": null,
    "freeCloudRepositoryConsumedSpaceUnits": "GB",
    "backupDataTransferOutPrice": 8,
    "backupDataTransferOutUnits": "GB",
    "insiderProtectionUsedSpacePrice": 0.0,
    "insiderProtectionUsedSpaceUnits": "GB",
    "performanceTierUsedSpacePrice": 0.0,
    "performanceTierUsedSpaceUnits": "GB",
    "capacityTierUsedSpacePrice": 0.0,
    "capacityTierUsedSpaceUnits": "GB",
    "archiveTierUsedSpacePrice": 0.0,
    "archiveTierUsedSpaceUnits": "GB"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/organizations/{organizationUid}/keys": {
      "get": {
        "tags": [
          "Accounts"
        ],
        "summary": "Get Organization Keys",
        "description": "Returns a collection resource representation of all RSA and API keys issued to users of an organization with the specified UID.",
        "operationId": "GetOrganizationApiKeys",
        "parameters": [
          {
            "name": "organizationUid",
            "in": "path",
            "description": "Organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UserLogin"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 28,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\administrator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP2",
    "description": "Administrator key",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>lmL3RrVvSV60JwK4kdR5QmWIyfzy32JdhgPpgRi4ryR6vhq5iFMZzGJ67WIDneMXILZtBOmjgskGXI0Au01UlWxUUl986an6quWB+x8bI5rMjwAd53+vFJ58QJQv57Lxgp9xpWiCEFpn7qnRNsEt08XdpE8sf7g7+Al6XA7GbujNs0Y+V8RjftJ6+sOwZ7dh7SabF+WwXYuNmjrLOoxoePxhIu4ajJ2GegbG9xpd2BjzO3X4eG+jxshl1Jv3U9E+CnmYln0mcLGLwQQYbgAv0RWY24EHG+0PUmzy/Y3pgdb5/J8QzjL064IUCWuEwFqyWvnzDR9UYxalMbjL1w6+Xw==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::66688F36B6FCB6918FEDAF7AFB580FB7",
    "creationDate": "2021-08-15T10:08:59.9373942+02:00"
  },
  {
    "id": 35,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\administrator2",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP2",
    "description": "Administrator2 key",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>q68LNFLdnZpFfLqtvEm7j10phar9J18QHvEzMCHbAdvy/B4XInzp+aJ7P/Cas8gpSndpmmA9XRFNLCfOxwQ/7MIaUgauos8ACUF/WjPjXtJ4k4xVz8tE3TMdk239H85cU0ZpBNk+nQExtsZLqN/gfV6jhTZ7B20sIwHJH/dOwaZfCfyAqW2ppK2uUMLTVd7nnL6zrS3c9/JO0trPOaZ6UZ1p5PolTjYU4d+BScdtPHKvExUUoTkw9v9wmAoESCFOXqDOmETVjpL0EryEauHkY2qOqiW0QtM9FQvWAwP1wsHv+ozogQ+gNtAnEvBb7Fxyem47Ay8Nb8aOg7T6c8U8yw==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::018A017BE28EE7702FDC3A76534BA432",
    "creationDate": "2021-08-15T10:16:31.8109896+02:00"
  },
  {
    "id": 36,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\operator",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP2",
    "description": "Operator key",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>xl0NK7XoLZHOnZiyQeayZaG4Ss8oaNZXaEF5WK0bxGN98wTHBFTe09G287YzthgCPvHm1/pO42pXaGABVfVJpxNjJolX0AfWh3PAchGkpgAjletHdKliSJjgUkgmN+q1e1apdmVWSFNjlEs5lyAdSv5JY6pV8jqi3bztJwd5UGcCty1dDWlR/mkp4RiEal5PvvhUAmGGOwsnl2L+9DDC3f3Z3OuIzMqUhFYQeFg42gXn9Dh/+7M4mcZWeVf8ul5dzebb8EOR04bTKKhdHfNV3HYTvDDLS9s9UmZSALSwAwhwpAgrqac/YjgsDeq27KoGpYeqHKoWkTYg1icIQef/+w==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::3470EC71246EFE0F9A46E12B0CBC3858",
    "creationDate": "2021-08-15T10:16:31.9672394+02:00"
  },
  {
    "id": 37,
    "userUid": "b7440c22-5fb9-49d7-9d06-93be6c15e0e4",
    "userName": "VSPCSRV\\operator2",
    "companyId": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "companyName": "My Company",
    "identityProviderName": "IDP2",
    "description": "Operator2 key",
    "isReadAccessOnly": false,
    "scopes": [
      "rest",
      "ui"
    ],
    "status": "enabled",
    "parameters": "<RSAKeyValue><Modulus>qCRreJhPghuHqgZ3FpO+rZvwrUcHNaFWtGJZYTsdsH4De1sVM6xQ5x2A2jqjVMLmYqbLEOfQzvU6Nt7bfRvs5b/A11G/X1h+g8UhaEhMxfq8v9at/g0eH5J/Y+HnBPixTh+hRp4Z66oe3++CY6zBCCOgUoj6KkWCnBy8h/KPXPjTBTfeTmvNq91XI5SYiR/joVKMp1UhFQ8FRMs2++j5EPtFaN/MvRJOiz7Wv+u9dVFr+/9C8KrMPof9He2tEzjUUeX8WyKUEuUImTgze5+q1UPUzCIoExPhoxcKasg6XBBFVlfAimY9efBS7cb8KHfb/3CFB/Ks9K0Hx9pM6GDKQw==</Modulus><Exponent>AQAB</Exponent></RSAKeyValue>",
    "identifierInProvider": "RSA::7224CBAF3936965DE06EDEF0FFE0D0A3",
    "creationDate": "2021-08-15T10:16:32.0766158+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/subscriptionPlans": {
      "get": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Get All Subscription Plans",
        "description": "Returns a collection resource representation of all subscription plans.",
        "operationId": "GetSubscriptionPlans",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SubscriptionPlan"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ecd15b8b-63bf-4c9b-9246-adacac7d09fa",
    "name": "Gamma subscription plan",
    "organizationUid": "8b5b0096-fc39-455a-8b70-754300bbf05f",
    "type": "Reseller",
    "description": "Subscription plan for Gamma.",
    "currency": "USD",
    "taxType": "VAT",
    "taxPercent": 10.0,
    "discountPercent": 12.0,
    "managedBackup": {
      "managedServicePrice": 21.0,
      "managedVmPrice": 2.0,
      "managedCloudVmPrice": 0.0,
      "managedWorkstationPrice": 4.0,
      "managedServerAgentPrice": 3.0,
      "freeManagedVms": 0,
      "freeManagedCloudVms": 0,
      "freeManagedWorkstations": 0,
      "freeManagedServerAgents": 0,
      "windowsServerOsPrice": 0.0,
      "windowsClientOsPrice": 0.0,
      "linuxOsPrice": 0.0,
      "macOsPrice": 0.0
    },
    "cloudReplication": {
      "replicatedVmPrice": 10.0,
      "cloudStorageConsumedSpacePrice": 10.0,
      "cloudStorageConsumedSpaceUnits": "TB",
      "freeCloudStorageConsumedSpace": null,
      "freeCloudStorageConsumedSpaceUnits": "GB",
      "computeResourcesPrice": 0.0,
      "computeResourcesUnits": "Hours",
      "freeComputeResources": 1,
      "freeComputeResourcesUnits": "Hours",
      "replicationDataTransferOutPrice": 0.0,
      "replicationDataTransferOutUnits": "GB"
    },
    "fileShareBackup": {
      "fileShareBackupUsedSpacePrice": 0.0,
      "fileShareBackupUsedSpaceUnits": "GB",
      "freeFileShareBackupUsedSpace": null,
      "freeFileShareBackupUsedSpaceUnits": "GB",
      "fileShareArchiveUsedSpacePrice": 0.0,
      "fileShareArchiveUsedSpaceUnits": "GB",
      "freeFileShareArchiveUsedSpace": null,
      "freeFileShareArchiveUsedSpaceUnits": "GB",
      "sourceAmountOfDataPrice": 0.0,
      "sourceAmountOfDataUnits": "GB",
      "freeSourceAmountOfData": null,
      "freeSourceAmountOfDataUnits": "GB"
    },
    "cloudBackup": {
      "vmCloudBackupsPrice": 5.0,
      "serverCloudBackupsPrice": 6.0,
      "workstationCloudBackupsPrice": 7.0,
      "cloudRepositorySpaceUsageAlgorithm": "Consumed",
      "cloudRepositoryAllocatedSpacePrice": 0.0,
      "cloudRepositoryAllocatedSpaceUnits": "GB",
      "cloudRepositoryConsumedSpacePrice": 15.0,
      "cloudRepositoryConsumedSpaceUnits": "TB",
      "freeCloudRepositoryConsumedSpace": null,
      "freeCloudRepositoryConsumedSpaceUnits": "GB",
      "backupDataTransferOutPrice": 8.0,
      "backupDataTransferOutUnits": "GB",
      "insiderProtectionUsedSpacePrice": 0.0,
      "insiderProtectionUsedSpaceUnits": "GB",
      "performanceTierUsedSpacePrice": 0.0,
      "performanceTierUsedSpaceUnits": "GB",
      "capacityTierUsedSpacePrice": 0.0,
      "capacityTierUsedSpaceUnits": "GB",
      "archiveTierUsedSpacePrice": 0.0,
      "archiveTierUsedSpaceUnits": "GB"
    }
  },
  {
    "instanceUid": "a9d25e18-83d5-4850-9b44-a3ed39ce46ba",
    "name": "Delta subscription plan",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "type": "Provider",
    "description": "Subscription plan for Delta",
    "currency": "USD",
    "taxType": "VAT",
    "taxPercent": 9.0,
    "discountPercent": 10.0,
    "managedBackup": {
      "managedServicePrice": 20.0,
      "managedVmPrice": 1.0,
      "managedCloudVmPrice": 0.0,
      "managedWorkstationPrice": 2.0,
      "managedServerAgentPrice": 3.0,
      "freeManagedVms": 0,
      "freeManagedCloudVms": 0,
      "freeManagedWorkstations": 0,
      "freeManagedServerAgents": 0,
      "windowsServerOsPrice": 0.0,
      "windowsClientOsPrice": 0.0,
      "linuxOsPrice": 0.0,
      "macOsPrice": 0.0
    },
    "cloudReplication": {
      "replicatedVmPrice": 10.0,
      "cloudStorageConsumedSpacePrice": 9.0,
      "cloudStorageConsumedSpaceUnits": "TB",
      "freeCloudStorageConsumedSpace": null,
      "freeCloudStorageConsumedSpaceUnits": "GB",
      "computeResourcesPrice": 0.0,
      "computeResourcesUnits": "Hours",
      "freeComputeResources": 1,
      "freeComputeResourcesUnits": "Days",
      "replicationDataTransferOutPrice": 0.0,
      "replicationDataTransferOutUnits": "GB"
    },
    "fileShareBackup": {
      "fileShareBackupUsedSpacePrice": 0.0,
      "fileShareBackupUsedSpaceUnits": "GB",
      "freeFileShareBackupUsedSpace": null,
      "freeFileShareBackupUsedSpaceUnits": "GB",
      "fileShareArchiveUsedSpacePrice": 0.0,
      "fileShareArchiveUsedSpaceUnits": "GB",
      "freeFileShareArchiveUsedSpace": null,
      "freeFileShareArchiveUsedSpaceUnits": "GB",
      "sourceAmountOfDataPrice": 0.0,
      "sourceAmountOfDataUnits": "GB",
      "freeSourceAmountOfData": null,
      "freeSourceAmountOfDataUnits": "GB"
    },
    "cloudBackup": {
      "vmCloudBackupsPrice": 5.0,
      "serverCloudBackupsPrice": 6.0,
      "workstationCloudBackupsPrice": 7.0,
      "cloudRepositorySpaceUsageAlgorithm": "Consumed",
      "cloudRepositoryAllocatedSpacePrice": 11.0,
      "cloudRepositoryAllocatedSpaceUnits": "TB",
      "cloudRepositoryConsumedSpacePrice": 15.0,
      "cloudRepositoryConsumedSpaceUnits": "TB",
      "freeCloudRepositoryConsumedSpace": null,
      "freeCloudRepositoryConsumedSpaceUnits": "GB",
      "backupDataTransferOutPrice": 8.0,
      "backupDataTransferOutUnits": "GB",
      "insiderProtectionUsedSpacePrice": 0.0,
      "insiderProtectionUsedSpaceUnits": "GB",
      "performanceTierUsedSpacePrice": 0.0,
      "performanceTierUsedSpaceUnits": "GB",
      "capacityTierUsedSpacePrice": 0.0,
      "capacityTierUsedSpaceUnits": "GB",
      "archiveTierUsedSpacePrice": 0.0,
      "archiveTierUsedSpaceUnits": "GB"
    }
  },
  {
    "instanceUid": "6dcab53f-8311-4020-8c76-532c9ff21341",
    "name": "Epsilon subscription plan",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "type": "Provider",
    "description": null,
    "currency": "USD",
    "taxType": "VAT",
    "taxPercent": 10.0,
    "discountPercent": 5.0,
    "managedBackup": {
      "managedServicePrice": 0.0,
      "managedVmPrice": 0.0,
      "managedCloudVmPrice": 0.0,
      "managedWorkstationPrice": 0.0,
      "managedServerAgentPrice": 0.0,
      "freeManagedVms": 0,
      "freeManagedCloudVms": 0,
      "freeManagedWorkstations": 0,
      "freeManagedServerAgents": 0,
      "windowsServerOsPrice": 0.0,
      "windowsClientOsPrice": 0.0,
      "linuxOsPrice": 0.0,
      "macOsPrice": 0.0
    },
    "cloudReplication": {
      "replicatedVmPrice": 0.0,
      "cloudStorageConsumedSpacePrice": 0.0,
      "cloudStorageConsumedSpaceUnits": "TB",
      "freeCloudStorageConsumedSpace": null,
      "freeCloudStorageConsumedSpaceUnits": "GB",
      "computeResourcesPrice": 0.0,
      "computeResourcesUnits": "Hours",
      "freeComputeResources": 0,
      "freeComputeResourcesUnits": "Minutes",
      "replicationDataTransferOutPrice": 0.0,
      "replicationDataTransferOutUnits": "GB"
    },
    "fileShareBackup": {
      "fileShareBackupUsedSpacePrice": 0.0,
      "fileShareBackupUsedSpaceUnits": "GB",
      "freeFileShareBackupUsedSpace": null,
      "freeFileShareBackupUsedSpaceUnits": "GB",
      "fileShareArchiveUsedSpacePrice": 0.0,
      "fileShareArchiveUsedSpaceUnits": "GB",
      "freeFileShareArchiveUsedSpace": null,
      "freeFileShareArchiveUsedSpaceUnits": "GB",
      "sourceAmountOfDataPrice": 0.0,
      "sourceAmountOfDataUnits": "GB",
      "freeSourceAmountOfData": null,
      "freeSourceAmountOfDataUnits": "GB"
    },
    "cloudBackup": {
      "vmCloudBackupsPrice": 0.0,
      "serverCloudBackupsPrice": 0.0,
      "workstationCloudBackupsPrice": 0.0,
      "cloudRepositorySpaceUsageAlgorithm": "Consumed",
      "cloudRepositoryAllocatedSpacePrice": 0.0,
      "cloudRepositoryAllocatedSpaceUnits": "GB",
      "cloudRepositoryConsumedSpacePrice": 0.0,
      "cloudRepositoryConsumedSpaceUnits": "TB",
      "freeCloudRepositoryConsumedSpace": null,
      "freeCloudRepositoryConsumedSpaceUnits": "GB",
      "backupDataTransferOutPrice": 0.0,
      "backupDataTransferOutUnits": "GB",
      "insiderProtectionUsedSpacePrice": 0.0,
      "insiderProtectionUsedSpaceUnits": "GB",
      "performanceTierUsedSpacePrice": 0.0,
      "performanceTierUsedSpaceUnits": "GB",
      "capacityTierUsedSpacePrice": 0.0,
      "capacityTierUsedSpaceUnits": "GB",
      "archiveTierUsedSpacePrice": 0.0,
      "archiveTierUsedSpaceUnits": "GB"
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyInvoiceAuditor",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Create Subscription Plan",
        "description": "Creates a subscription plan.",
        "operationId": "CreateSubscriptionPlan",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Subscription plan model.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubscriptionPlanInput"
              },
              "example": {
  "name": "Pittsburgh subscription plan",
  "description": "Subscription plan for Pittsburgh clients",
  "currency": "USD",
  "taxType": "VAT",
  "taxPercent": 10.0,
  "discountPercent": 12.0,
  "managedBackup": {
    "managedServicePrice": 21.0,
    "managedVmPrice": 2.0,
    "managedCloudVmPrice": 0.0,
    "managedWorkstationPrice": 4.0,
    "managedServerAgentPrice": 3.0,
    "freeManagedVms": 0,
    "freeManagedCloudVms": 0,
    "freeManagedWorkstations": 0,
    "freeManagedServerAgents": 0,
    "windowsServerOsPrice": 0.0,
    "windowsClientOsPrice": 0.0,
    "linuxOsPrice": 0.0,
    "macOsPrice": 0.0
  },
  "cloudReplication": {
    "replicatedVmPrice": 10.0,
    "cloudStorageConsumedSpacePrice": 10.0,
    "cloudStorageConsumedSpaceUnits": "TB",
    "freeCloudStorageConsumedSpace": null,
    "freeCloudStorageConsumedSpaceUnits": "GB",
    "computeResourcesPrice": 0.0,
    "computeResourcesUnits": "Hours",
    "freeComputeResources": 1,
    "freeComputeResourcesUnits": "Hours",
    "replicationDataTransferOutPrice": 0.0,
    "replicationDataTransferOutUnits": "GB"
  },
  "fileShareBackup": {
    "fileShareBackupUsedSpacePrice": 0.0,
    "fileShareBackupUsedSpaceUnits": "GB",
    "freeFileShareBackupUsedSpace": null,
    "freeFileShareBackupUsedSpaceUnits": "GB",
    "fileShareArchiveUsedSpacePrice": 0.0,
    "fileShareArchiveUsedSpaceUnits": "GB",
    "freeFileShareArchiveUsedSpace": null,
    "freeFileShareArchiveUsedSpaceUnits": "GB",
    "sourceAmountOfDataPrice": 0.0,
    "sourceAmountOfDataUnits": "GB",
    "freeSourceAmountOfData": null,
    "freeSourceAmountOfDataUnits": "GB"
  },
  "cloudBackup": {
    "vmCloudBackupsPrice": 5.0,
    "serverCloudBackupsPrice": 6.0,
    "workstationCloudBackupsPrice": 7.0,
    "cloudRepositorySpaceUsageAlgorithm": "Consumed",
    "cloudRepositoryAllocatedSpacePrice": 0.0,
    "cloudRepositoryAllocatedSpaceUnits": "GB",
    "cloudRepositoryConsumedSpacePrice": 15.0,
    "cloudRepositoryConsumedSpaceUnits": "TB",
    "freeCloudRepositoryConsumedSpace": null,
    "freeCloudRepositoryConsumedSpaceUnits": "GB",
    "backupDataTransferOutPrice": 8.0,
    "backupDataTransferOutUnits": "GB",
    "insiderProtectionUsedSpacePrice": 0.0,
    "insiderProtectionUsedSpaceUnits": "GB",
    "performanceTierUsedSpacePrice": 0.0,
    "performanceTierUsedSpaceUnits": "GB",
    "capacityTierUsedSpacePrice": 0.0,
    "capacityTierUsedSpaceUnits": "GB",
    "archiveTierUsedSpacePrice": 0.0,
    "archiveTierUsedSpaceUnits": "GB"
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SubscriptionPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "27dff909-0334-4cfa-8aab-a07e8e3c7d9d",
  "name": "Pittsburgh subscription plan",
  "organizationUid": "e4a2df46-8e72-4c22-a79a-a7034205abba",
  "type": "Reseller",
  "description": "Subscription plan for Pittsburgh clients",
  "currency": "USD",
  "taxType": "VAT",
  "taxPercent": 10.0,
  "discountPercent": 12.0,
  "managedBackup": {
    "managedServicePrice": 21.0,
    "managedVmPrice": 2.0,
    "managedCloudVmPrice": 0.0,
    "managedWorkstationPrice": 4.0,
    "managedServerAgentPrice": 3.0,
    "freeManagedVms": 0,
    "freeManagedCloudVms": 0,
    "freeManagedWorkstations": 0,
    "freeManagedServerAgents": 0,
    "windowsServerOsPrice": 0.0,
    "windowsClientOsPrice": 0.0,
    "linuxOsPrice": 0.0,
    "macOsPrice": 0.0
  },
  "cloudReplication": {
    "replicatedVmPrice": 10.0,
    "cloudStorageConsumedSpacePrice": 10.0,
    "cloudStorageConsumedSpaceUnits": "TB",
    "freeCloudStorageConsumedSpace": null,
    "freeCloudStorageConsumedSpaceUnits": "GB",
    "computeResourcesPrice": 0.0,
    "computeResourcesUnits": "Hours",
    "freeComputeResources": 1,
    "freeComputeResourcesUnits": "Hours",
    "replicationDataTransferOutPrice": 0.0,
    "replicationDataTransferOutUnits": "GB"
  },
  "fileShareBackup": {
    "fileShareBackupUsedSpacePrice": 0.0,
    "fileShareBackupUsedSpaceUnits": "GB",
    "freeFileShareBackupUsedSpace": null,
    "freeFileShareBackupUsedSpaceUnits": "GB",
    "fileShareArchiveUsedSpacePrice": 0.0,
    "fileShareArchiveUsedSpaceUnits": "GB",
    "freeFileShareArchiveUsedSpace": null,
    "freeFileShareArchiveUsedSpaceUnits": "GB",
    "sourceAmountOfDataPrice": 0.0,
    "sourceAmountOfDataUnits": "GB",
    "freeSourceAmountOfData": null,
    "freeSourceAmountOfDataUnits": "GB"
  },
  "cloudBackup": {
    "vmCloudBackupsPrice": 5.0,
    "serverCloudBackupsPrice": 6.0,
    "workstationCloudBackupsPrice": 7.0,
    "cloudRepositorySpaceUsageAlgorithm": "Consumed",
    "cloudRepositoryAllocatedSpacePrice": 0.0,
    "cloudRepositoryAllocatedSpaceUnits": "GB",
    "cloudRepositoryConsumedSpacePrice": 15.0,
    "cloudRepositoryConsumedSpaceUnits": "TB",
    "freeCloudRepositoryConsumedSpace": null,
    "freeCloudRepositoryConsumedSpaceUnits": "GB",
    "backupDataTransferOutPrice": 8.0,
    "backupDataTransferOutUnits": "GB",
    "insiderProtectionUsedSpacePrice": 0.0,
    "insiderProtectionUsedSpaceUnits": "GB",
    "performanceTierUsedSpacePrice": 0.0,
    "performanceTierUsedSpaceUnits": "GB",
    "capacityTierUsedSpacePrice": 0.0,
    "capacityTierUsedSpaceUnits": "GB",
    "archiveTierUsedSpacePrice": 0.0,
    "archiveTierUsedSpaceUnits": "GB"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/subscriptionPlans/{subscriptionPlanUid}": {
      "get": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Get Subscription Plan",
        "description": "Returns a resource representation of a subscription plan with the specified UID.",
        "operationId": "GetSubscriptionPlan",
        "parameters": [
          {
            "name": "subscriptionPlanUid",
            "in": "path",
            "description": "Subscription plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SubscriptionPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "27dff909-0334-4cfa-8aab-a07e8e3c7d9d",
  "name": "Gamma subscription plan",
  "organizationUid": "e4a2df46-8e72-4c22-a79a-a7034205abba",
  "type": "Reseller",
  "description": "Subscription plan for Gamma",
  "currency": "USD",
  "taxType": "VAT",
  "taxPercent": 10.0,
  "discountPercent": 12.0,
  "managedBackup": {
    "managedServicePrice": 21.0,
    "managedVmPrice": 2.0,
    "managedCloudVmPrice": 0.0,
    "managedWorkstationPrice": 4.0,
    "managedServerAgentPrice": 3.0,
    "freeManagedVms": 0,
    "freeManagedCloudVms": 0,
    "freeManagedWorkstations": 0,
    "freeManagedServerAgents": 0,
    "windowsServerOsPrice": 0.0,
    "windowsClientOsPrice": 0.0,
    "linuxOsPrice": 0.0,
    "macOsPrice": 0.0
  },
  "cloudReplication": {
    "replicatedVmPrice": 10.0,
    "cloudStorageConsumedSpacePrice": 10.0,
    "cloudStorageConsumedSpaceUnits": "TB",
    "freeCloudStorageConsumedSpace": null,
    "freeCloudStorageConsumedSpaceUnits": "GB",
    "computeResourcesPrice": 0.0,
    "computeResourcesUnits": "Hours",
    "freeComputeResources": 1,
    "freeComputeResourcesUnits": "Hours",
    "replicationDataTransferOutPrice": 0.0,
    "replicationDataTransferOutUnits": "GB"
  },
  "fileShareBackup": {
    "fileShareBackupUsedSpacePrice": 0.0,
    "fileShareBackupUsedSpaceUnits": "GB",
    "freeFileShareBackupUsedSpace": null,
    "freeFileShareBackupUsedSpaceUnits": "GB",
    "fileShareArchiveUsedSpacePrice": 0.0,
    "fileShareArchiveUsedSpaceUnits": "GB",
    "freeFileShareArchiveUsedSpace": null,
    "freeFileShareArchiveUsedSpaceUnits": "GB",
    "sourceAmountOfDataPrice": 0.0,
    "sourceAmountOfDataUnits": "GB",
    "freeSourceAmountOfData": null,
    "freeSourceAmountOfDataUnits": "GB"
  },
  "cloudBackup": {
    "vmCloudBackupsPrice": 5.0,
    "serverCloudBackupsPrice": 6.0,
    "workstationCloudBackupsPrice": 7.0,
    "cloudRepositorySpaceUsageAlgorithm": "Consumed",
    "cloudRepositoryAllocatedSpacePrice": 0.0,
    "cloudRepositoryAllocatedSpaceUnits": "GB",
    "cloudRepositoryConsumedSpacePrice": 15.0,
    "cloudRepositoryConsumedSpaceUnits": "TB",
    "freeCloudRepositoryConsumedSpace": null,
    "freeCloudRepositoryConsumedSpaceUnits": "GB",
    "backupDataTransferOutPrice": 8.0,
    "backupDataTransferOutUnits": "GB",
    "insiderProtectionUsedSpacePrice": 0.0,
    "insiderProtectionUsedSpaceUnits": "GB",
    "performanceTierUsedSpacePrice": 0.0,
    "performanceTierUsedSpaceUnits": "GB",
    "capacityTierUsedSpacePrice": 0.0,
    "capacityTierUsedSpaceUnits": "GB",
    "archiveTierUsedSpacePrice": 0.0,
    "archiveTierUsedSpaceUnits": "GB"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/SubscriptionPlan"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyInvoiceAuditor",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderInvoiceAuditor",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Modify Subscription Plan",
        "description": "Modifies a subscription plan with the specified UID.",
        "operationId": "PatchSubscriptionPlan",
        "parameters": [
          {
            "name": "subscriptionPlanUid",
            "in": "path",
            "description": "Subscription plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Gamma subscription plan",
    "path": "/name",
    "op": "replace"
  },
  {
    "value": 10,
    "path": "/ManagedBackup/managedVmPrice",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SubscriptionPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "27dff909-0334-4cfa-8aab-a07e8e3c7d9d",
  "name": "Gamma subscription plan",
  "organizationUid": "e4a2df46-8e72-4c22-a79a-a7034205abba",
  "type": "Reseller",
  "description": "Subscription plan for Gamma",
  "currency": "USD",
  "taxType": "VAT",
  "taxPercent": 10.0,
  "discountPercent": 12.0,
  "managedBackup": {
    "managedServicePrice": 21.0,
    "managedVmPrice": 10.0,
    "managedCloudVmPrice": 0.0,
    "managedWorkstationPrice": 4.0,
    "managedServerAgentPrice": 3.0,
    "freeManagedVms": 0,
    "freeManagedCloudVms": 0,
    "freeManagedWorkstations": 0,
    "freeManagedServerAgents": 0,
    "windowsServerOsPrice": 0.0,
    "windowsClientOsPrice": 0.0,
    "linuxOsPrice": 0.0,
    "macOsPrice": 0.0
  },
  "cloudReplication": {
    "replicatedVmPrice": 10.0,
    "cloudStorageConsumedSpacePrice": 10.0,
    "cloudStorageConsumedSpaceUnits": "TB",
    "freeCloudStorageConsumedSpace": null,
    "freeCloudStorageConsumedSpaceUnits": "GB",
    "computeResourcesPrice": 0.0,
    "computeResourcesUnits": "Hours",
    "freeComputeResources": 1,
    "freeComputeResourcesUnits": "Hours",
    "replicationDataTransferOutPrice": 0.0,
    "replicationDataTransferOutUnits": "GB"
  },
  "fileShareBackup": {
    "fileShareBackupUsedSpacePrice": 0.0,
    "fileShareBackupUsedSpaceUnits": "GB",
    "freeFileShareBackupUsedSpace": null,
    "freeFileShareBackupUsedSpaceUnits": "GB",
    "fileShareArchiveUsedSpacePrice": 0.0,
    "fileShareArchiveUsedSpaceUnits": "GB",
    "freeFileShareArchiveUsedSpace": null,
    "freeFileShareArchiveUsedSpaceUnits": "GB",
    "sourceAmountOfDataPrice": 0.0,
    "sourceAmountOfDataUnits": "GB",
    "freeSourceAmountOfData": null,
    "freeSourceAmountOfDataUnits": "GB"
  },
  "cloudBackup": {
    "vmCloudBackupsPrice": 5.0,
    "serverCloudBackupsPrice": 6.0,
    "workstationCloudBackupsPrice": 7.0,
    "cloudRepositorySpaceUsageAlgorithm": "Consumed",
    "cloudRepositoryAllocatedSpacePrice": 0.0,
    "cloudRepositoryAllocatedSpaceUnits": "GB",
    "cloudRepositoryConsumedSpacePrice": 15.0,
    "cloudRepositoryConsumedSpaceUnits": "TB",
    "freeCloudRepositoryConsumedSpace": null,
    "freeCloudRepositoryConsumedSpaceUnits": "GB",
    "backupDataTransferOutPrice": 8.0,
    "backupDataTransferOutUnits": "GB",
    "insiderProtectionUsedSpacePrice": 0.0,
    "insiderProtectionUsedSpaceUnits": "GB",
    "performanceTierUsedSpacePrice": 0.0,
    "performanceTierUsedSpaceUnits": "GB",
    "capacityTierUsedSpacePrice": 0.0,
    "capacityTierUsedSpaceUnits": "GB",
    "archiveTierUsedSpacePrice": 0.0,
    "archiveTierUsedSpaceUnits": "GB"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/SubscriptionPlan"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Delete Subscription Plan",
        "description": "Deletes a subscription plan with the specified UID.",
        "operationId": "DeleteSubscriptionPlan",
        "parameters": [
          {
            "name": "subscriptionPlanUid",
            "in": "path",
            "description": "Subscription plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/subscriptionPlans/{subscriptionPlanUid}/companies": {
      "get": {
        "tags": [
          "Subscription Plans"
        ],
        "summary": "Get Companies by Subscription Plan",
        "description": "Returns a collection resource representation of all companies to which a subscription plan with the specified UID is assigned.",
        "operationId": "GetCompaniesBySubscriptionPlan",
        "parameters": [
          {
            "name": "subscriptionPlanUid",
            "in": "path",
            "description": "Subscription plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/CompanyExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Company"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "Alpha",
    "status": "Active",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "name": "Alpha",
        "alias": "alpha",
        "type": "Company",
        "taxId": "12345",
        "email": "s.smith@alpha.com",
        "phone": "414-351-6025",
        "country": 1,
        "state": 49,
        "city": "Milwaukee",
        "street": "3025 Johnny Lane",
        "notes": "",
        "zipCode": "53217",
        "website": "www.alpha.com",
        "companyId": "alpha"
      }
    }
  },
  {
    "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
    "name": "Beta",
    "status": "Active",
    "resellerUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
    "subscriptionPlanUid": "c4be0ec8-d681-4f6c-90e8-30eebccab08c",
    "permissions": [
      "REST"
    ],
    "IsAlarmDetectEnabled": false,
    "_embedded": {
      "organization": {
        "instanceUid": "0fe1c027-e6b0-419a-8606-0ff67dd41a04",
        "name": "Beta",
        "alias": "beta",
        "type": "Company",
        "taxId": "09876",
        "email": "m.lore@beta.com",
        "phone": "503-254-0212",
        "country": 1,
        "state": 37,
        "city": "Portland",
        "street": "5006 Gateway Road",
        "notes": "",
        "zipCode": "97220",
        "website": "www.beta.com",
        "companyId": "beta"
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/rules": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Discovery Rules",
        "description": "Returns a collection resource representation of all discovery rules.",
        "operationId": "GetDiscoveryRules",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4360bdb6-4d67-4651-b811-0b788b78ace8",
    "name": "Scheduled Linux Network Rule",
    "masterAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
    "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
    "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "systemType": "Linux",
    "status": "Created",
    "lastRun": null,
    "filter": {
      "exclusionMask": [],
      "ignoreInaccessibleMachine": false,
      "osTypes": null,
      "applications": null,
      "customApplication": null,
      "platforms": null
    },
    "notificationSettings": {
      "isEnabled": false,
      "scheduleType": "Days",
      "scheduleTime": "00:00",
      "scheduleDay": "Sunday",
      "to": null,
      "subject": null,
      "notifyOnTheFirstRun": false
    },
    "scheduleSettings": {
      "scheduleType": "Monthly",
      "timeZone": {
        "timeZoneId": "Pacific Standard Time",
        "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
        "utcOffset": -420
      },
      "dailyScheduleSettings": null,
      "monthlyScheduleSettings": {
        "time": "11:00",
        "calendarSettings": {
          "monthlyMode": "Day",
          "weekDayNumber": null,
          "dayOfWeek": null,
          "day": 2,
          "months": [
            "Jun",
            "Jul",
            "Dec"
          ]
        }
      },
      "periodicalScheduleSettings": null
    },
    "totalComputersCount": 8,
    "onlineComputersCount": 8,
    "offlineComputersCount": 0
  },
  {
    "instanceUid": "54bba0cb-128e-4891-936f-b1418db16ee8",
    "name": "AD Rule",
    "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
    "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
    "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "systemType": "Windows",
    "status": "Created",
    "lastRun": null,
    "filter": {
      "exclusionMask": [
        "string"
      ],
      "ignoreInaccessibleMachine": true,
      "osTypes": [
        "WindowsServer"
      ],
      "applications": [
        "MicrosoftExchangeServer",
        "MicrosoftActiveDirectory"
      ],
      "customApplication": null,
      "platforms": [
        "MicrosoftHyperVandVmWareVSpere"
      ]
    },
    "notificationSettings": {
      "isEnabled": true,
      "scheduleType": "Days",
      "scheduleTime": "08:00",
      "scheduleDay": "Sunday",
      "to": "administrator@vspc.com",
      "subject": "VSPC Discovery Results",
      "notifyOnTheFirstRun": false
    },
    "scheduleSettings": {
      "scheduleType": "NotScheduled",
      "timeZone": {
        "timeZoneId": "Pacific Standard Time",
        "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
        "utcOffset": -420
      },
      "dailyScheduleSettings": null,
      "monthlyScheduleSettings": null,
      "periodicalScheduleSettings": null
    },
    "totalComputersCount": 14,
    "onlineComputersCount": 14,
    "offlineComputersCount": 0
  },
  {
    "instanceUid": "20ad2680-b050-4144-b745-8da26f2a0e51",
    "name": "AD Rule 2",
    "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
    "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
    "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "systemType": "Windows",
    "status": "Created",
    "lastRun": null,
    "filter": {
      "exclusionMask": [
        "string"
      ],
      "ignoreInaccessibleMachine": true,
      "osTypes": [
        "WindowsServer"
      ],
      "applications": [
        "MicrosoftExchangeServer",
        "MicrosoftActiveDirectory"
      ],
      "customApplication": null,
      "platforms": [
        "MicrosoftHyperVandVmWareVSpere"
      ]
    },
    "notificationSettings": {
      "isEnabled": true,
      "scheduleType": "Days",
      "scheduleTime": "08:00",
      "scheduleDay": "Sunday",
      "to": "administrator@vspc.com",
      "subject": "VSPC Discovery Results",
      "notifyOnTheFirstRun": false
    },
    "scheduleSettings": {
      "scheduleType": "NotScheduled",
      "timeZone": {
        "timeZoneId": "Pacific Standard Time",
        "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
        "utcOffset": -420
      },
      "dailyScheduleSettings": null,
      "monthlyScheduleSettings": null,
      "periodicalScheduleSettings": null
    },
    "totalComputersCount": 7,
    "onlineComputersCount": 7,
    "offlineComputersCount": 0
  },
  {
    "instanceUid": "2b60802c-8c3f-40ba-86b6-6fd0fbf8b059",
    "name": "Custom Rule",
    "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
    "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
    "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "systemType": "Windows",
    "status": "Created",
    "lastRun": null,
    "filter": {
      "exclusionMask": [
        "string"
      ],
      "ignoreInaccessibleMachine": true,
      "osTypes": [
        "WindowsServer",
        "WindowsWorkstation"
      ],
      "applications": [
        "MicrosoftExchangeServer"
      ],
      "customApplication": null,
      "platforms": [
        "MicrosoftHyperVandVmWareVSpere"
      ]
    },
    "notificationSettings": {
      "isEnabled": true,
      "scheduleType": "Days",
      "scheduleTime": "08:00",
      "scheduleDay": "Sunday",
      "to": "administrator@vspc.com",
      "subject": "VSPC Discovery Results",
      "notifyOnTheFirstRun": false
    },
    "scheduleSettings": {
      "scheduleType": "NotScheduled",
      "timeZone": {
        "timeZoneId": "Pacific Standard Time",
        "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
        "utcOffset": -420
      },
      "dailyScheduleSettings": null,
      "monthlyScheduleSettings": null,
      "periodicalScheduleSettings": null
    },
    "totalComputersCount": 21,
    "onlineComputersCount": 21,
    "offlineComputersCount": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/rules/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Discovery Rule",
        "description": "Returns a resource representation of a discovery rule with the specified UID.",
        "operationId": "GetDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4360bdb6-4d67-4651-b811-0b788b78ace8",
  "name": "Scheduled Linux Network Rule",
  "masterAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
  "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
  "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
  "systemType": "Linux",
  "status": "Created",
  "lastRun": null,
  "filter": {
    "exclusionMask": [],
    "ignoreInaccessibleMachine": false,
    "osTypes": null,
    "applications": null,
    "customApplication": null,
    "platforms": null
  },
  "notificationSettings": {
    "isEnabled": false,
    "scheduleType": "Days",
    "scheduleTime": "00:00",
    "scheduleDay": "Sunday",
    "to": null,
    "subject": null,
    "notifyOnTheFirstRun": false
  },
  "scheduleSettings": {
    "scheduleType": "Monthly",
    "timeZone": {
      "timeZoneId": "Pacific Standard Time",
      "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
      "utcOffset": -420
    },
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": {
      "time": "11:00",
      "calendarSettings": {
        "monthlyMode": "Day",
        "weekDayNumber": null,
        "dayOfWeek": null,
        "day": 2,
        "months": [
          "Jun",
          "Jul",
          "Dec"
        ]
      }
    },
    "periodicalScheduleSettings": null
  },
  "totalComputersCount": 8,
  "onlineComputersCount": 8,
  "offlineComputersCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/DiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Discovery Rule",
        "description": "Modifies a discovery rule with the specified UID.",
        "operationId": "PatchDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Day",
    "path": "/schedulesettings/monthlyschedulesettings/calendarsettings/monthlymode",
    "op": "replace"
  },
  {
    "value": 2,
    "path": "/schedulesettings/monthlyschedulesettings/calendarsettings/day",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4360bdb6-4d67-4651-b811-0b788b78ace8",
  "name": "Scheduled Linux Network Rule",
  "masterAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
  "locationUid": "602b1691-deb4-493b-94df-b983b673085a",
  "companyUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
  "systemType": "Linux",
  "status": "Created",
  "lastRun": null,
  "filter": {
    "exclusionMask": [],
    "ignoreInaccessibleMachine": false,
    "osTypes": null,
    "applications": null,
    "customApplication": null,
    "platforms": null
  },
  "notificationSettings": {
    "isEnabled": false,
    "scheduleType": "Days",
    "scheduleTime": "00:00",
    "scheduleDay": "Sunday",
    "to": null,
    "subject": null,
    "notifyOnTheFirstRun": false
  },
  "scheduleSettings": {
    "scheduleType": "Monthly",
    "timeZone": {
      "timeZoneId": "Pacific Standard Time",
      "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
      "utcOffset": -420
    },
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": {
      "time": "11:00",
      "calendarSettings": {
        "monthlyMode": "Day",
        "weekDayNumber": null,
        "dayOfWeek": null,
        "day": 2,
        "months": [
          "Jun",
          "Jul",
          "Dec"
        ]
      }
    },
    "periodicalScheduleSettings": null
  },
  "totalComputersCount": 1,
  "onlineComputersCount": 1,
  "offlineComputersCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/DiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Discovery"
        ],
        "summary": "Delete Discovery Rule",
        "description": "Deletes a discovery rule with the specified UID.",
        "operationId": "DeleteDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/{ruleUid}/start": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Start Discovery Rule",
        "description": "Run discovery by a discovery rule with the specified UID. Returns a positive response when the discovery task is added to the internal queue and not when the task is executed.",
        "operationId": "StartDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/{ruleUid}/stop": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Stop Discovery Rule",
        "description": "Stop discovery by a discovery rule with the specified UID. Returns a positive response when the task is added to the internal queue and not when the task is executed.",
        "operationId": "StopDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/{ruleUid}/reset": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Reset Discovery Rule Results",
        "description": "Resets results of discovery by a discovery rule with the specified UID.",
        "operationId": "ResetComputersByDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Discovery Rules for Windows",
        "description": "Returns a collection resource representation of all Windows discovery rules.",
        "operationId": "GetWindowsDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WindowsDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a9771dc2-cf92-4bbc-a6cb-f23f4b9d40c1",
    "method": "NetworkBased",
    "useMasterManagementAgentCredentials": true,
    "accessAccount": {
      "userName": ".\\administrator",
      "password": null
    },
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true,
      "backupAgentSettings": {
        "backupAgentUid": "00000000-0000-0000-0000-000000000000",
        "disableScheduledBackups": false,
        "disableControlPanelNotification": false,
        "disableBackupOverMeteredConnection": true,
        "disableScheduleWakeup": false,
        "throttleBackupActivity": true,
        "restrictVpnConnections": false,
        "limitBandwidthConsumption": false,
        "bandwidthSpeedLimit": 1,
        "bandwidthSpeedLimitUnit": "MbitPerSec",
        "flrWithoutAdminPrivilegesAllowed": false
      }
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "a9771dc2-cf92-4bbc-a6cb-f23f4b9d40c1",
        "name": "Scheduled Windows Network Rule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "Daily",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": {
            "time": "02:30",
            "specificDays": [
              "Sunday"
            ]
          },
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
    "method": "Manual",
    "useMasterManagementAgentCredentials": true,
    "accessAccount": {
      "userName": ".\\administrator",
      "password": null
    },
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true,
      "backupAgentSettings": {
        "backupAgentUid": "00000000-0000-0000-0000-000000000000",
        "disableScheduledBackups": false,
        "disableControlPanelNotification": false,
        "disableBackupOverMeteredConnection": true,
        "disableScheduleWakeup": false,
        "throttleBackupActivity": true,
        "restrictVpnConnections": false,
        "limitBandwidthConsumption": false,
        "bandwidthSpeedLimit": 1,
        "bandwidthSpeedLimitUnit": "MbitPerSec",
        "flrWithoutAdminPrivilegesAllowed": false
      }
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
        "name": "VMDiscoveryRule2",
        "masterAgentUid": "24ef27ee-3e2f-4029-98cd-76dd71979778",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T08:32:41.8355784+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
    "method": "Manual",
    "useMasterManagementAgentCredentials": true,
    "accessAccount": {
      "userName": ".\\administrator",
      "password": null
    },
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true,
      "backupAgentSettings": {
        "backupAgentUid": "00000000-0000-0000-0000-000000000000",
        "disableScheduledBackups": false,
        "disableControlPanelNotification": false,
        "disableBackupOverMeteredConnection": true,
        "disableScheduleWakeup": false,
        "throttleBackupActivity": true,
        "restrictVpnConnections": false,
        "limitBandwidthConsumption": false,
        "bandwidthSpeedLimit": 1,
        "bandwidthSpeedLimitUnit": "MbitPerSec",
        "flrWithoutAdminPrivilegesAllowed": false
      }
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
        "name": "VMDiscoveryRule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T08:32:42.8355387+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 3,
        "onlineComputersCount": 3,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "6d24df74-a20c-4281-a3be-21cb1ba66dc7",
    "method": "NetworkBased",
    "useMasterManagementAgentCredentials": true,
    "accessAccount": {
      "userName": ".\\administrator",
      "password": null
    },
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true,
      "backupAgentSettings": {
        "backupAgentUid": "00000000-0000-0000-0000-000000000000",
        "disableScheduledBackups": false,
        "disableControlPanelNotification": false,
        "disableBackupOverMeteredConnection": true,
        "disableScheduleWakeup": false,
        "throttleBackupActivity": true,
        "restrictVpnConnections": false,
        "limitBandwidthConsumption": false,
        "bandwidthSpeedLimit": 1,
        "bandwidthSpeedLimitUnit": "MbitPerSec",
        "flrWithoutAdminPrivilegesAllowed": false
      }
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "6d24df74-a20c-4281-a3be-21cb1ba66dc7",
        "name": "AlphaRule",
        "masterAgentUid": "4f70a0e8-2abb-48b0-ac36-31ea2d2f87b7",
        "locationUid": "9987493b-b871-4629-a573-390579928406",
        "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T09:10:01.2093077+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 2,
        "onlineComputersCount": 2,
        "offlineComputersCount": 0
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/rules/windows/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Discovery Rule for Windows",
        "description": "Returns a resource representation of a Windows discovery rule with the specified UID.",
        "operationId": "GetWindowsDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "e79bd35c-0786-47b0-8726-43320086a456",
  "method": "AD",
  "useMasterManagementAgentCredentials": true,
  "accessAccount": {
    "userName": "VSPC\\administrator",
    "password": null
  },
  "deploymentSettings": {
    "isEnabled": false,
    "backupPolicyUid": null,
    "setReadOnlyAccess": true,
    "backupAgentSettings": {
      "backupAgentUid": "00000000-0000-0000-0000-000000000000",
      "disableScheduledBackups": false,
      "disableControlPanelNotification": false,
      "disableBackupOverMeteredConnection": true,
      "disableScheduleWakeup": false,
      "throttleBackupActivity": true,
      "restrictVpnConnections": false,
      "limitBandwidthConsumption": false,
      "bandwidthSpeedLimit": 1,
      "bandwidthSpeedLimitUnit": "MbitPerSec",
      "flrWithoutAdminPrivilegesAllowed": false
    }
  },
  "_embedded": {
    "discoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Discovery Rule for Windows",
        "description": "Modifies a Windows discovery rule with the specified UID.",
        "operationId": "PatchWindowsDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": false,
    "path": "/deploymentsettings/isenabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "571a75e7-8b3a-4288-b9ce-59ac207a15fd",
  "method": "NetworkBased",
  "useMasterManagementAgentCredentials": true,
  "accessAccount": {
    "userName": ".\\administrator",
    "password": null
  },
  "deploymentSettings": {
    "isEnabled": false,
    "backupPolicyUid": "c948986f-e275-4eb1-9678-4aae8a6d3925",
    "setReadOnlyAccess": true,
    "backupAgentSettings": {
      "backupAgentUid": "00000000-0000-0000-0000-000000000000",
      "disableScheduledBackups": true,
      "disableControlPanelNotification": true,
      "disableBackupOverMeteredConnection": true,
      "disableScheduleWakeup": true,
      "throttleBackupActivity": true,
      "restrictVpnConnections": true,
      "limitBandwidthConsumption": true,
      "bandwidthSpeedLimit": 2,
      "bandwidthSpeedLimitUnit": "MbitPerSec",
      "flrWithoutAdminPrivilegesAllowed": true
    }
  },
  "_embedded": {
    "discoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/networkBased": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Network-Based Discovery Rules for Windows",
        "description": "Returns a collection resource representation of all Windows network-based discovery rules.",
        "operationId": "GetWindowsNetworkBasedDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a9771dc2-cf92-4bbc-a6cb-f23f4b9d40c1",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.17.53.1",
        "lastIp": "172.17.53.50",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "a9771dc2-cf92-4bbc-a6cb-f23f4b9d40c1",
        "name": "Scheduled Windows Network Rule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "Daily",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": {
            "time": "02:30",
            "specificDays": [
              "Sunday"
            ]
          },
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "a9771dc2-cf92-4bbc-a6cb-f23f4b9d40c1",
        "method": "NetworkBased",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "6d24df74-a20c-4281-a3be-21cb1ba66dc7",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.25.48.42",
        "lastIp": "172.25.48.42",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "6d24df74-a20c-4281-a3be-21cb1ba66dc7",
        "name": "AlphaRule",
        "masterAgentUid": "4f70a0e8-2abb-48b0-ac36-31ea2d2f87b7",
        "locationUid": "9987493b-b871-4629-a573-390579928406",
        "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T09:10:01.2093077+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 2,
        "onlineComputersCount": 2,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "6d24df74-a20c-4281-a3be-21cb1ba66dc7",
        "method": "NetworkBased",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "6d3e3bda-4442-4efd-84f8-7f6ebf26df2b",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.16.21.165",
        "lastIp": "172.16.21.175",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "6d3e3bda-4442-4efd-84f8-7f6ebf26df2b",
        "name": "GammaRule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "6d3e3bda-4442-4efd-84f8-7f6ebf26df2b",
        "method": "NetworkBased",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "342a3278-dedc-4ce3-aaa7-05016ce3a416",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.16.21.165",
        "lastIp": "172.16.21.175",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "342a3278-dedc-4ce3-aaa7-05016ce3a416",
        "name": "DeltaRule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "342a3278-dedc-4ce3-aaa7-05016ce3a416",
        "method": "NetworkBased",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Create Network-Based Discovery Rule for Windows",
        "description": "Creates a Windows network-based discovery rule.",
        "operationId": "CreateWindowsNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Discovery rule settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRuleInput"
              },
              "example": {
  "name": "Windows Network Rule",
  "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
  "networks": [
    {
      "networkName": "Production",
      "firstIp": "172.17.53.1",
      "lastIp": "172.17.53.50",
      "trustOptions": null
    }
  ],
  "useMasterManagementAgentCredentials": true,
  "accessAccount": {
    "userName": ".\\administrator",
    "password": "Password1"
  },
  "filter": {
    "exclusionMask": [
      "string"
    ],
    "ignoreInaccessibleMachine": true,
    "osTypes": [
      "WindowsServer"
    ],
    "applications": [
      "MicrosoftExchangeServer"
    ],
    "customApplication": null,
    "platforms": [
      "MicrosoftHyperVandVmWareVSpere"
    ]
  },
  "notificationSettings": {
    "isEnabled": true,
    "scheduleType": "Days",
    "scheduleTime": "08:00",
    "scheduleDay": "Sunday",
    "to": "administrator@mycompany.com",
    "subject": "VSPC Discovery Results",
    "notifyOnTheFirstRun": false
  },
  "deploymentSettings": {
    "isEnabled": true,
    "backupPolicyUid": "c948986f-e275-4eb1-9678-4aae8a6d3925",
    "setReadOnlyAccess": true,
    "backupAgentSettings": {
      "backupAgentUid": "00000000-0000-0000-0000-000000000000",
      "disableScheduledBackups": true,
      "disableControlPanelNotification": true,
      "disableBackupOverMeteredConnection": true,
      "disableScheduleWakeup": true,
      "throttleBackupActivity": true,
      "restrictVpnConnections": true,
      "limitBandwidthConsumption": true,
      "bandwidthSpeedLimit": 2,
      "bandwidthSpeedLimitUnit": "MbitPerSec",
      "flrWithoutAdminPrivilegesAllowed": true
    }
  },
  "scheduleSettings": {
    "scheduleType": "NotScheduled",
    "timeZone": null,
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": null,
    "periodicalScheduleSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "571a75e7-8b3a-4288-b9ce-59ac207a15fd",
  "networks": [
    {
      "networkName": "Production",
      "firstIp": "172.17.53.1",
      "lastIp": "172.17.53.50",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/networkBased/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Network-Based Discovery Rule for Windows",
        "description": "Returns a resource representation of a Windows network-based discovery rule.",
        "operationId": "GetWindowsNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "571a75e7-8b3a-4288-b9ce-59ac207a15fd",
  "networks": [
    {
      "networkName": "Production",
      "firstIp": "172.17.53.1",
      "lastIp": "172.17.53.50",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Network-Based Discovery Rule for Windows",
        "description": "Modifies a Windows network-based discovery rule with the specified UID.",
        "operationId": "PatchWindowsNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Production Patched",
    "path": "/networks/0/networkName",
    "op": "replace"
  },
  {
    "value": "172.17.53.9",
    "path": "/networks/0/lastIp",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "571a75e7-8b3a-4288-b9ce-59ac207a15fd",
  "networks": [
    {
      "networkName": "Production Patched",
      "firstIp": "172.17.53.1",
      "lastIp": "172.17.53.9",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsNetworkBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/adBased": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Active Directory Discovery Rules for Windows",
        "description": "Returns a collection resource representation of all Active Directory discovery rules.",
        "operationId": "GetWindowsActiveDirectoryBasedDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
    "customQuery": "OU=auto, DC=n, DC=local",
    "adMethod": "Query",
    "skipOfflineComputersDays": 30,
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
        "name": "AD Rule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
        "method": "AD",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": "n\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "5e101155-f629-4fee-9c36-88dcad162aab",
    "customQuery": "OU=auto, DC=n, DC=local",
    "adMethod": "Query",
    "skipOfflineComputersDays": 30,
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "5e101155-f629-4fee-9c36-88dcad162aab",
        "name": "AD Rule 2",
        "masterAgentUid": "10af8b45-e6dc-4036-a8c3-7f18883f4a77",
        "locationUid": "29f83ee3-dd80-40fc-a419-13d010f00271",
        "companyUid": "8daff77c-de61-492d-9bf5-685b6aa31950",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [
            "string"
          ],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": [
            "MicrosoftExchangeServer",
            "MicrosoftActiveDirectory"
          ],
          "customApplication": null,
          "platforms": [
            "MicrosoftHyperVandVmWareVSpere"
          ]
        },
        "notificationSettings": {
          "isEnabled": true,
          "scheduleType": "Days",
          "scheduleTime": "2021-03-16T07:00:00Z",
          "scheduleDay": "Sunday",
          "to": "administrator@mycompany.com",
          "subject": "VSPC Discovery Results",
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "5e101155-f629-4fee-9c36-88dcad162aab",
        "method": "AD",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": "tech\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Create Active Directory Discovery Rule for Windows",
        "description": "Creates an Active Directory discovery rule.",
        "operationId": "CreateWindowsActiveDirectoryBasedDiscoveryRule",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Discovery rule settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRuleInput"
              },
              "example": {
  "name": "Alpha AD Rule",
  "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
  "skipOfflineComputersDays": 45,
  "customQuery": "OU=auto, DC=n, DC=local",
  "adMethod": "Query",
  "useMasterManagementAgentCredentials": true,
  "accessAccount": {
    "userName": "alpha\\administrator",
    "password": "Password1"
  },
  "filter": {
    "exclusionMask": [
      "string"
    ],
    "ignoreInaccessibleMachine": true,
    "osTypes": [
      "WindowsServer"
    ],
    "applications": [
      "MicrosoftExchangeServer",
      "MicrosoftActiveDirectory"
    ],
    "customApplication": null,
    "platforms": [
      "MicrosoftHyperVandVmWareVSpere"
    ]
  },
  "notificationSettings": {
    "isEnabled": true,
    "scheduleType": "Days",
    "scheduleTime": "08:00",
    "scheduleDay": "Sunday",
    "to": "administrator@vspc.com",
    "subject": "VSPC Discovery Results",
    "notifyOnTheFirstRun": false
  },
  "deploymentSettings": {
    "isEnabled": true,
    "backupPolicyUid": "c948986f-e275-4eb1-9678-4aae8a6d3925",
    "setReadOnlyAccess": true,
    "backupAgentSettings": {
      "backupAgentUid": "00000000-0000-0000-0000-000000000000",
      "disableScheduledBackups": true,
      "disableControlPanelNotification": true,
      "disableBackupOverMeteredConnection": true,
      "disableScheduleWakeup": true,
      "throttleBackupActivity": true,
      "restrictVpnConnections": true,
      "limitBandwidthConsumption": false,
      "bandwidthSpeedLimit": 2,
      "bandwidthSpeedLimitUnit": "MbitPerSec",
      "flrWithoutAdminPrivilegesAllowed": true
    }
  },
  "scheduleSettings": {
    "scheduleType": "NotScheduled",
    "timeZone": null,
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": null,
    "periodicalScheduleSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "20ad2680-b050-4144-b745-8da26f2a0e51",
  "customQuery": "OU=auto, DC=n, DC=local",
  "adMethod": "Query",
  "skipOfflineComputersDays": 45,
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/adBased/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Active Directory Discovery Rule for Windows",
        "description": "Returns a resource representation of an Active Directory discovery rule with the specified UID.",
        "operationId": "GetWindowsActiveDirectoryBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
  "customQuery": "OU=auto, DC=n, DC=local",
  "adMethod": "Query",
  "skipOfflineComputersDays": 30,
  "_embedded": {
    "discoveryRule": {
      "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
      "name": "The Simplest AD Rule By Search",
      "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
      "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
      "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
      "systemType": "Windows",
      "status": "Created",
      "lastRun": null,
      "filter": {
        "exclusionMask": [],
        "ignoreInaccessibleMachine": false,
        "osTypes": null,
        "applications": null,
        "customApplication": null,
        "platforms": null
      },
      "notificationSettings": {
        "isEnabled": false,
        "scheduleType": "Days",
        "scheduleTime": "00:00",
        "scheduleDay": "Sunday",
        "to": null,
        "subject": null,
        "notifyOnTheFirstRun": false
      },
      "scheduleSettings": {
        "scheduleType": "NotScheduled",
        "timeZone": {
          "timeZoneId": "Pacific Standard Time",
          "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
          "utcOffset": -420
        },
        "dailyScheduleSettings": null,
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null
      },
      "totalComputersCount": 1,
      "onlineComputersCount": 1,
      "offlineComputersCount": 0
    },
    "windowsDiscoveryRule": {
      "instanceUid": "33300339-299e-4092-a203-437aa3201e4f",
      "method": "AD",
      "useMasterManagementAgentCredentials": true,
      "accessAccount": {
        "userName": "n\\administrator",
        "password": null
      },
      "deploymentSettings": {
        "isEnabled": false,
        "backupPolicyUid": null,
        "setReadOnlyAccess": true,
        "backupAgentSettings": {
          "backupAgentUid": "00000000-0000-0000-0000-000000000000",
          "disableScheduledBackups": false,
          "disableControlPanelNotification": false,
          "disableBackupOverMeteredConnection": true,
          "disableScheduleWakeup": false,
          "throttleBackupActivity": true,
          "restrictVpnConnections": false,
          "limitBandwidthConsumption": false,
          "bandwidthSpeedLimit": 1,
          "bandwidthSpeedLimitUnit": "MbitPerSec",
          "flrWithoutAdminPrivilegesAllowed": false
        }
      },
      "_embedded": {
        "discoveryRule": null
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Active Directory Discovery Rule for Windows",
        "description": "Modifies an Active Directory discovery rule with the specified UID.",
        "operationId": "PatchWindowsActiveDirectoryBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Query",
    "path": "/admethod",
    "op": "replace"
  },
  {
    "value": 30,
    "path": "/skipofflinecomputersdays",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "e79bd35c-0786-47b0-8726-43320086a456",
  "customQuery": "OU=auto, DC=n, DC=local",
  "adMethod": "Query",
  "skipOfflineComputersDays": 30,
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsActiveDirectoryBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/custom": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Import-Based Discovery Rules for Windows",
        "description": "Returns a collection resource representation of all Windows discovery rules based on lists of IP addresses and DNS names.",
        "operationId": "GetWindowsCustomDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WindowsCustomDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
    "hosts": [
      "r2vawServ2",
      "r2em"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
        "name": "EmptyVMDiscoveryRule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T08:32:42.8355387+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 3,
        "onlineComputersCount": 3,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
        "method": "Manual",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "cef32cf4-c7d9-47e2-a612-c8fd350cad39",
    "hosts": [
      "host1",
      "172.16.21.161"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "cef32cf4-c7d9-47e2-a612-c8fd350cad39",
        "name": "Custom Rule",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "cef32cf4-c7d9-47e2-a612-c8fd350cad39",
        "method": "Manual",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "abd3e06a-b4a6-49e9-8abe-4ff533ec7024",
    "hosts": [
      "host1",
      "host2"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "abd3e06a-b4a6-49e9-8abe-4ff533ec7024",
        "name": "Custom Rule 2",
        "masterAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Windows",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "abd3e06a-b4a6-49e9-8abe-4ff533ec7024",
        "method": "Manual",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
    "hosts": [
      "r2vawServ1"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
        "name": "VMDiscoveryRule2",
        "masterAgentUid": "24ef27ee-3e2f-4029-98cd-76dd71979778",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "systemType": "Windows",
        "status": "Success",
        "lastRun": "2021-08-15T08:32:41.8355784+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "windowsDiscoveryRule": {
        "instanceUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
        "method": "Manual",
        "useMasterManagementAgentCredentials": true,
        "accessAccount": {
          "userName": ".\\administrator",
          "password": null
        },
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true,
          "backupAgentSettings": {
            "backupAgentUid": "00000000-0000-0000-0000-000000000000",
            "disableScheduledBackups": false,
            "disableControlPanelNotification": false,
            "disableBackupOverMeteredConnection": true,
            "disableScheduleWakeup": false,
            "throttleBackupActivity": true,
            "restrictVpnConnections": false,
            "limitBandwidthConsumption": false,
            "bandwidthSpeedLimit": 1,
            "bandwidthSpeedLimitUnit": "MbitPerSec",
            "flrWithoutAdminPrivilegesAllowed": false
          }
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Create Import-Based Discovery Rule for Windows",
        "description": "Creates a Windows rule based on a list of IP addresses and DNS names.",
        "operationId": "CreateWindowsCustomDiscoveryRule",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Discovery rule configuration data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowsCustomDiscoveryRuleInput"
              },
              "example": {
  "name": "Complex Custom Rule",
  "masterAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
  "hosts": [
    "vaw2.hv1.tech.local",
    "172.16.21.161"
  ],
  "useMasterManagementAgentCredentials": true,
  "accessAccount": {
    "userName": ".\\administrator",
    "password": "Password1"
  },
  "filter": {
    "exclusionMask": [
      "string"
    ],
    "ignoreInaccessibleMachine": true,
    "osTypes": [
      "WindowsServer",
      "WindowsWorkstation"
    ],
    "applications": [
      "MicrosoftExchangeServer"
    ],
    "customApplication": null,
    "platforms": [
      "MicrosoftHyperVandVmWareVSpere"
    ]
  },
  "notificationSettings": {
    "isEnabled": true,
    "scheduleType": "Days",
    "scheduleTime": "08:00",
    "scheduleDay": "Sunday",
    "to": "administrator@mycompany.com",
    "subject": "VSPC Discovery Results",
    "notifyOnTheFirstRun": false
  },
  "deploymentSettings": {
    "isEnabled": true,
    "backupPolicyUid": "c948986f-e275-4eb1-9678-4aae8a6d3925",
    "setReadOnlyAccess": true,
    "backupAgentSettings": {
      "backupAgentUid": "00000000-0000-0000-0000-000000000000",
      "disableScheduledBackups": true,
      "disableControlPanelNotification": true,
      "disableBackupOverMeteredConnection": true,
      "disableScheduleWakeup": true,
      "throttleBackupActivity": true,
      "restrictVpnConnections": true,
      "limitBandwidthConsumption": true,
      "bandwidthSpeedLimit": 2,
      "bandwidthSpeedLimitUnit": "MbitPerSec",
      "flrWithoutAdminPrivilegesAllowed": true
    }
  },
  "scheduleSettings": {
    "scheduleType": "NotScheduled",
    "timeZone": null,
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": null,
    "periodicalScheduleSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "05b13f62-0ad4-40fe-9854-7905f7e9b3fa",
  "hosts": [
    "vaw2.hv1.tech.local",
    "172.16.21.161"
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/windows/custom/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Import-Based Discovery Rule for Windows",
        "description": "Returns a resource representation of a Windows discovery rule based on a list of IP addresses and DNS names.",
        "operationId": "GetWindowsCustomDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "26027dc2-3688-4c13-a454-a6068cf5af51",
  "hosts": [
    "r2vawServ2",
    "r2em"
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Import-Based Discovery Rule for Windows",
        "description": "Modifies a Windows discovery rule based on a list of IP addresses and DNS names.",
        "operationId": "PatchWindowsCustomDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "rb2vaw1",
    "path": "/hosts/0",
    "op": "replace"
  },
  {
    "value": "rb2vaw2",
    "path": "/hosts/1",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9a599f7b-abd1-4164-bf8f-3f89f683c40b",
  "hosts": [
    "rb2vaw1",
    "rb2vaw2"
  ],
  "_embedded": {
    "discoveryRule": null,
    "windowsDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsCustomDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/linux": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Discovery Rules for Linux",
        "description": "Returns a collection resource representation of all Linux discovery rules.",
        "operationId": "GetLinuxDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinuxDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "df372570-7189-4bb0-ad89-05588667ec3e",
    "method": "NetworkBased",
    "credentials": [
      {
        "instanceUid": "d46e5358-68bd-4d6a-8b07-bd4d4e2b37ff",
        "username": "root",
        "password": null,
        "priority": 0,
        "description": "",
        "sshPort": 22,
        "elevateAccountPrivileges": false,
        "addAccountToSudoersFile": false,
        "useSuIfsudoFails": false,
        "rootPassword": null,
        "sshPrivateKey": null,
        "passphrase": null,
        "type": "LinuxBased"
      }
    ],
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "df372570-7189-4bb0-ad89-05588667ec3e",
        "name": "Scheduled Linux Network Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "Monthly",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": {
            "time": "11:00",
            "calendarSettings": {
              "monthlyMode": "Day",
              "weekDayNumber": null,
              "dayOfWeek": null,
              "day": 2,
              "months": [
                "Jun",
                "Jul",
                "Dec"
              ]
            }
          },
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "781009bc-5aa5-46fe-8fc6-3d64adc4bcab",
    "method": "Manual",
    "credentials": [
      {
        "instanceUid": "2fc19fa7-ae98-4aa0-88f8-8729c08d63cc",
        "username": "root",
        "password": null,
        "priority": 0,
        "description": "",
        "sshPort": 22,
        "elevateAccountPrivileges": false,
        "addAccountToSudoersFile": false,
        "useSuIfsudoFails": false,
        "rootPassword": null,
        "sshPrivateKey": null,
        "passphrase": null,
        "type": "LinuxBased"
      }
    ],
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "781009bc-5aa5-46fe-8fc6-3d64adc4bcab",
        "name": "Linux Custom Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Success",
        "lastRun": "2021-08-15T08:43:26.1148323+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 2,
        "onlineComputersCount": 2,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "2bdbfe58-9d52-4e3a-8156-45a458714eff",
    "method": "Manual",
    "credentials": [
      {
        "instanceUid": "53d3de56-dfaf-42fc-94a3-a8fce1604e11",
        "username": "root",
        "password": null,
        "priority": 0,
        "description": "",
        "sshPort": 22,
        "elevateAccountPrivileges": false,
        "addAccountToSudoersFile": false,
        "useSuIfsudoFails": false,
        "rootPassword": null,
        "sshPrivateKey": null,
        "passphrase": null,
        "type": "LinuxBased"
      }
    ],
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "2bdbfe58-9d52-4e3a-8156-45a458714eff",
        "name": "Linux Custom Rule 2",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      }
    }
  },
  {
    "instanceUid": "4fb776c5-ce1b-4a33-adc5-518e7e4a0f6a",
    "method": "NetworkBased",
    "credentials": [
      {
        "instanceUid": "31ae13f6-4f48-46ca-a348-9fd6575768e1",
        "username": "root",
        "password": null,
        "priority": 0,
        "description": "",
        "sshPort": 22,
        "elevateAccountPrivileges": false,
        "addAccountToSudoersFile": false,
        "useSuIfsudoFails": false,
        "rootPassword": null,
        "sshPrivateKey": null,
        "passphrase": null,
        "type": "LinuxBased"
      }
    ],
    "deploymentSettings": {
      "isEnabled": false,
      "backupPolicyUid": null,
      "setReadOnlyAccess": true
    },
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "4fb776c5-ce1b-4a33-adc5-518e7e4a0f6a",
        "name": "Linux Network Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Success",
        "lastRun": "2021-08-15T08:53:59.0362816+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 2,
        "onlineComputersCount": 2,
        "offlineComputersCount": 0
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/rules/linux/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Discovery Rule for Linux",
        "description": "Returns a resource representation of a Linux discovery rule with the specified UID.",
        "operationId": "GetLinuxDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1d37aee5-6388-456b-baa4-2adc9cf60f7d",
  "method": "Manual",
  "credentials": [
    {
      "instanceUid": "98cf916c-4124-4190-a8de-8f26cc166da7",
      "username": "root",
      "password": null,
      "priority": 0,
      "description": "",
      "sshPort": 22,
      "elevateAccountPrivileges": false,
      "addAccountToSudoersFile": false,
      "useSuIfsudoFails": false,
      "rootPassword": null,
      "sshPrivateKey": null,
      "passphrase": null,
      "type": "LinuxBased"
    }
  ],
  "deploymentSettings": {
    "isEnabled": false,
    "backupPolicyUid": null,
    "setReadOnlyAccess": true
  },
  "_embedded": {
    "discoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/LinuxDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Discovery Rule for Windows",
        "description": "Modifies a Linux discovery rule with the specified UID.",
        "operationId": "PatchLinuxDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": true,
    "path": "/deploymentsettings/isenabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9542a138-6322-40fe-be53-a8123dc3fbf7",
  "method": "NetworkBased",
  "credentials": [
    {
      "instanceUid": "b1de5d5a-72b2-47d4-9651-7eb00b926076",
      "username": "root",
      "password": null,
      "priority": 0,
      "description": "1",
      "sshPort": 22,
      "elevateAccountPrivileges": true,
      "addAccountToSudoersFile": true,
      "useSuIfsudoFails": true,
      "rootPassword": null,
      "sshPrivateKey": null,
      "passphrase": null,
      "type": "LinuxCertificate"
    }
  ],
  "deploymentSettings": {
    "isEnabled": true,
    "backupPolicyUid": null,
    "setReadOnlyAccess": false
  },
  "_embedded": {
    "discoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/LinuxDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/linux/networkBased": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Network-Based Discovery Rules for Linux",
        "description": "Returns a collection resource representation of all Linux network-based discovery rules.",
        "operationId": "GetLinuxNetworkBasedDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "df372570-7189-4bb0-ad89-05588667ec3e",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.25.48.41",
        "lastIp": "172.25.48.110",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "df372570-7189-4bb0-ad89-05588667ec3e",
        "name": "Scheduled Linux Network Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "Monthly",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": {
            "time": "11:00",
            "calendarSettings": {
              "monthlyMode": "Day",
              "weekDayNumber": null,
              "dayOfWeek": null,
              "day": 2,
              "months": [
                "Jun",
                "Jul",
                "Dec"
              ]
            }
          },
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "linuxDiscoveryRule": null
    }
  },
  {
    "instanceUid": "4fb776c5-ce1b-4a33-adc5-518e7e4a0f6a",
    "networks": [
      {
        "networkName": "Production",
        "firstIp": "172.25.48.41",
        "lastIp": "172.25.48.110",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "4fb776c5-ce1b-4a33-adc5-518e7e4a0f6a",
        "name": "Linux Network Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Success",
        "lastRun": "2021-08-15T08:53:59.0362816+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 2,
        "onlineComputersCount": 2,
        "offlineComputersCount": 0
      },
      "linuxDiscoveryRule": null
    }
  },
  {
    "instanceUid": "3fa3c9ca-5986-40db-9a25-d1dac6aa4971",
    "networks": [
      {
        "networkName": "ntw",
        "firstIp": "111.111.111.100",
        "lastIp": "111.111.111.111",
        "trustOptions": {
          "trustOption": "All",
          "knownHostList": null
        }
      }
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "3fa3c9ca-5986-40db-9a25-d1dac6aa4971",
        "name": "Rb2_SP_Linux Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Canceled",
        "lastRun": "2021-08-15T10:17:59.1131511+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "linuxDiscoveryRule": null
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Create Network-Based Discovery Rule for Linux",
        "description": "Creates a Linux network-based discovery rule.",
        "operationId": "CreateLinuxNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Discovery rule settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRuleInput"
              },
              "example": {
  "name": "Linux Network Rule",
  "masterAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
  "networks": [
    {
      "networkName": "netw",
      "firstIp": "172.25.48.41",
      "lastIp": "172.25.48.60",
      "trustOptions": {
        "trustOption": "KnownList",
        "knownHostList": "srv4"
      }
    }
  ],
  "credentials": [
    {
      "username": "root",
      "password": "Password1",
      "priority": 0,
      "description": "Network-based rule for Linux computers",
      "sshPort": 22,
      "elevateAccountPrivileges": true,
      "addAccountToSudoersFile": true,
      "useSuIfsudoFails": true,
      "rootPassword": "Password1",
      "sshPrivateKey": "-----BEGIN RSA PRIVATE KEY-----\nMIIEogIBAAKCAQEArVMvwKOymfth5E0wq38d7svfmLVsVAHtIJYMlJBTx6Y+R2+3\nDcAqVLZG9neFJU2ivudafbZnu1TykuM0sKRXRix+cpMUGevoY026m6lo0s7m3ft9\nF5oOrr1LefsSadI7MTRhCPrHBKt+G9taMhovnGHq/8JzUflX2k1v7Sjy+zhJzpGW\nmJckhHZ+Jyd28JCdAWNiSEZgoEKGdLBL8/nkEm8Su4SRRKiTxRSbHtof+tUjIdoL\ntmdT9CiYM11eb46GMV8haaDEwpd0pL7iWZfXIo6ZZcKZ60JU70tYmz69JaYfVOLb\nasaI3ng22dzmt89Kk4C1i0ueVMH3WE7MvndpzwIBJQKCAQAODantBlqW3Qfv6pU+\nVmo19NrHMU34+Ty9c/Muo+seBo9tk2+1Ab4+OErxY6MDBkt3QzDZwq52+Qy/zTuf\nnp9K4QNVZd8JBUoxkK5D+PqpTwvMzzOn97wAVImURMokQXprxfoHpaFvFNLfqgBk\n7V3OaM3dYssUfAA0S3fHHv7xxijIfW/F4EKGk7B1+WX1LIoka4OF3fRtktqlv0xV\nIDG1YqugiwEHL2cxVHmviqJOfP496JKzz9TXS6TMWbRThykQjXf8irOfQsAbjmuO\nFFp+FCK8XITKuS9tBinpKpsUZoLiZ3r+uAO3gVWutdsdrJChYP87+Aaj82PWr+tv\nfSNlAoGBAOynYVyFklx597Yg4jdVg6+TEMlQ8Ga4TK6Iba8NzGPt6qRq1UeRninF\ncw7jIVojtqdqzKnnm+d5Ri4tS5rjLJjTwyePpR5HU3mwlDCpaJIS0XUptNOwwqso\n9Y/a92iwzAMA1Z4s3q+ye2tinP0WZb1B7RxMjrBNOuswnv3An7BFAoGBALt+eoI1\nNujkC/JXQVYgkkWtJJgu+d314qSate929cW8w37p/OevwcafOlocCvQPGOa7g6XP\nyCtw6CQtv2jbiZ2RddyvTP8kYg71o4MtND5SGiJ+Q2B2PmDbCcPZ5IZ5PyNru6Wj\nClX/bFVh0lszbpWLPKKwdJwhd+d6i3dJewUDAoGBALMW4eUmz5/tmNzanVpOjSrr\n1VoTvNgcxGhnPj9Itll1xlLpEBp8CP0EH7g9Lf8GRQkSjQr0dftHBK1StcFR+DxN\nOb0SwiTAWtihTYyb4G6KyAWjBWHtjGXZzpZgg+CFytHXHjKC0ghrZFFDtRKNfWyg\nl8JjcuZISENHY4+YsDJdAoGAfq9niGklGeYxleft4D+FbVlQE8y2qrrlPslmLC3I\nqDNvVcCxzPo20k/pKCDJIXH8EYWeI+1CD4OjxWsEyk8lodD8nAe+ZzRCQXWKKDNM\n0Cmi9LYthl27ceAbWtF+u7m1ChhcMaWDhjb2K9pP3MHi72vqsx1H3x2IXiJeO9ez\n/HcCgYEAvbcMG79y8Io4lm+c/emqnIPIL0fyrwo7SJ9qdojN63IV3YtQvct+V/Za\nOnLVizuPAye0Bk2qbc4nSt9Jj+E3PrOrZCyEtdQHwT90WM5fzb5OOk6sIwMJaajn\nY6mMXL0VW0XYI6PhfFPdwKhi2nPP07VzN302VWxTI3HeNT7Hg6A=\n-----END RSA PRIVATE KEY-----\n",
      "passphrase": "",
      "type": "LinuxCertificate"
    }
  ],
  "filter": {
    "exclusionMask": [],
    "ignoreInaccessibleMachine": true,
    "osTypes": [
      "Debian",
      "Ubuntu"
    ],
    "applications": [],
    "customApplication": null,
    "platforms": [
      "MicrosoftHyperVandVmWareVSpere",
      "Physical"
    ]
  },
  "notificationSettings": {
    "isEnabled": true,
    "scheduleType": "Weeks",
    "scheduleTime": "05:00",
    "scheduleDay": "Monday",
    "to": "admin@mycompany.com",
    "subject": "Linux Discovery",
    "notifyOnTheFirstRun": false
  },
  "deploymentSettings": {
    "isEnabled": false,
    "backupPolicyUid": null,
    "setReadOnlyAccess": true
  },
  "scheduleSettings": {
    "scheduleType": "NotScheduled",
    "timeZone": null,
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": null,
    "periodicalScheduleSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "726a17c0-1207-403e-82db-fcd8dd77c852",
  "networks": [
    {
      "networkName": "netw",
      "firstIp": "172.25.48.41",
      "lastIp": "172.25.48.60",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/linux/networkBased/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Network-Based Discovery Rule for Linux",
        "description": "Returns a resource representation of a Linux network-based discovery rule.",
        "operationId": "GetLinuxNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "726a17c0-1207-403e-82db-fcd8dd77c852",
  "networks": [
    {
      "networkName": "netw",
      "firstIp": "172.25.48.41",
      "lastIp": "172.25.48.110",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Network-Based Discovery Rule for Linux",
        "description": "Modifies a Linux network-based discovery rule with the specified UID.",
        "operationId": "PatchLinuxNetworkBasedDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "172.25.48.41",
    "path": "/networks/0/firstIp",
    "op": "replace"
  },
  {
    "value": "172.25.48.60",
    "path": "/networks/0/lastIp",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "726a17c0-1207-403e-82db-fcd8dd77c852",
  "networks": [
    {
      "networkName": "netw",
      "firstIp": "172.25.48.41",
      "lastIp": "172.25.48.60",
      "trustOptions": {
        "trustOption": "All",
        "knownHostList": null
      }
    }
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/LinuxNetworkBasedDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/linux/custom": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Import-Based Discovery Rules for Linux",
        "description": "Returns a collection resource representation of all Linux discovery rules based on lists of IP addresses and DNS names.",
        "operationId": "GetLinuxCustomDiscoveryRules",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LinuxCustomDiscoveryRuleExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "2bdbfe58-9d52-4e3a-8156-45a458714eff",
    "hosts": [
      "rb2val",
      "rb2val2"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "2bdbfe58-9d52-4e3a-8156-45a458714eff",
        "name": "Linux Custom Rule",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Created",
        "lastRun": null,
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "linuxDiscoveryRule": {
        "instanceUid": "2bdbfe58-9d52-4e3a-8156-45a458714eff",
        "method": "Manual",
        "credentials": [
          {
            "instanceUid": "3014d0ce-eaa2-41bf-8aa2-02091112ab9a",
            "username": "root",
            "password": null,
            "priority": 0,
            "description": "",
            "sshPort": 22,
            "elevateAccountPrivileges": false,
            "addAccountToSudoersFile": false,
            "useSuIfsudoFails": false,
            "rootPassword": null,
            "sshPrivateKey": null,
            "passphrase": null,
            "type": "LinuxBased"
          }
        ],
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  },
  {
    "instanceUid": "781009bc-5aa5-46fe-8fc6-3d64adc4bcab",
    "hosts": [
      "rb2val2"
    ],
    "_embedded": {
      "discoveryRule": {
        "instanceUid": "781009bc-5aa5-46fe-8fc6-3d64adc4bcab",
        "name": "Linux Custom Rule 2",
        "masterAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "systemType": "Linux",
        "status": "Success",
        "lastRun": "2021-08-15T08:43:26.1148323+02:00",
        "filter": {
          "exclusionMask": [],
          "ignoreInaccessibleMachine": false,
          "osTypes": null,
          "applications": null,
          "customApplication": null,
          "platforms": null
        },
        "notificationSettings": {
          "isEnabled": false,
          "scheduleType": "Days",
          "scheduleTime": "00:00",
          "scheduleDay": "Sunday",
          "to": null,
          "subject": null,
          "notifyOnTheFirstRun": false
        },
        "scheduleSettings": {
          "scheduleType": "NotScheduled",
          "timeZone": {
            "timeZoneId": "Pacific Standard Time",
            "displayName": "(UTC-08:00) Pacific Time (US & Canada)",
            "utcOffset": -420
          },
          "dailyScheduleSettings": null,
          "monthlyScheduleSettings": null,
          "periodicalScheduleSettings": null
        },
        "totalComputersCount": 1,
        "onlineComputersCount": 1,
        "offlineComputersCount": 0
      },
      "linuxDiscoveryRule": {
        "instanceUid": "781009bc-5aa5-46fe-8fc6-3d64adc4bcab",
        "method": "Manual",
        "credentials": [
          {
            "instanceUid": "7fe72a04-6727-4f17-a916-415d7371423d",
            "username": "root",
            "password": null,
            "priority": 0,
            "description": "",
            "sshPort": 22,
            "elevateAccountPrivileges": false,
            "addAccountToSudoersFile": false,
            "useSuIfsudoFails": false,
            "rootPassword": null,
            "sshPrivateKey": null,
            "passphrase": null,
            "type": "LinuxBased"
          }
        ],
        "deploymentSettings": {
          "isEnabled": false,
          "backupPolicyUid": null,
          "setReadOnlyAccess": true
        },
        "_embedded": {
          "discoveryRule": null
        }
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Create Import-Based Discovery Rule for Linux",
        "description": "Creates a Linux rule based on a list of IP addresses and DNS names.",
        "operationId": "CreateLinuxCustomDiscoveryRule",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Discovery rule configuration data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxCustomDiscoveryRuleInput"
              },
              "example": {
  "name": "Simple Linux Custom Rule",
  "masterAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
  "hosts": [
    "srv2"
  ],
  "credentials": [
    {
      "username": "root",
      "password": "Password1",
      "priority": 0,
      "description": null,
      "sshPort": 22,
      "elevateAccountPrivileges": false,
      "addAccountToSudoersFile": false,
      "useSuIfsudoFails": false,
      "rootPassword": "1",
      "sshPrivateKey": null,
      "passphrase": null,
      "type": "LinuxBased"
    }
  ],
  "filter": null,
  "notificationSettings": null,
  "deploymentSettings": null,
  "scheduleSettings": {
    "scheduleType": "NotScheduled",
    "timeZone": null,
    "dailyScheduleSettings": null,
    "monthlyScheduleSettings": null,
    "periodicalScheduleSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1d37aee5-6388-456b-baa4-2adc9cf60f7d",
  "hosts": [
    "srv2"
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/rules/linux/custom/{ruleUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Import-Based Discovery Rule for Linux",
        "description": "Returns a resource representation of a Linux discovery rule based on a list of IP addresses and DNS names.",
        "operationId": "GetLinuxCustomDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1d37aee5-6388-456b-baa4-2adc9cf60f7d",
  "hosts": [
    "rb2val",
    "rb2val2"
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Discovery"
        ],
        "summary": "Modify Import-Based Discovery Rule for Linux",
        "description": "Modifies a Linux discovery rule based on a list of IP addresses and DNS names.",
        "operationId": "PatchLinuxCustomDiscoveryRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "rb2val",
    "path": "/hosts/0",
    "op": "replace"
  },
  {
    "value": "rb2val2",
    "path": "/hosts/1",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1d37aee5-6388-456b-baa4-2adc9cf60f7d",
  "hosts": [
    "rb2val",
    "rb2val2"
  ],
  "_embedded": {
    "discoveryRule": null,
    "linuxDiscoveryRule": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/LinuxCustomDiscoveryRule"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/computers": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Discovered Computers",
        "description": "Returns a collection resource representation of all discovered computers.",
        "operationId": "GetDiscoveryComputers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DiscoveredComputer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f32ce967-a570-59b9-b747-c41fc3e4a776",
    "ruleUid": null,
    "managementAgentUid": "4f70a0e8-2abb-48b0-ac36-31ea2d2f87b7",
    "discoveredTime": "2021-08-15T09:04:41.1441296+02:00",
    "backupAgentInstallationStatus": "Installed",
    "status": "Online",
    "backupAgentVersion": "4.0.0.1811",
    "backupAgentManagementStatus": "ManagedByConsole",
    "info": {
      "uniqueUid": "f32ce967-a570-59b9-b747-c41fc3e4a776",
      "biosUuid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
      "hostName": "r2vaw2",
      "fqdn": "r2vaw2.tech.local",
      "guestOs": "Microsoft Windows 10 Pro",
      "guestOsType": "Workstation",
      "guestOsVersion": "10.0.19043",
      "guestOsSku": 48,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.25.50.45",
        "172.24.157.122"
      ],
      "macAddresses": [
        "00:0C:29:62:E1:EA",
        "00:50:56:BF:C0:10"
      ],
      "applications": []
    }
  },
  {
    "instanceUid": "b1756892-c4c5-66b3-9f5f-d76eb8e2feb4",
    "ruleUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
    "managementAgentUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
    "discoveredTime": "2021-08-15T08:32:46.413004+02:00",
    "backupAgentInstallationStatus": "Installed",
    "status": "Online",
    "backupAgentVersion": "5.0.0.4301",
    "backupAgentManagementStatus": "ManagedByConsole",
    "info": {
      "uniqueUid": "b3833609-f2f8-073c-552b-605893c3b708",
      "biosUuid": "07773b42-89fb-7227-9c6a-95e6908f25de",
      "hostName": "r2em",
      "fqdn": "r2em.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.153.118"
      ],
      "macAddresses": [
        "00:0C:29:8F:25:DE"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    }
  },
  {
    "instanceUid": "552ae9f6-cd05-ab5a-a240-94180da87f70",
    "ruleUid": null,
    "managementAgentUid": "24ef27ee-3e2f-4029-98cd-76dd71979778",
    "discoveredTime": "2021-08-15T08:03:39+02:00",
    "backupAgentInstallationStatus": "NotInstalled",
    "status": "Online",
    "backupAgentVersion": null,
    "backupAgentManagementStatus": "Unknown",
    "info": {
      "uniqueUid": "552ae9f6-cd05-ab5a-a240-94180da87f70",
      "biosUuid": "4d773b42-fe7e-7395-f994-ba211bda176c",
      "hostName": "r2VBR2",
      "fqdn": "r2vbr2.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.152.57"
      ],
      "macAddresses": [
        "00:0C:29:DA:17:6C"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    }
  },
  {
    "instanceUid": "d02d868e-45cf-35d6-9614-343b8e1458c3",
    "ruleUid": null,
    "managementAgentUid": "9e81f09e-9409-4f0a-b5ff-cb222247fa71",
    "discoveredTime": "2021-08-15T08:14:52+02:00",
    "backupAgentInstallationStatus": "NotInstalled",
    "status": "Online",
    "backupAgentVersion": null,
    "backupAgentManagementStatus": "Unknown",
    "info": {
      "uniqueUid": "d02d868e-45cf-35d6-9614-343b8e1458c3",
      "biosUuid": "a9413b42-8f94-7ee2-2a1b-4eac0884f99e",
      "hostName": "r2VBR3",
      "fqdn": "r2vbr3.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.153.49"
      ],
      "macAddresses": [
        "00:0C:29:84:F9:9E"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/timeZones": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get Time Zones",
        "description": "Returns a collection resource representation of all time zones.",
        "operationId": "GetTimeZones",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/TimeZone"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "timeZoneId": "Dateline Standard Time",
    "displayName": "(UTC-12:00) International Date Line West",
    "utcOffset": -720
  },
  {
    "timeZoneId": "UTC-11",
    "displayName": "(UTC-11:00) Coordinated Universal Time-11",
    "utcOffset": -660
  },
  {
    "timeZoneId": "Aleutian Standard Time",
    "displayName": "(UTC-10:00) Aleutian Islands",
    "utcOffset": -600
  },
  {
    "timeZoneId": "Hawaiian Standard Time",
    "displayName": "(UTC-10:00) Hawaii",
    "utcOffset": -600
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/rules/{ruleUid}/computers": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get All Computers Discovered with Specific Rule",
        "description": "Returns a collection resource representation of all computers discovered with a rule with the specified UID.",
        "operationId": "GetDiscoveryComputersByRule",
        "parameters": [
          {
            "name": "ruleUid",
            "in": "path",
            "description": "Discovery rule UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DiscoveredComputer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "552ae9f6-cd05-ab5a-a240-94180da87f70",
    "ruleUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
    "managementAgentUid": "24ef27ee-3e2f-4029-98cd-76dd71979778",
    "discoveredTime": "2021-08-15T08:03:39+02:00",
    "backupAgentInstallationStatus": "NotInstalled",
    "status": "Online",
    "backupAgentVersion": null,
    "backupAgentManagementStatus": "Unknown",
    "info": {
      "uniqueUid": "552ae9f6-cd05-ab5a-a240-94180da87f70",
      "biosUuid": "4d773b42-fe7e-7395-f994-ba211bda176c",
      "hostName": "r2VBR2",
      "fqdn": "r2vbr2.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.152.57"
      ],
      "macAddresses": [
        "00:0C:29:DA:17:6C"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    }
  },
  {
    "instanceUid": "d02d868e-45cf-35d6-9614-343b8e1458c3",
    "ruleUid": "5279c142-7e89-4250-acc6-990a6211cbd5",
    "managementAgentUid": "9e81f09e-9409-4f0a-b5ff-cb222247fa71",
    "discoveredTime": "2021-08-15T08:14:52+02:00",
    "backupAgentInstallationStatus": "NotInstalled",
    "status": "Online",
    "backupAgentVersion": null,
    "backupAgentManagementStatus": "Unknown",
    "info": {
      "uniqueUid": "d02d868e-45cf-35d6-9614-343b8e1458c3",
      "biosUuid": "a9413b42-8f94-7ee2-2a1b-4eac0884f99e",
      "hostName": "r2VBR3",
      "fqdn": "r2vbr3.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.153.49"
      ],
      "macAddresses": [
        "00:0C:29:84:F9:9E"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/computers/{computerUid}": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Get Discovered Computer",
        "description": "Returns a resource representation of a discovered computer with the specified UID.",
        "operationId": "GetDiscoveryComputer",
        "parameters": [
          {
            "name": "computerUid",
            "in": "path",
            "description": "Computer UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DiscoveredComputer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "29362e71-c85a-609a-b312-542345bb7a33",
  "ruleUid": "fe8ffbf2-b896-469b-968f-7c60bbd7b0df",
  "managementAgentUid": "5ea1ad32-4c06-40f4-a527-8ff2084fce77",
  "discoveredTime": "2021-08-15T08:32:45.8974174+02:00",
  "backupAgentInstallationStatus": "Installed",
  "status": "Online",
  "backupAgentVersion": "4.0.0.1811",
  "backupAgentManagementStatus": "ManagedByConsole",
  "info": {
    "uniqueUid": "4366e664-1ffc-fb5e-df10-b089157739f1",
    "biosUuid": "39713b42-902b-1b9d-ea6e-26f7bf7e4aa7",
    "hostName": "r2vawServ2",
    "fqdn": "r2vawServ2.tech.local",
    "guestOs": "Microsoft Windows Server 2019 Standard",
    "guestOsType": "Server",
    "guestOsVersion": "10.0.17763",
    "guestOsSku": 7,
    "platformType": "vSphere",
    "ipAddresses": [
      "172.24.159.40"
    ],
    "macAddresses": [
      "00:0C:29:7E:4A:A7"
    ],
    "applications": []
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/discovery/computers/{computerUid}/installBackupAgent": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Install Backup Agent on Discovered Computer",
        "description": "Deploys Veeam backup agent and management agent on a discovered computer with the specified UID. Deploys only the missing component if the other one is already installed. Initiates an async action. Async action UID is equal to deployment task UID if installation is initiated.",
        "operationId": "InstallBackupAgentOnDiscoveryComputer",
        "parameters": [
          {
            "name": "computerUid",
            "in": "path",
            "description": "Computer UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Deployment configuration.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeploymentConfiguration"
              },
              "example": {
  "backupPolicyUid": null,
  "allowAutoRebootIfNeeded": true,
  "setReadOnlyAccess": true,
  "installCbtDriver": false,
  "credentials": null,
  "backupAgentSettings": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Deployment task UID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": "00000000-0000-0000-0000-000000000000"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/computers/{computerUid}/installLinuxBackupAgent": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Install Backup Agent on Discovered Linux Computer",
        "description": "Deploy Veeam backup agent and management agent on a discovered Linux computer with the specified UID. Deploys only the missing component if the other one is already installed.\n> Initiates an async action. Async action UID is equal to deployment task UID if installation is initiated.\n",
        "operationId": "InstallLinuxBackupAgentOnDiscoveryComputer",
        "parameters": [
          {
            "name": "computerUid",
            "in": "path",
            "description": "Computer UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxDeploymentConfiguration"
              },
              "example": {
  "backupPolicyUid": null,
  "setReadOnlyAccess": true,
  "credentials": null
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Deployment task UID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "string",
                      "format": "uuid",
                      "nullable": true,
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": "18d0214f-b3d4-40a6-9546-f95555425b66"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/discovery/computers/{computerUid}/reboot": {
      "post": {
        "tags": [
          "Discovery"
        ],
        "summary": "Reboot Discovered Computer",
        "description": "Reboots Veeam backup agent on a discovered computer with the specified UID. Returns positive response when management agent receives the reboot task and not when the task is executed.",
        "operationId": "RebootDiscoveryComputer",
        "parameters": [
          {
            "name": "computerUid",
            "in": "path",
            "description": "Computer UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/unverifiedAgents": {
      "get": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Get All Unverified Management Agents",
        "description": "Returns a collection resource representation of all unverified management agents.",
        "operationId": "GetUnverifiedAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UnverifiedAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "eada2907-7415-4d64-a425-2b0fabf6e745",
    "organizationUid": "988b3138-3968-4743-a245-c0e9cff21332",
    "hostName": "lrsfvaww10",
    "registrationTime": "2021-08-18T12:59:43.1121054+02:00",
    "tag": "",
    "rejectReason": "Failed to set company Alpha to the agent. The management agent is unavailable. Verify the agent state and try again.",
    "type": "Client",
    "status": "Inaccessible",
    "statusMessage": "Failed to set company Alpha to the agent. The management agent is unavailable. Verify the agent state and try again."
  },
  {
    "instanceUid": "b2206500-bdb8-4525-a72a-20893943d045",
    "organizationUid": "79c9b4a5-933c-4dde-88c2-8f0c04890b06",
    "hostName": "psw10-19h2-vm01",
    "registrationTime": "2021-08-18T12:59:34.65518+02:00",
    "tag": "",
    "rejectReason": "Failed to set company Beta to the agent. The management agent is unavailable. Verify the agent state and try again.",
    "type": "Client",
    "status": "Inaccessible",
    "statusMessage": "Failed to set company Beta to the agent. The management agent is unavailable. Verify the agent state and try again."
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/unverifiedAgents/{unverifiedAgentUid}": {
      "get": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Get Unverified Management Agent",
        "description": "Returns a resource representation of an unverified management agent with the specified UID.",
        "operationId": "GetUnverifiedAgent",
        "parameters": [
          {
            "name": "unverifiedAgentUid",
            "in": "path",
            "description": "Unverified management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/UnverifiedAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "eada2907-7415-4d64-a425-2b0fabf6e745",
  "organizationUid": "988b3138-3968-4743-a245-c0e9cff21332",
  "hostName": "lrsfvaww10",
  "registrationTime": "2021-08-18T12:59:43.1121054+02:00",
  "tag": "",
  "rejectReason": "Failed to set company Alpha to the agent. The management agent is unavailable. Verify the agent state and try again.",
  "type": "Client",
  "status": "Inaccessible",
  "statusMessage": "Failed to set company Alpha to the agent. The management agent is unavailable. Verify the agent state and try again."
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/UnverifiedAgent"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/managementAgents": {
      "get": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Get All Management Agents",
        "description": "Returns a collection resource representation of all management agents.",
        "operationId": "GetManagementAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ManagementAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "f9215460-8f81-46f0-b8cd-b0f0a7505a87",
    "locationUid": "be2b7fef-39ac-4c91-aec0-cfabd21cca95",
    "organizationUid": "2804b56b-f390-4cfd-b563-62933741af73",
    "hostName": "rb2vspc",
    "lastHeartbeatTime": "2021-08-16T09:10:36.2553816+02:00",
    "version": "6.0.0.7563",
    "discoveryTime": "2021-08-16T07:16:57+02:00",
    "tag": "My Company",
    "status": "Healthy",
    "type": "CloudConnect",
    "computerInfo": {
      "uniqueUid": "672400dc-106f-af15-8720-1380d82da05a",
      "biosUuid": "fbef3b42-52d3-28c2-f0b1-10fa95a7914a",
      "hostName": "rb2vspc",
      "fqdn": "rb2vspc.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.25.48.100"
      ],
      "macAddresses": [
        "00:0C:29:A7:91:4A",
        "00:00:00:00:00:00:00:E0"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    },
    "connectionStatus": "Online",
    "isRebootRequired": false,
    "connectionAccount": null,
    "versionStatus": "UpToDate",
    "role": "Client"
  },
  {
    "instanceUid": "e71018db-a573-4a75-b338-6406627abedc",
    "locationUid": "7f3c68fc-e731-496d-ac7b-e00a4ea247d9",
    "organizationUid": "4b586542-fb84-420f-a311-c603b6290ca0",
    "hostName": "rb2vaw",
    "lastHeartbeatTime": "2021-08-16T09:10:50.8725693+02:00",
    "version": "6.0.0.7563",
    "discoveryTime": "2021-08-16T08:31:36.4369657+02:00",
    "tag": "DallasCompany",
    "status": "Healthy",
    "type": "Client",
    "computerInfo": {
      "uniqueUid": "f32ce967-a570-59b9-b747-c41fc3e4a776",
      "biosUuid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
      "hostName": "rb2vaw",
      "fqdn": "rb2vaw.tech.local",
      "guestOs": "Microsoft Windows 10 Pro",
      "guestOsType": "Workstation",
      "guestOsVersion": "10.0.19043",
      "guestOsSku": 48,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.25.50.45",
        "172.24.157.122"
      ],
      "macAddresses": [
        "00:0C:29:62:E1:EA",
        "00:50:56:BF:C0:10"
      ],
      "applications": []
    },
    "connectionStatus": "Online",
    "isRebootRequired": false,
    "connectionAccount": "70d4697a-6066-4ae5-85f8-9210509e8c2d",
    "versionStatus": "UpToDate",
    "role": "Master"
  },
  {
    "instanceUid": "46b0ecec-0082-4795-adde-ae7d077b637d",
    "locationUid": "be2b7fef-39ac-4c91-aec0-cfabd21cca95",
    "organizationUid": "2804b56b-f390-4cfd-b563-62933741af73",
    "hostName": "rb2cc2",
    "lastHeartbeatTime": "2021-08-16T09:10:37.1459621+02:00",
    "version": "6.0.0.7563",
    "discoveryTime": "2021-08-16T07:18:52+02:00",
    "tag": "My Company",
    "status": "Healthy",
    "type": "CloudConnect",
    "computerInfo": {
      "uniqueUid": "8b213b7d-a096-5078-c8a1-1e525bc5ada8",
      "biosUuid": "23773b42-3db9-9bde-fadf-809bf0a97ab8",
      "hostName": "rb2cc2",
      "fqdn": "rb2cc2.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Datacenter",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 8,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.150.11"
      ],
      "macAddresses": [
        "00:0C:29:A9:7A:B8"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    },
    "connectionStatus": "Online",
    "isRebootRequired": false,
    "connectionAccount": null,
    "versionStatus": "UpToDate",
    "role": "Client"
  },
  {
    "instanceUid": "44c893d0-2c1c-4ef1-a9d2-614c1615ebd8",
    "locationUid": "be2b7fef-39ac-4c91-aec0-cfabd21cca95",
    "organizationUid": "2804b56b-f390-4cfd-b563-62933741af73",
    "hostName": "rb2cc3",
    "lastHeartbeatTime": "2021-08-16T09:10:36.1928824+02:00",
    "version": "6.0.0.7563",
    "discoveryTime": "2021-08-16T07:20:43+02:00",
    "tag": "My Company",
    "status": "Healthy",
    "type": "CloudConnect",
    "computerInfo": {
      "uniqueUid": "2e94dcbe-1585-5a78-eb84-938a991aea00",
      "biosUuid": "65443b42-9712-e4cc-e777-c3fb7ef176be",
      "hostName": "rb2cc3",
      "fqdn": "rb2cc3.tech.local",
      "guestOs": "Microsoft Windows Server 2016 Standard",
      "guestOsType": "Server",
      "guestOsVersion": "10.0.14393",
      "guestOsSku": 7,
      "platformType": "vSphere",
      "ipAddresses": [
        "172.24.150.178"
      ],
      "macAddresses": [
        "00:0C:29:F1:76:BE"
      ],
      "applications": [
        "MicrosoftSqlServer"
      ]
    },
    "connectionStatus": "Online",
    "isRebootRequired": false,
    "connectionAccount": null,
    "versionStatus": "UpToDate",
    "role": "Client"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/managementAgents/{managementAgentUid}": {
      "get": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Get Management Agent",
        "description": "Returns a resource representation of a management agent with the specified UID.",
        "operationId": "GetManagementAgent",
        "parameters": [
          {
            "name": "managementAgentUid",
            "in": "path",
            "description": "Management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ManagementAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "447e5bb3-c233-4ea9-983e-22117dfbb0f9",
  "locationUid": "757d4143-9f16-4b5f-afa5-79b67b4ec726",
  "organizationUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
  "hostName": "rb2vaw",
  "lastHeartbeatTime": "2021-08-15T10:35:08.1998641+02:00",
  "version": "6.0.0.7562",
  "discoveryTime": "2021-08-15T09:33:04.3219705+02:00",
  "tag": "Alpha",
  "status": "Healthy",
  "type": "Client",
  "computerInfo": {
    "uniqueUid": "11d98047-d93d-4094-30af-072ef81704d2",
    "biosUuid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
    "hostName": "rb2vaw",
    "fqdn": "rb2vaw.tech.local",
    "guestOs": "Microsoft Windows 10 Pro",
    "guestOsType": "Workstation",
    "guestOsVersion": "10.0.18363",
    "guestOsSku": 48,
    "platformType": "vSphere",
    "ipAddresses": [
      "172.24.157.46"
    ],
    "macAddresses": [
      "00:0C:29:FF:63:CB"
    ],
    "applications": []
  },
  "connectionStatus": "Online",
  "isRebootRequired": false,
  "connectionAccount": "435053b3-4d57-4a54-a63c-12b7a0cc9035",
  "versionStatus": "UpToDate",
  "role": "Master"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/ManagementAgent"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Modify Management Agent",
        "description": "Modifies a management agent with the specified UID.",
        "operationId": "PatchManagementAgent",
        "parameters": [
          {
            "name": "managementAgentUid",
            "in": "path",
            "description": "Management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Management agent notes",
    "path": "/tag",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ManagementAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "447e5bb3-c233-4ea9-983e-22117dfbb0f9",
  "locationUid": "757d4143-9f16-4b5f-afa5-79b67b4ec726",
  "organizationUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
  "hostName": "rlab2vawRule",
  "lastHeartbeatTime": "2021-08-15T10:35:08.1998641+02:00",
  "version": "6.0.0.7562",
  "discoveryTime": "2021-08-15T09:33:04.3219705+02:00",
  "tag": "Management agent notes",
  "status": "Healthy",
  "type": "Client",
  "computerInfo": {
    "uniqueUid": "11d98047-d93d-4094-30af-072ef81704d2",
    "biosUuid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
    "hostName": "rb2",
    "fqdn": "r2.tech.local",
    "guestOs": "Microsoft Windows 10 Pro",
    "guestOsType": "Workstation",
    "guestOsVersion": "10.0.18363",
    "guestOsSku": 48,
    "platformType": "vSphere",
    "ipAddresses": [
      "172.24.156.46"
    ],
    "macAddresses": [
      "00:0C:29:FF:63:CB"
    ],
    "applications": []
  },
  "connectionStatus": "Online",
  "isRebootRequired": false,
  "connectionAccount": "435053b3-4d57-4a54-a63c-12b7a0cc9035",
  "versionStatus": "UpToDate",
  "role": "Master"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/ManagementAgent"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/managementAgents/{managementAgentUid}/restart": {
      "post": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Restart Management Agent",
        "description": "Restarts a management agent with the specified UID. Returns a positive response when the management agent receives the restart task and not when the task is executed.",
        "operationId": "RestartManagementAgent",
        "parameters": [
          {
            "name": "managementAgentUid",
            "in": "path",
            "description": "Management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/managementAgents/{managementAgentUid}/reboot": {
      "post": {
        "tags": [
          "Management Agents"
        ],
        "summary": "Reboot System on Managed Computer",
        "description": "Runs system reboot on a computer where management agent with the specified UID is installed. Returns a positive response when the management agent receives the reboot task and not when the task is executed.",
        "operationId": "RebootSystemOnManagementAgent",
        "parameters": [
          {
            "name": "managementAgentUid",
            "in": "path",
            "description": "Management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Backup Servers",
        "description": "Returns a collection resource representation of all Veeam Backup & Replication servers.",
        "operationId": "GetBackupServers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VSPCSRV",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "locationUid": "20ad8d8e-66da-4c64-a189-eaa06419bc94",
    "managementAgentUid": "d8228217-4ea4-4f4d-a139-4ea82ee1633c",
    "version": "11.0.0.837",
    "displayVersion": "11.0.0.837 P20210507",
    "installationUid": "cba822da-e44f-4320-90b9-a626b05258ee",
    "backupServerRoleType": "CloudConnect",
    "status": "Healthy"
  },
  {
    "instanceUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "name": "VBRCC2",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "locationUid": "20ad8d8e-66da-4c64-a189-eaa06419bc94",
    "managementAgentUid": "f248212e-36d4-4af9-8a40-2ebd7f4f717c",
    "version": "11.0.0.837",
    "displayVersion": "11.0.0.837 P20210507",
    "installationUid": "9a958eec-afee-4976-9194-a7b047377fab",
    "backupServerRoleType": "CloudConnect",
    "status": "Healthy"
  },
  {
    "instanceUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "name": "VBRCC3",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "locationUid": "20ad8d8e-66da-4c64-a189-eaa06419bc94",
    "managementAgentUid": "394017c2-87ad-4981-9e69-7fbbbe23b0fb",
    "version": "10.0.1.4908",
    "displayVersion": "10.0.1.4908",
    "installationUid": "466a7235-f2ce-433d-9d5d-e7ab053236d5",
    "backupServerRoleType": "CloudConnect",
    "status": "Healthy"
  },
  {
    "instanceUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "name": "VBR2",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "managementAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
    "version": "11.0.0.837",
    "displayVersion": "11.0.0.837 P20210507",
    "installationUid": "81c0b20d-c7d1-4783-966d-38e7e8f72102",
    "backupServerRoleType": "Client",
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get Backup Server",
        "description": "Returns a resource representation of a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
  "name": "BCKP2",
  "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
  "locationUid": "91b26c62-95da-49b7-9b56-fa805b1fc4ec",
  "managementAgentUid": "9e81f09e-9409-4f0a-b5ff-cb222247fa71",
  "version": "11.0.0.825",
  "displayVersion": "11.0.0.825",
  "installationUid": "cfab393f-dcbb-44a8-8c81-a453ef86f58a",
  "backupServerRoleType": "Client",
  "status": "Healthy"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/collect": {
      "post": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Force Data Collection from Backup Server",
        "description": "Forces data collection from a Veeam Backup & Replication server with the specified UID. Returns a positive response when the collection task is added to the internal queue and not when the task is executed.",
        "operationId": "ForceCollectBackupServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/repositories": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Backup Repositories",
        "description": "Returns a collection resource representation of all backup repositories.",
        "operationId": "GetBackupRepositories",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupRepository"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a509568f-1427-4f44-a548-e2028cf776b5",
    "name": "Repo1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 42946523136,
    "isCapacityAvailable": true,
    "freeSpace": 39081545728,
    "isFreeSpaceAvailable": true,
    "usedSpace": 3864977408,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "E:\\Backups",
    "hostName": "reposrv2",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  },
  {
    "instanceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "name": "Repo2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 42946523136,
    "isCapacityAvailable": true,
    "freeSpace": 42847911936,
    "isFreeSpaceAvailable": true,
    "usedSpace": 98611200,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "E:\\Backup",
    "hostName": "reposrv2",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  },
  {
    "instanceUid": "aa5ad576-b38c-43bf-8428-d5e8cd9197a2",
    "name": "Repo3",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 106847793152,
    "isCapacityAvailable": true,
    "freeSpace": 56013996032,
    "isFreeSpaceAvailable": true,
    "usedSpace": 50833797120,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "C:\\Backup",
    "hostName": "ccrepo1",
    "hostUid": "3305f914-558e-49ca-a803-2980f6772131",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  },
  {
    "instanceUid": "a7a18e9e-e784-49f8-bcbc-0bc4d99cad68",
    "name": "Repo4",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 85372956672,
    "isCapacityAvailable": true,
    "freeSpace": 48220340224,
    "isFreeSpaceAvailable": true,
    "usedSpace": 37152616448,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "C:\\Backup",
    "hostName": "ccrepo2",
    "hostUid": "60f5cf76-fa29-4487-9b96-a5d87fe5a1f1",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/repositories": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Backup Repositories Connected to Backup Server",
        "description": "Returns a collection resource representation of all backup repositories connected to a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupRepositoriesByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupRepository"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a509568f-1427-4f44-a548-e2028cf776b5",
    "name": "Repo1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 42946523136,
    "isCapacityAvailable": true,
    "freeSpace": 39081545728,
    "isFreeSpaceAvailable": true,
    "usedSpace": 3864977408,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "E:\\Backups",
    "hostName": "reposrv2",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  },
  {
    "instanceUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "name": "Repo2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "parentRepositoryUid": null,
    "perVMBackupFiles": false,
    "capacity": 42946523136,
    "isCapacityAvailable": true,
    "freeSpace": 42847911936,
    "isFreeSpaceAvailable": true,
    "usedSpace": 98611200,
    "isUsedSpaceAvailable": true,
    "type": "Windows",
    "cloudRepositoryUid": null,
    "path": "E:\\Backup",
    "hostName": "reposrv2",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/repositories/{repositoryUid}": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get Backup Repository",
        "description": "Returns a resource representation of a backup repository with the specified UID.",
        "operationId": "GetBackupRepository",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "repositoryUid",
            "in": "path",
            "description": "Backup repository.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupRepository"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a509568f-1427-4f44-a548-e2028cf776b5",
  "name": "Repo1",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "parentRepositoryUid": null,
  "perVMBackupFiles": false,
  "capacity": 42946523136,
  "isCapacityAvailable": true,
  "freeSpace": 39081545728,
  "isFreeSpaceAvailable": true,
  "usedSpace": 3864977408,
  "isUsedSpaceAvailable": true,
  "type": "Windows",
  "cloudRepositoryUid": null,
  "path": "E:\\Backups",
  "hostName": "reposrv2",
  "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
  "isOutOfDate": false,
  "status": "Healthy",
  "isCloud": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/proxies": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Backup Proxies",
        "description": "Returns a collection resource representation of all backup proxies.",
        "operationId": "GetBackupProxies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupProxy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "50cbf622-129e-482a-9197-d67e5bb1fb1f",
    "name": "Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "status": "Healthy",
    "type": "File"
  },
  {
    "instanceUid": "18b661c1-d9dc-4233-90a0-7e7b10dc2d09",
    "name": "VMware Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "status": "Healthy",
    "type": "vSphere"
  },
  {
    "instanceUid": "50cbf622-129e-482a-9197-d67e5bb1fb1f",
    "name": "Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "R2CC",
    "status": "Healthy",
    "type": "File"
  },
  {
    "instanceUid": "18b661c1-d9dc-4233-90a0-7e7b10dc2d09",
    "name": "VMware Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "R2CC",
    "status": "Healthy",
    "type": "vSphere"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/proxies": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Backup Proxies Connected to Backup Server",
        "description": "Returns a collection resource representation of all backup proxies connected to a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupProxiesByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupProxy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "50cbf622-129e-482a-9197-d67e5bb1fb1f",
    "name": "Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "status": "Healthy",
    "type": "File"
  },
  {
    "instanceUid": "18b661c1-d9dc-4233-90a0-7e7b10dc2d09",
    "name": "VMware Backup Proxy",
    "version": "11.0.0.839",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isOutOfDate": false,
    "isDisabled": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "status": "Healthy",
    "type": "vSphere"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/proxies/{proxyUid}": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get Backup Proxy",
        "description": "Returns a resource representation of a backup proxy with the specified UID.",
        "operationId": "GetBackupProxy",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "proxyUid",
            "in": "path",
            "description": "Backup proxy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupProxy"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "50cbf622-129e-482a-9197-d67e5bb1fb1f",
  "name": "Backup Proxy",
  "version": "11.0.0.839",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "isOutOfDate": false,
  "isDisabled": false,
  "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
  "hostName": "VSPCSRV",
  "status": "Healthy",
  "type": "File"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/wanaccelerators": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All WAN Accelerators",
        "description": "Returns a collection resource representation of all WAN accelerators.",
        "operationId": "GetBackupWanAccelerators",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupWanAccelerator"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
    "name": "VSPCSRV",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "version": "11.0.0.837",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  },
  {
    "instanceUid": "a6f7de42-a691-409a-8b6a-21404d226dc6",
    "name": "VBR2",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "version": "11.0.0.837",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VBR2",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": false
  },
  {
    "instanceUid": "c1aa906a-a81c-413c-8dd9-134c4050b38a",
    "name": "VBR3",
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "version": "11.0.0.837",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VBR3",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": false
  },
  {
    "instanceUid": "a55d13e4-ed96-4b2e-b2fd-e44bf792f113",
    "name": "VBR4",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "version": "10.0.1.4908",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VBR4",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/wanaccelerators": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All WAN Accelerators Connected to Backup Server",
        "description": "Returns a collection resource representation of all WAN accelerators connected to a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupWanAcceleratorsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupWanAccelerator"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
    "name": "VSPCSRV",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "version": "11.0.0.837",
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "hostName": "VSPCSRV",
    "isOutOfDate": false,
    "status": "Healthy",
    "isCloud": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/wanaccelerators/{wanAcceleratorUid}": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get WAN Accelerator",
        "description": "Returns a resource representation of a WAN accelerator with the specified UID.",
        "operationId": "GetBackupWanAccelerator",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "wanAcceleratorUid",
            "in": "path",
            "description": "WAN accelerator UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupWanAccelerator"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
  "name": "VSPCSRV",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "version": "11.0.0.837",
  "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
  "hostName": "VSPCSRV",
  "isOutOfDate": false,
  "status": "Healthy",
  "isCloud": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/servers": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Hosts Connected to Backup Server",
        "description": "Returns a collection resource representation of all servers connected to a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerHostsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerHost"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "d6ef4b4c-387f-4969-b408-957ab65f2ee5",
    "name": "esx01",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "type": "ESXi"
  },
  {
    "instanceUid": "b54ebc27-a0be-4d20-b28e-9aa4fe1ffe9f",
    "name": "vcenter01",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "type": "VirtualCenter"
  },
  {
    "instanceUid": "b4c92811-3423-49d5-a4ac-4c3dba1b7fc0",
    "name": "esx02",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "type": "ESXi"
  },
  {
    "instanceUid": "9e68e460-e5a7-47d0-af1c-207d97835b6d",
    "name": "esx03",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "type": "ESXi"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/servers": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Hosts Connected to Backup Servers",
        "description": "Returns a collection resource representation of all servers connected to all Veeam Backup & Replication servers.",
        "operationId": "GetBackupServerHosts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerHost"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "d6ef4b4c-387f-4969-b408-957ab65f2ee5",
    "name": "esx01",
    "backupServerUid": "b7a1fc34-a11d-4b19-99f1-1a84e4ad282c",
    "type": "ESXi"
  },
  {
    "instanceUid": "b54ebc27-a0be-4d20-b28e-9aa4fe1ffe9f",
    "name": "vcenter01",
    "backupServerUid": "8593e868-2106-4e7f-8b23-94c37bb32824",
    "type": "VirtualCenter"
  },
  {
    "instanceUid": "b4c92811-3423-49d5-a4ac-4c3dba1b7fc0",
    "name": "esx02",
    "backupServerUid": "4940e2ff-501b-4f50-8337-017b517a1ba0",
    "type": "ESXi"
  },
  {
    "instanceUid": "9e68e460-e5a7-47d0-af1c-207d97835b6d",
    "name": "esx03",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "type": "ESXi"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/servers/{serverUid}": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get Host Connected to Backup Server",
        "description": "Returns a resource representation of a server with the specified UID connected to a Veeam Backup & Replication server.",
        "operationId": "GetBackupServerHost",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "serverUid",
            "in": "path",
            "description": "Server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerHost"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "d6ef4b4c-387f-4969-b408-957ab65f2ee5",
  "name": "esx01",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "type": "ESXi"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Jobs",
        "description": "Returns a collection resource representation of all jobs on all Veeam Backup & Replication servers.",
        "operationId": "GetBackupServerJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "name": "srv3iBackupCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "Failed",
    "type": "ImmediateBackupCopy",
    "lastRun": "2021-08-15T06:22:48.987+02:00",
    "lastEndTime": "2021-08-15T06:23:14.75+02:00",
    "lastDuration": 25,
    "processingRate": 0.0,
    "avgDuration": 25,
    "transferredData": 0,
    "bottleneck": "None",
    "isEnabled": false,
    "scheduleType": "Continuously",
    "failureMessage": "Processing srv3 Error: Unknown block size: Automatic\r\n",
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": true
  },
  {
    "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
    "name": "srv3VMCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "None",
    "type": "CopyVm",
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "processingRate": null,
    "avgDuration": 0,
    "transferredData": null,
    "bottleneck": "None",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "failureMessage": null,
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": false
  },
  {
    "instanceUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
    "name": "srv3BackupCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "Warning",
    "type": "BackupCopy",
    "lastRun": "2021-08-15T06:22:19.24+02:00",
    "lastEndTime": "2021-08-15T06:22:30.693+02:00",
    "lastDuration": 11,
    "processingRate": 0.0,
    "avgDuration": 11,
    "transferredData": 0,
    "bottleneck": "None",
    "isEnabled": false,
    "scheduleType": "Continuously",
    "failureMessage": "srv3:\r\nTask has been cancelled.\r\n",
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": true
  },
  {
    "instanceUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "name": "srv5BackupToTapeJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "None",
    "type": "BackupToTape",
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "processingRate": null,
    "avgDuration": 0,
    "transferredData": null,
    "bottleneck": "None",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "failureMessage": null,
    "targetType": "Local",
    "destination": "Media Pool 1",
    "retentionLimit": 7,
    "retentionLimitType": "Days",
    "isGfsOptionEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerJobByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "name": "srv3iBackupCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "Failed",
    "type": "ImmediateBackupCopy",
    "lastRun": "2021-08-15T06:22:48.987+02:00",
    "lastEndTime": "2021-08-15T06:23:14.75+02:00",
    "lastDuration": 25,
    "processingRate": 0.0,
    "avgDuration": 25,
    "transferredData": 0,
    "bottleneck": "None",
    "isEnabled": false,
    "scheduleType": "Continuously",
    "failureMessage": "Processing srv3 Error: Unknown block size: Automatic\r\n",
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": true
  },
  {
    "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
    "name": "srv3VMCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "None",
    "type": "CopyVm",
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "processingRate": null,
    "avgDuration": 0,
    "transferredData": null,
    "bottleneck": "None",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "failureMessage": null,
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": false
  },
  {
    "instanceUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
    "name": "srv3BackupCopyJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "Warning",
    "type": "BackupCopy",
    "lastRun": "2021-08-15T06:22:19.24+02:00",
    "lastEndTime": "2021-08-15T06:22:30.693+02:00",
    "lastDuration": 11,
    "processingRate": 0.0,
    "avgDuration": 11,
    "transferredData": 0,
    "bottleneck": "None",
    "isEnabled": false,
    "scheduleType": "Continuously",
    "failureMessage": "srv3:\r\nTask has been cancelled.\r\n",
    "targetType": "Local",
    "destination": "AlphaRepo",
    "retentionLimit": 7,
    "retentionLimitType": "RestorePoints",
    "isGfsOptionEnabled": true
  },
  {
    "instanceUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "name": "srv5BackupToTapeJob",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "status": "None",
    "type": "BackupToTape",
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "processingRate": null,
    "avgDuration": 0,
    "transferredData": null,
    "bottleneck": "None",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "failureMessage": null,
    "targetType": "Local",
    "destination": "Media Pool 1",
    "retentionLimit": 7,
    "retentionLimitType": "Days",
    "isGfsOptionEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get Job",
        "description": "Returns a resource representation of a job with the specified UID.",
        "operationId": "GetBackupServerJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
  "name": "srv3BackupJob",
  "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
  "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "status": "Disabling",
  "type": "BackupFileCopy",
  "lastRun": "2021-08-15T05:51:56.327+02:00",
  "lastEndTime": "2021-08-15T05:52:37.993+02:00",
  "lastDuration": 41,
  "processingRate": 55.0,
  "avgDuration": 41,
  "transferredData": 2084,
  "bottleneck": "Target",
  "isEnabled": true,
  "scheduleType": "Continuously",
  "failureMessage": null,
  "targetType": "Local",
  "destination": "Default Backup Repository",
  "retentionLimit": 7,
  "retentionLimitType": "Days",
  "isGfsOptionEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Modify Job",
        "description": "Modifies a job with the specified UID. Returns a positive response when the task is added to the internal queue and not when the task is executed.",
        "operationId": "PatchBackupServerJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": true,
    "path": "/isEnabled",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
  "name": "srv3iBackupCopyJob",
  "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
  "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
  "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
  "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
  "status": "Enabling",
  "type": "ImmediateBackupCopy",
  "lastRun": "2021-08-15T05:44:50.35+02:00",
  "lastEndTime": "2021-08-15T05:45:09.93+02:00",
  "lastDuration": 19,
  "processingRate": 0.0,
  "avgDuration": 19,
  "transferredData": 0,
  "bottleneck": "None",
  "isEnabled": false,
  "scheduleType": "Continuously",
  "failureMessage": "Processing srv3 Error: Unknown block size: Automatic\r\n",
  "targetType": "Local",
  "destination": "Repo4",
  "retentionLimit": 7,
  "retentionLimitType": "RestorePoints",
  "isGfsOptionEnabled": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupServerJob"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/{jobUid}/start": {
      "post": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Start Job",
        "description": "Starts a job with the specified UID. Returns a positive response when the task is added to the internal queue and not when the task is executed.",
        "operationId": "StartBackupServerJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/{jobUid}/stop": {
      "post": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Stop Job",
        "description": "Stops a job with the specified UID. Returns a positive response when the task is added to the internal queue and not when the task is executed.",
        "operationId": "StopBackupServerJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/{jobUid}/retry": {
      "post": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Retry Job",
        "description": "Retries a job with the specified UID. Returns a positive response when the retry task is added to the internal queue and not when the task is executed.",
        "operationId": "RetryBackupServerJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupVmJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Backup Jobs",
        "description": "Returns a collection resource representation of all backup jobs that protect VMs.",
        "operationId": "GetBackupServerBackupVmJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupVmJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupVmJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 0,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
        "name": "wsrv4job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "Daily",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 1,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "784a3a14-b744-4322-a782-10f41d8bd689",
        "name": "lsrv2job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupVm",
        "lastRun": "2021-08-15T05:53:21.503+02:00",
        "lastEndTime": "2021-08-15T05:54:50.007+02:00",
        "lastDuration": 88,
        "processingRate": 0.0,
        "avgDuration": 88,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "73c78780-70c9-47f9-afd6-dc449bac25ae",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 0,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "73c78780-70c9-47f9-afd6-dc449bac25ae",
        "name": "wsrv5job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "Daily",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "67b1005a-475b-4297-90bc-06e0519399b4",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 0,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "67b1005a-475b-4297-90bc-06e0519399b4",
        "name": "wsrv6job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "Daily",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupVmJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get VM Backup Job",
        "description": "Returns a resource representation of a backup job with the specified UID that protects VMs.",
        "operationId": "GetBackupServerBackupVmJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerBackupVmJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
  "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "protectedVmCount": 0,
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupVmJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Backup Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all VM backup jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupVmJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupVmJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupVmJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 0,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
        "name": "wsrv4job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "Daily",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "protectedVmCount": 1,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "784a3a14-b744-4322-a782-10f41d8bd689",
        "name": "lsrv2job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupVm",
        "lastRun": "2021-08-15T05:53:21.503+02:00",
        "lastEndTime": "2021-08-15T05:54:50.007+02:00",
        "lastDuration": 88,
        "processingRate": 0.0,
        "avgDuration": 88,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupVmJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Backup Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of VM backup jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupVmJobsObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "6147dc59-315a-4e37-ba25-6c725816b284",
    "instanceUid": "ee777833-396d-4173-8174-0d69aad4aa54",
    "name": "srv3",
    "platform": "vSphere",
    "hierarchyRef": "vm-73",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Warning",
      "totalBackedSize": 1048576,
      "sourceSize": 34359738368,
      "duration": 142,
      "messages": [
        "Changed block tracking cannot be enabled: one or more snapshots present"
      ]
    }
  },
  {
    "jobUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "instanceUid": "13f8fbac-1d79-40ea-a168-aff7eb825b9a",
    "name": "lsrv4",
    "platform": "vSphere",
    "hierarchyRef": "vm-88",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 0,
      "sourceSize": 0,
      "duration": 62,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupVmJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Backup Jobs",
        "description": "Returns a collection resource representation of all VM backup job objects.",
        "operationId": "GetBackupServerBackupVmJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "6147dc59-315a-4e37-ba25-6c725816b284",
    "instanceUid": "ee777833-396d-4173-8174-0d69aad4aa54",
    "name": "srv3",
    "platform": "vSphere",
    "hierarchyRef": "vm-73",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Warning",
      "totalBackedSize": 1048576,
      "sourceSize": 34359738368,
      "duration": 142,
      "messages": [
        "Changed block tracking cannot be enabled: one or more snapshots present"
      ]
    }
  },
  {
    "jobUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "instanceUid": "13f8fbac-1d79-40ea-a168-aff7eb825b9a",
    "name": "lsrv4",
    "platform": "vSphere",
    "hierarchyRef": "vm-88",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 0,
      "sourceSize": 0,
      "duration": 62,
      "messages": []
    }
  },
  {
    "jobUid": "4ca2493f-5225-4666-bbb5-da1938a0ddb9",
    "instanceUid": "dc6a691f-7943-448c-8fe5-4236b454b7ad",
    "name": "srv3",
    "platform": "vSphere",
    "hierarchyRef": "vm-73",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 32,
      "sourceSize": 34359738368,
      "duration": 112,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupVmJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Backup Job",
        "description": "Returns a collection resource representation of all objects of a VM backup job with the specified UID.",
        "operationId": "GetBackupServerBackupVmJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "da8dc2d0-fce7-491c-a2e0-01527780efde",
    "instanceUid": "ebf78d47-03ad-4014-bc59-c8c72a54a6ad",
    "name": "srv3",
    "platform": "vSphere",
    "hierarchyRef": "vm-79",
    "isExcluded": false,
    "lastSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/replicationVmJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Replication Jobs",
        "description": "Returns a resource representation of all replication jobs that protects VMs.",
        "operationId": "GetBackupServerReplicationVmJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerReplicationVmJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerReplicationVmJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
    "protectedVmCount": 1,
    "isCloudJob": false,
    "cloudHostUid": null,
    "targetHostUid": "e93927fd-f500-45c9-b4ca-c5e206a5cfa7",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
        "name": "srv3ReplicationJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T06:00:11.047+02:00",
        "lastEndTime": "2021-08-15T06:21:24.88+02:00",
        "lastDuration": 1273,
        "processingRate": 23739650.0,
        "avgDuration": 1273,
        "transferredData": 24198453428,
        "bottleneck": "Target",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "41121962-0fab-400e-b959-54e76cdaa178",
    "protectedVmCount": 1,
    "isCloudJob": true,
    "cloudHostUid": "94817a9b-730d-4318-872f-d953c238388d",
    "targetHostUid": "d8c01ced-fc5f-41de-a49c-636365472c78",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "41121962-0fab-400e-b959-54e76cdaa178",
        "name": "srv5CloudReplicaJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Warning",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T06:26:29.403+02:00",
        "lastEndTime": "2021-08-15T06:46:03.543+02:00",
        "lastDuration": 1174,
        "processingRate": 31223100.0,
        "avgDuration": 1174,
        "transferredData": 16115584902,
        "bottleneck": "Target",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": "srv5:\r\nOne or more source networks were possibly mapped onto the same cloud network. Simultaneous partial failovers of VMs residing on those networks may result in issues.\r\n",
        "targetType": "Cloud",
        "destination": "Hardware plan 1",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
    "protectedVmCount": 1,
    "isCloudJob": false,
    "cloudHostUid": null,
    "targetHostUid": "712f2b5b-5d2f-47f0-8e2a-cb20678d5d7c",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
        "name": "srv8ReplicationJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T05:39:31.2+02:00",
        "lastEndTime": "2021-08-15T05:44:21.08+02:00",
        "lastDuration": 289,
        "processingRate": 118891824.0,
        "avgDuration": 289,
        "transferredData": 1024,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "BetaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "94af754d-48a5-4070-a9bb-ef8f20ceb213",
    "protectedVmCount": 1,
    "isCloudJob": true,
    "cloudHostUid": "a78c949f-15ec-46b9-a469-215f441562f7",
    "targetHostUid": "55db1a21-871e-4996-bc89-2b37bc9b0caa",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "94af754d-48a5-4070-a9bb-ef8f20ceb213",
        "name": "srv9CloudReplicaJob",
        "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
        "locationUid": "91b26c62-95da-49b7-9b56-fa805b1fc4ec",
        "siteUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
        "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
        "status": "Warning",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T08:16:49.7+02:00",
        "lastEndTime": "2021-08-15T08:23:30.557+02:00",
        "lastDuration": 400,
        "processingRate": 85899344.0,
        "avgDuration": 400,
        "transferredData": 1024,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": "srv9:\r\nOne or more source networks were possibly mapped onto the same cloud network. Simultaneous partial failovers of VMs residing on those networks may result in issues.\r\nUnable to perform failover: replica exceeds the allowed memory limit.\r\n",
        "targetType": "Cloud",
        "destination": "Hardware plan 2",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/replicationVmJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get VM Replication Job",
        "description": "Returns a resource representation of a replication job with the specified UID that protects VMs.",
        "operationId": "GetBackupServerReplicationVmJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerReplicationVmJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
  "protectedVmCount": 1,
  "isCloudJob": false,
  "cloudHostUid": null,
  "targetHostUid": "e93927fd-f500-45c9-b4ca-c5e206a5cfa7",
  "sourceWanAcceleratorUid": null,
  "targetWanAcceleratorUid": null,
  "throughWanAccelerators": false,
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/replicationVmJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Replication Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all VM replication jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerReplicationVmJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerReplicationVmJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerReplicationVmJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
    "protectedVmCount": 1,
    "isCloudJob": false,
    "cloudHostUid": null,
    "targetHostUid": "712f2b5b-5d2f-47f0-8e2a-cb20678d5d7c",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
        "name": "autoReplicationJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T05:39:31.2+02:00",
        "lastEndTime": "2021-08-15T05:44:21.08+02:00",
        "lastDuration": 289,
        "processingRate": 118891824.0,
        "avgDuration": 289,
        "transferredData": 1024,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "pdcqa159.amust.local",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
    "protectedVmCount": 1,
    "isCloudJob": false,
    "cloudHostUid": null,
    "targetHostUid": "e93927fd-f500-45c9-b4ca-c5e206a5cfa7",
    "sourceWanAcceleratorUid": null,
    "targetWanAcceleratorUid": null,
    "throughWanAccelerators": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
        "name": "srv3ReplicationJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "ReplicationVM",
        "lastRun": "2021-08-15T06:00:11.047+02:00",
        "lastEndTime": "2021-08-15T06:21:24.88+02:00",
        "lastDuration": 1273,
        "processingRate": 23739650.0,
        "avgDuration": 1273,
        "transferredData": 24198453428,
        "bottleneck": "Target",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/replicationVmJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Replication Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of VM replication jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerReplicationVmJobsObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
    "instanceUid": "2a60661d-00aa-418b-8b6e-cc3870f6f510",
    "name": "srv6",
    "platform": "vSphere",
    "hierarchyRef": "vm-73",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 1024,
      "sourceSize": 34359738368,
      "duration": 245,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/replicationVmJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Replication Jobs",
        "description": "Returns a collection resource representation of all VM replication job objects.",
        "operationId": "GetBackupServerReplicationVmJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "94af754d-48a5-4070-a9bb-ef8f20ceb213",
    "instanceUid": "50216d9b-128e-4ad3-b81e-9d5f2dae816c",
    "name": "srv3",
    "platform": "vSphere",
    "hierarchyRef": "vm-248",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Warning",
      "totalBackedSize": 1024,
      "sourceSize": 34359738368,
      "duration": 376,
      "messages": [
        "One or more source networks were possibly mapped onto the same cloud network. Simultaneous partial failovers of VMs residing on those networks may result in issues",
        "Unable to perform failover: replica exceeds the allowed memory limit"
      ]
    }
  },
  {
    "jobUid": "41121962-0fab-400e-b959-54e76cdaa178",
    "instanceUid": "0631c1c7-12eb-46ef-b3c4-cede09e5bb2b",
    "name": "srv5",
    "platform": "vSphere",
    "hierarchyRef": "vm-79",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Warning",
      "totalBackedSize": 16115584902,
      "sourceSize": 32212254720,
      "duration": 1150,
      "messages": [
        "One or more source networks were possibly mapped onto the same cloud network. Simultaneous partial failovers of VMs residing on those networks may result in issues"
      ]
    }
  },
  {
    "jobUid": "70267ec3-c3bf-4681-9c0d-80c6b2dd6ea6",
    "instanceUid": "5343975d-db3d-4bf6-ba97-787b357f3cf9",
    "name": "srv6",
    "platform": "vSphere",
    "hierarchyRef": "vm-73",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Warning",
      "totalBackedSize": 2097152,
      "sourceSize": 34359738368,
      "duration": 260,
      "messages": [
        "Changed block tracking cannot be enabled: one or more snapshots present"
      ]
    }
  },
  {
    "jobUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
    "instanceUid": "2e5bb6ae-5ed7-42a4-b197-a14878339cbd",
    "name": "srv9",
    "platform": "vSphere",
    "hierarchyRef": "vm-93",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 24198453428,
      "sourceSize": 32212254720,
      "duration": 1236,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/replicationVmJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of VM Replication Job",
        "description": "Returns a collection resource representation of all objects of a VM replication job with the specified UID.",
        "operationId": "GetBackupServerReplicationVmJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
    "instanceUid": "2e5bb6ae-5ed7-42a4-b197-a14878339cbd",
    "name": "srv01",
    "platform": "vSphere",
    "hierarchyRef": "vm-79",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 24198453428,
      "sourceSize": 32212254720,
      "duration": 1236,
      "messages": []
    }
  },
  {
    "jobUid": "57201d98-8b97-4aa1-8313-9f596aa3929e",
    "instanceUid": "80766213-b954-4ed8-8ef1-599d4e16be8a",
    "name": "srv05",
    "platform": "vSphere",
    "hierarchyRef": "vm-89",
    "isExcluded": false,
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 26786,
      "sourceSize": 128849018880,
      "duration": 180,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup Copy Jobs",
        "description": "Returns a collection resource representation of all backup copy jobs.",
        "operationId": "GetBackupServerBackupCopyJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 0,
    "rpoOptionsUnit": "Minutes",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
        "name": "srv03job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupCopy",
        "lastRun": "2021-08-15T06:22:19.24+02:00",
        "lastEndTime": "2021-08-15T06:22:30.693+02:00",
        "lastDuration": 11,
        "processingRate": 0.0,
        "avgDuration": 11,
        "transferredData": 7456,
        "bottleneck": "None",
        "isEnabled": false,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "bckprepo3",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  },
  {
    "instanceUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 0,
    "rpoOptionsUnit": "Minutes",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
        "name": "autoBackupCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupCopy",
        "lastRun": "2021-08-15T09:45:03.413+02:00",
        "lastEndTime": "2021-08-15T09:46:17.493+02:00",
        "lastDuration": 74,
        "processingRate": 0.0,
        "avgDuration": 0,
        "transferredData": 4128,
        "bottleneck": "Proxy",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "strg4",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupCopyJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get Backup Copy Job",
        "description": "Returns a resource representation of a backup copy job with the specified UID.",
        "operationId": "GetBackupServerBackupCopyJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerBackupCopyJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
  "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
  "targetWanAcceleratorUid": null,
  "sourceWanAcceleratorUid": null,
  "weeklyRestorePointsToKeep": 1,
  "monthlyRestorePointsToKeep": 1,
  "yearlyRestorePointsToKeep": 1,
  "retentionPolicyType": "GFS",
  "isRpoOptionsEnabled": false,
  "rpoOptionsValue": 0,
  "rpoOptionsUnit": "Minutes",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupCopyJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 0,
    "rpoOptionsUnit": "Minutes",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
        "name": "srv2job",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupCopy",
        "lastRun": "2021-08-15T09:45:03.413+02:00",
        "lastEndTime": "2021-08-15T09:46:17.493+02:00",
        "lastDuration": 74,
        "processingRate": 0.0,
        "avgDuration": 0,
        "transferredData": 4128,
        "bottleneck": "Proxy",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "strg2",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  },
  {
    "instanceUid": "d7805002-665c-4c1d-9d0c-0f0262b91db2",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 0,
    "rpoOptionsUnit": "Minutes",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "d7805002-665c-4c1d-9d0c-0f0262b91db2",
        "name": "srv3job",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupCopy",
        "lastRun": "2021-08-15T09:45:03.413+02:00",
        "lastEndTime": "2021-08-15T09:46:17.493+02:00",
        "lastDuration": 89,
        "processingRate": 0.0,
        "avgDuration": 120,
        "transferredData": 6483,
        "bottleneck": "Proxy",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "strg2",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupCopyJobs/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Backup Copy Jobs",
        "description": "Returns a collection resource representation of all backup copy job objects.",
        "operationId": "GetBackupServerBackupCopyJobsLinkedJobObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "8b4b8fae-f9f0-4895-87f4-90552b18cf91",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupCopyJobs/{jobUid}/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Backup Copy Job",
        "description": "Returns a collection resource representation of all objects of a backup copy job with the specified UID.",
        "operationId": "GetBackupServerBackupCopyJobLinkedJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupCopyJobs/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Backup Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupCopyJobsLinkedJobObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  },
  {
    "jobUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Share Jobs",
        "description": "Returns a collection resource representation of all file share jobs.",
        "operationId": "GetBackupServerFileShareJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileShareJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "archiveRepositoryUid": null,
    "retention": 28,
    "retentionUnit": "Days",
    "isArchiveRetentionEnabled": false,
    "archiveRetention": 3,
    "archiveRetentionUnit": "Years",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
        "name": "srv3NASBackupJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupFile",
        "lastRun": "2021-08-15T06:24:44.417+02:00",
        "lastEndTime": "2021-08-15T06:25:44.667+02:00",
        "lastDuration": 60,
        "processingRate": 106.0,
        "avgDuration": 60,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "archiveRepositoryUid": null,
    "retention": 28,
    "retentionUnit": "Days",
    "isArchiveRetentionEnabled": false,
    "archiveRetention": 3,
    "archiveRetentionUnit": "Years",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
        "name": "lsrv2NASBackupJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupFile",
        "lastRun": "2021-08-15T05:51:10.32+02:00",
        "lastEndTime": "2021-08-15T05:51:55.997+02:00",
        "lastDuration": 45,
        "processingRate": 112.0,
        "avgDuration": 45,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get File Share Job",
        "description": "Returns a resource representation of a file share job with the specified UID.",
        "operationId": "GetBackupServerFileShareJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerFileShareJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
  "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
  "archiveRepositoryUid": null,
  "retention": 28,
  "retentionUnit": "Days",
  "isArchiveRetentionEnabled": false,
  "archiveRetention": 3,
  "archiveRetentionUnit": "Years",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileShareJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Share Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all file share jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileShareJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileShareJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "archiveRepositoryUid": null,
    "retention": 28,
    "retentionUnit": "Days",
    "isArchiveRetentionEnabled": false,
    "archiveRetention": 3,
    "archiveRetentionUnit": "Years",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
        "name": "autoNASBackupJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupFile",
        "lastRun": "2021-08-15T05:51:10.32+02:00",
        "lastEndTime": "2021-08-15T05:51:55.997+02:00",
        "lastDuration": 45,
        "processingRate": 112.0,
        "avgDuration": 45,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoLocalRepo",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "archiveRepositoryUid": null,
    "retention": 28,
    "retentionUnit": "Days",
    "isArchiveRetentionEnabled": false,
    "archiveRetention": 3,
    "archiveRetentionUnit": "Years",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
        "name": "srv3NASBackupJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "BackupFile",
        "lastRun": "2021-08-15T06:24:44.417+02:00",
        "lastEndTime": "2021-08-15T06:25:44.667+02:00",
        "lastDuration": 60,
        "processingRate": 106.0,
        "avgDuration": 60,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Jobs",
        "description": "Returns a collection resource representation of all file share job objects.",
        "operationId": "GetBackupServerFileShareJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "name": "\\\\vspc-srv\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vspc-srv\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vspc-srv\\C$\\setup\\.snapshot",
          "\\\\vspc-srv\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "sourceFilesCount": 3,
      "changedFilesCount": 3,
      "skippedFilesCount": 0,
      "backedUpFilesCount": 3,
      "transferredSize": 2347,
      "sourceSize": 1124,
      "duration": 29,
      "messages": []
    }
  },
  {
    "jobUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "name": "\\\\vbr2\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vbr2\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          "\\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "sourceFilesCount": 3,
      "changedFilesCount": 3,
      "skippedFilesCount": 0,
      "backedUpFilesCount": 3,
      "transferredSize": 2347,
      "sourceSize": 1124,
      "duration": 23,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileShareJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of file share jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileShareJobsObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "name": "\\\\vbr2\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vbr2\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          "\\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "sourceFilesCount": 3,
      "changedFilesCount": 3,
      "skippedFilesCount": 0,
      "backedUpFilesCount": 3,
      "transferredSize": 2347,
      "sourceSize": 1124,
      "duration": 23,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Job",
        "description": "Returns a collection resource representation of all objects of a file share job with the specified UID.",
        "operationId": "GetBackupServerFileShareJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "name": "\\\\vspc-srv\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vspc-srv\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vspc-srv\\C$\\setup\\.snapshot",
          "\\\\vspc-srv\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "sourceFilesCount": 3,
      "changedFilesCount": 3,
      "skippedFilesCount": 0,
      "backedUpFilesCount": 3,
      "transferredSize": 2347,
      "sourceSize": 1124,
      "duration": 29,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Share Copy Jobs",
        "description": "Returns a collection resource representation of all backup copy jobs for file shares.",
        "operationId": "GetBackupServerFileShareCopyJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileShareCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
    "sourceFileShareJobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "retention": 28,
    "retentionUnit": "Days",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
        "name": "srv3FileCopy",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupFileCopy",
        "lastRun": "2021-08-15T06:25:48.777+02:00",
        "lastEndTime": "2021-08-15T06:26:58.947+02:00",
        "lastDuration": 70,
        "processingRate": 26.0,
        "avgDuration": 70,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
    "sourceFileShareJobUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "retention": 28,
    "retentionUnit": "Days",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
        "name": "srv4FileCopy",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Disabling",
        "type": "BackupFileCopy",
        "lastRun": "2021-08-15T05:51:56.327+02:00",
        "lastEndTime": "2021-08-15T05:52:37.993+02:00",
        "lastDuration": 41,
        "processingRate": 55.0,
        "avgDuration": 41,
        "transferredData": 2084,
        "bottleneck": "Target",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareCopyJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get File Share Copy Job",
        "description": "Returns a resource representation of a file share backup copy job with the specified UID.",
        "operationId": "GetBackupServerFileShareCopyJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerFileShareCopyJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
  "sourceFileShareJobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
  "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
  "retention": 28,
  "retentionUnit": "Days",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileShareCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Share Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all file share backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileShareCopyJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileShareCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
    "sourceFileShareJobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "retention": 28,
    "retentionUnit": "Days",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
        "name": "srv3FileCopy",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "BackupFileCopy",
        "lastRun": "2021-08-15T06:25:48.777+02:00",
        "lastEndTime": "2021-08-15T06:26:58.947+02:00",
        "lastDuration": 70,
        "processingRate": 26.0,
        "avgDuration": 70,
        "transferredData": 2347,
        "bottleneck": "Source",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
    "sourceFileShareJobUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "targetRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "retention": 28,
    "retentionUnit": "Days",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
        "name": "srv4FileCopy",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Disabling",
        "type": "BackupFileCopy",
        "lastRun": "2021-08-15T05:51:56.327+02:00",
        "lastEndTime": "2021-08-15T05:52:37.993+02:00",
        "lastDuration": 41,
        "processingRate": 55.0,
        "avgDuration": 41,
        "transferredData": 2084,
        "bottleneck": "Target",
        "isEnabled": true,
        "scheduleType": "Continuously",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareCopyJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Copy Jobs",
        "description": "Returns a collection resource representation of all file share backup copy job objects.",
        "operationId": "GetBackupServerFileShareCopyJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareCopyJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "path": "\\\\vspc-srv\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vspc-srv\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vspc-srv\\C$\\setup\\.snapshot",
          "\\\\vspc-srv\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 2347,
      "sourceSize": 1124,
      "duration": 53,
      "messages": []
    }
  },
  {
    "jobUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "path": "\\\\vbr2\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vbr2\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          "\\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 2084,
      "sourceSize": 1124,
      "duration": 26,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileShareCopyJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of file share backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileShareCopyJobsObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareCopyJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "path": "\\\\vbr2\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vbr2\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          "\\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 2084,
      "sourceSize": 1124,
      "duration": 26,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileShareCopyJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File Share Copy Job",
        "description": "Returns a collection resource representation of all objects of a file share backup copy job with the specified UID.",
        "operationId": "GetBackupServerFileShareCopyJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileShareCopyJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "path": "\\\\vbr2\\C$\\setup",
    "sources": [
      {
        "path": "\\\\vbr2\\C$\\setup",
        "type": "Directory",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          "\\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 2347,
      "sourceSize": 1124,
      "duration": 53,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/immediatelyBackupCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Immediate Backup Copy Jobs",
        "description": "Returns a collection resource representation of all immediate backup copy jobs.",
        "operationId": "GetBackupServerImmediateBackupCopyJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerImmediateBackupCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerImmediateBackupCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 1,
    "rpoOptionsUnit": "Hours",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
        "name": "srv3iBackupCopyJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Failed",
        "type": "ImmediateBackupCopy",
        "lastRun": "2021-08-15T06:22:48.987+02:00",
        "lastEndTime": "2021-08-15T06:23:14.75+02:00",
        "lastDuration": 25,
        "processingRate": 0.0,
        "avgDuration": 25,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": false,
        "scheduleType": "Continuously",
        "failureMessage": "Processing srv3 Error: Unknown block size: Automatic\r\n",
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  },
  {
    "instanceUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 1,
    "rpoOptionsUnit": "Hours",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
        "name": "srv5iBackupCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Enabling",
        "type": "ImmediateBackupCopy",
        "lastRun": "2021-08-15T05:44:50.35+02:00",
        "lastEndTime": "2021-08-15T05:45:09.93+02:00",
        "lastDuration": 19,
        "processingRate": 0.0,
        "avgDuration": 19,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": false,
        "scheduleType": "Continuously",
        "failureMessage": "Processing srv5 Error: Unknown block size: Automatic\r\n",
        "targetType": "Local",
        "destination": "BetaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/immediatelyBackupCopyJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get Immediate Backup Copy Job",
        "description": "Returns a resource representation of an immediate backup copy job with the specified UID.",
        "operationId": "GetBackupServerImmediateBackupCopyJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerImmediateBackupCopyJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
  "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
  "targetWanAcceleratorUid": null,
  "sourceWanAcceleratorUid": null,
  "weeklyRestorePointsToKeep": 1,
  "monthlyRestorePointsToKeep": 1,
  "yearlyRestorePointsToKeep": 1,
  "retentionPolicyType": "GFS",
  "isRpoOptionsEnabled": false,
  "rpoOptionsValue": 1,
  "rpoOptionsUnit": "Hours",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/immediatelyBackupCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Immediate Backup Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all immediate backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerImmediateBackupCopyJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerImmediateBackupCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerImmediateBackupCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 1,
    "rpoOptionsUnit": "Hours",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
        "name": "srv3iBackupCopyJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Failed",
        "type": "ImmediateBackupCopy",
        "lastRun": "2021-08-15T06:22:48.987+02:00",
        "lastEndTime": "2021-08-15T06:23:14.75+02:00",
        "lastDuration": 25,
        "processingRate": 0.0,
        "avgDuration": 25,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": false,
        "scheduleType": "Continuously",
        "failureMessage": "Processing srv3 Error: Unknown block size: Automatic\r\n",
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  },
  {
    "instanceUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "targetWanAcceleratorUid": null,
    "sourceWanAcceleratorUid": null,
    "weeklyRestorePointsToKeep": 1,
    "monthlyRestorePointsToKeep": 1,
    "yearlyRestorePointsToKeep": 1,
    "retentionPolicyType": "GFS",
    "isRpoOptionsEnabled": false,
    "rpoOptionsValue": 1,
    "rpoOptionsUnit": "Hours",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
        "name": "srv5iBackupCopyJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Enabling",
        "type": "ImmediateBackupCopy",
        "lastRun": "2021-08-15T05:44:50.35+02:00",
        "lastEndTime": "2021-08-15T05:45:09.93+02:00",
        "lastDuration": 19,
        "processingRate": 0.0,
        "avgDuration": 19,
        "transferredData": 0,
        "bottleneck": "None",
        "isEnabled": false,
        "scheduleType": "Continuously",
        "failureMessage": "Processing srv5 Error: Unknown block size: Automatic\r\n",
        "targetType": "Local",
        "destination": "BetaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": true
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/immediatelyBackupCopyJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Immediate Backup Copy Jobs",
        "description": "Returns a collection resource representation of all immediate backup copy job objects.",
        "operationId": "GetBackupServerImmediateBackupCopyJobsLinkedJobObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/immediatelyBackupCopyJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Immediate Backup Copy Job",
        "description": "Returns a collection resource representation of all objects of an immediate backup copy job with the specified UID.",
        "operationId": "GetBackupServerImmediateBackupCopyJobLinkedJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  },
  {
    "jobUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "linkedJobUid": "1f8d2bb9-18c6-4f43-a365-5d7042259828"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers{backupServerUid}/jobs/immediatelyBackupCopyJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Immediate Backup Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of immediate backup copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerImmediateBackupCopyJobsLinkedJobObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "7a88166e-8bd4-4e83-8e4f-97bf1cde7a71",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/vmCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Copy Jobs",
        "description": "Returns a collection resource representation of all VM copy jobs.",
        "operationId": "GetBackupServerVmCopyJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerVmCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
        "name": "srv3VMCopyJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "CopyVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "cb87d163-f2a6-4b7f-9fb5-84d3c4643dda",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "cb87d163-f2a6-4b7f-9fb5-84d3c4643dda",
        "name": "srv5CMCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "CopyVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/vmCopyJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get VM Copy Job",
        "description": "Returns a resource representation of a VM copy job with the specified UID.",
        "operationId": "GetBackupServerVmCopyJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerVmCopyJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
  "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/vmCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All VM Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all VM copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerVmCopyJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerVmCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerVmCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cb87d163-f2a6-4b7f-9fb5-84d3c4643dda",
    "targetRepositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "cb87d163-f2a6-4b7f-9fb5-84d3c4643dda",
        "name": "srv5VMCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "CopyVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
    "targetRepositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "281b2f81-b977-4a9e-8a1a-dee246f8d840",
        "name": "srv3VMCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "CopyVm",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "AlphaRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Copy Jobs",
        "description": "Returns a collection resource representation of all file copy jobs.",
        "operationId": "GetBackupServerFileCopyJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c3c5081b-8bd4-46e1-8d3c-15ee16fafc38",
    "targetHostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "targetPath": "C:\\ProgramData",
    "sourceSize": null,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "c3c5081b-8bd4-46e1-8d3c-15ee16fafc38",
        "name": "srv3FileCopyJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "CopyFile",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "[VBR1] C:\\ProgramData",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "b3dc3dac-6b70-484a-a429-02fc42d14971",
    "targetHostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "targetPath": "C:\\ProgramData",
    "sourceSize": null,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "b3dc3dac-6b70-484a-a429-02fc42d14971",
        "name": "lsrv4FileCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "CopyFile",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "[VBR2] C:\\ProgramData",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileCopyJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get File Copy Job",
        "description": "Returns a resource representation of a file copy job with the specified UID.",
        "operationId": "GetBackupServerFileCopyJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerFileCopyJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c3c5081b-8bd4-46e1-8d3c-15ee16fafc38",
  "targetHostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
  "targetPath": "C:\\ProgramData",
  "sourceSize": null,
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileCopyJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File Copy Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all file copy jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileCopyJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileCopyJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileCopyJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "b3dc3dac-6b70-484a-a429-02fc42d14971",
    "targetHostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "targetPath": "C:\\ProgramData",
    "sourceSize": null,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "b3dc3dac-6b70-484a-a429-02fc42d14971",
        "name": "autoFileCopyJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "CopyFile",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "[VBR2] C:\\ProgramData",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileTapeJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File to Tape Jobs",
        "description": "Returns a collection resource representation of all file to tape jobs.",
        "operationId": "GetBackupServerFileTapeJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileTapeJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileTapeJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "09120952-261e-40ca-84ca-6592dd612922",
    "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "09120952-261e-40ca-84ca-6592dd612922",
        "name": "srv3FileToTapeJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "FileToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 1",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
        "name": "srv5FileToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "FileToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 2",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileTapeJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get File to Tape Job",
        "description": "Returns a resource representation of a file to tape job with the specified UID.",
        "operationId": "GetBackupServerFileTapeJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerFileTapeJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "09120952-261e-40ca-84ca-6592dd612922",
  "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
  "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileTapeJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All File to Tape Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all file to tape jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileTapeJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerFileTapeJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileTapeJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
        "name": "autoFileToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "FileToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 1",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "09120952-261e-40ca-84ca-6592dd612922",
    "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "09120952-261e-40ca-84ca-6592dd612922",
        "name": "srv3FileToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "FileToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 2",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileTapeJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File to Tape Jobs",
        "description": "Returns a collection resource representation of all file to tape job objects.",
        "operationId": "GetBackupServerFileTapeJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileTapeJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "09120952-261e-40ca-84ca-6592dd612922",
    "hostName": "vspc-srv",
    "sources": [
      {
        "path": "C:\\Setup",
        "type": "Directory"
      }
    ],
    "lastSession": null
  },
  {
    "jobUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
    "hostName": "vbr2",
    "sources": [
      {
        "path": "C:\\Setup",
        "type": "Directory"
      }
    ],
    "lastSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/fileTapeJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File to Tape Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all objects of file to tape jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerFileTapeJobsObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileTapeJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
    "hostName": "vbr2",
    "sources": [
      {
        "path": "C:\\Setup",
        "type": "Directory"
      }
    ],
    "lastSession": null
  },
  {
    "jobUid": "09120952-261e-40ca-84ca-6592dd612922",
    "hostName": "vbr2",
    "sources": [
      {
        "path": "C:\\Setup",
        "type": "Directory"
      }
    ],
    "lastSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/fileTapeJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of File to Tape Job",
        "description": "Returns a collection resource representation of all objects of a file to tape job with the specified UID.",
        "operationId": "GetBackupServerFileTapeJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerFileTapeJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "e0cfd071-5bb4-4202-ac71-8cc763b902c2",
    "hostName": "vbr2",
    "sources": [
      {
        "path": "C:\\Setup",
        "type": "Directory"
      }
    ],
    "lastSession": null
  },
  {
    "jobUid": "57ebd217-beee-479d-ab12-467d731ba569",
    "hostName": "srv3",
    "sources": [
      {
        "path": "C:\\Tapes\\Job\\Job.vbm",
        "type": "File"
      }
    ],
    "lastSession": {
      "backupStatus": "Success",
      "totalBackedSize": 47943,
      "sourceSize": 63834,
      "duration": 267,
      "messages": []
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup to Tape Jobs",
        "description": "Returns a collection resource representation of all backup to tape jobs.",
        "operationId": "GetBackupServerBackupTapeJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupTapeJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupTapeJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
        "name": "srv3BackupToTapeJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 1",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
    "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
        "name": "strg2RepoToTapeJob",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Media Pool 1",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
        "name": "strg4RepoToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoMediaPool",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
        "name": "srv5BackupToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoMediaPool",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get Backup to Tape Job",
        "description": "Returns a resource representation of a backup to tape job with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerBackupTapeJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
  "fullMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
  "incrementalMediaPoolUid": "e8bcc8f4-4354-4326-b1ad-d519a29cbffb",
  "isGfsEnabled": false,
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupTapeJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup to Tape Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all backup to tape jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerBackupTapeJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerBackupTapeJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
        "name": "strg4RepoToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoMediaPool",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
    "fullMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "incrementalMediaPoolUid": "aaa9d478-db4a-478e-9576-7b9b6bc6ef4a",
    "isGfsEnabled": false,
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
        "name": "srv5BackupToTapeJob",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "None",
        "type": "BackupToTape",
        "lastRun": null,
        "lastEndTime": null,
        "lastDuration": null,
        "processingRate": null,
        "avgDuration": 0,
        "transferredData": null,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoMediaPool",
        "retentionLimit": 7,
        "retentionLimitType": "Days",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Job Objects of Backup to Tape Jobs",
        "description": "Returns a collection resource representation of all jobs processed by backup to tape jobs.",
        "operationId": "GetBackupServerBackupTapeJobsLinkedJobObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupTapeJobs/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Job Objects of Backup to Tape Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all jobs that are processed by backup to tape jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJobsLinkedJobObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "0645ab97-561e-4561-9d97-7b73eb0bef50",
    "linkedJobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs/{jobUid}/jobObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Job Objects of Backup to Tape Job",
        "description": "Returns a collection resource representation of all jobs processed by a backup to tape job with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJobLinkedJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "linkedJobUid": "784a3a14-b744-4322-a782-10f41d8bd689"
  },
  {
    "jobUid": "4889c800-08a2-4b28-916a-65a3f4eb8407",
    "linkedJobUid": "fb91f13b-d23c-471d-b1d3-6684b5e23107"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs/repositoryObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Repository Objects of Backup to Tape Jobs",
        "description": "Returns a collection resource representation of all repositories processed by backup to tape jobs.",
        "operationId": "GetBackupServerBackupTapeJobsLinkedRepositoryObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedRepositoryObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
    "linkedRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
  },
  {
    "jobUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
    "linkedRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/backupTapeJobs/repositoryObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Repository Objects of Backup to Tape Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all repositories that are processed by backup to tape jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJobsLinkedRepositoryObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedRepositoryObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
    "linkedRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
  },
  {
    "jobUid": "ac555f97-7abc-41c8-adaf-6a84caed99dc",
    "linkedRepositoryUid": "60c05ff3-0d27-42e7-9c9c-a66a411322f7"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/backupTapeJobs/{jobUid}/repositoryObjects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Repository Objects of Backup to Tape Job",
        "description": "Returns a collection resource representation of all repositories processed by a backup to tape job with the specified UID.",
        "operationId": "GetBackupServerBackupTapeJobLinkedRepositoryObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerJobLinkedRepositoryObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "jobUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
    "linkedRepositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec"
  },
  {
    "jobUid": "2ba9436b-065b-4d5d-88d9-858216ba7117",
    "linkedRepositoryUid": "4ef95e80-0ca5-4ab8-bf2c-713474fa99eb"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/agentJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup Agent Jobs",
        "description": "Returns a collection resource representation of all backup agent jobs.",
        "operationId": "GetBackupServerAgentJobs",
        "parameters": [
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerAgentJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "totalJobsCount": 1,
    "successJobsCount": 1,
    "destination": "Default Backup Repository",
    "source": {
      "backupMode": "File",
      "backupUserFolders": false,
      "backupOperatingSystem": false,
      "fileSystemItems": {
        "volumes": null,
        "filesAndFolders": [
          "C:\\Share"
        ]
      }
    },
    "jobMode": "ManagedByBackupServer",
    "osType": "Windows",
    "licenseType": "Server",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
        "name": "vaw3job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "AgentBackupJob",
        "lastRun": "2021-08-15T06:53:51.483+02:00",
        "lastEndTime": "2021-08-15T06:58:43.92+02:00",
        "lastDuration": 292,
        "processingRate": 8394327.0,
        "avgDuration": null,
        "transferredData": 83943272,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "totalJobsCount": 1,
    "successJobsCount": 1,
    "destination": "LinRepo2",
    "source": {
      "backupMode": "File",
      "backupUserFolders": false,
      "backupOperatingSystem": false,
      "fileSystemItems": {
        "volumes": null,
        "filesAndFolders": [
          "/tmp/toBackup"
        ]
      }
    },
    "jobMode": "ManagedByBackupServer",
    "osType": "Linux",
    "licenseType": "Server",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
        "name": "linsrv2job",
        "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "AgentBackupJob",
        "lastRun": "2021-08-15T05:52:39.307+02:00",
        "lastEndTime": "2021-08-15T05:55:54.183+02:00",
        "lastDuration": 194,
        "processingRate": 0.0,
        "avgDuration": null,
        "transferredData": 59960,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoLocalLinuxRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/jobs/agentJobs": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Backup Agent Jobs Configured on Backup Server",
        "description": "Returns a collection resource representation of all backup agent jobs configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerAgentJobsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "expand",
            "in": "query",
            "description": "Includes a resource representation of the root entities in the embedded property of a response.",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/BackupServerAgentJobExpand"
              }
            },
            "x-veeam-expand": true
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "totalJobsCount": 1,
    "successJobsCount": 1,
    "destination": "Default Backup Repository",
    "source": {
      "backupMode": "File",
      "backupUserFolders": false,
      "backupOperatingSystem": false,
      "fileSystemItems": {
        "volumes": null,
        "filesAndFolders": [
          "C:\\Share"
        ]
      }
    },
    "jobMode": "ManagedByBackupServer",
    "osType": "Windows",
    "licenseType": "Server",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
        "name": "vawJobByVBR",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
        "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
        "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
        "status": "Success",
        "type": "AgentBackupJob",
        "lastRun": "2021-08-15T06:53:51.483+02:00",
        "lastEndTime": "2021-08-15T06:58:43.92+02:00",
        "lastDuration": 292,
        "processingRate": 8394327.0,
        "avgDuration": null,
        "transferredData": 83943272,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "Default Backup Repository",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  },
  {
    "instanceUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "totalJobsCount": 1,
    "successJobsCount": 1,
    "destination": "LinRepo2",
    "source": {
      "backupMode": "File",
      "backupUserFolders": false,
      "backupOperatingSystem": false,
      "fileSystemItems": {
        "volumes": null,
        "filesAndFolders": [
          "/tmp/toBackup"
        ]
      }
    },
    "jobMode": "ManagedByBackupServer",
    "osType": "Linux",
    "licenseType": "Server",
    "_embedded": {
      "backupServerJob": {
        "instanceUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
        "name": "linsrv2job",
        "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
        "locationUid": "cf0d9d08-5826-44e4-9c35-0d838c393010",
        "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
        "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
        "status": "Success",
        "type": "AgentBackupJob",
        "lastRun": "2021-08-15T05:52:39.307+02:00",
        "lastEndTime": "2021-08-15T05:55:54.183+02:00",
        "lastDuration": 194,
        "processingRate": 0.0,
        "avgDuration": null,
        "transferredData": 59960,
        "bottleneck": "None",
        "isEnabled": true,
        "scheduleType": "NotScheduled",
        "failureMessage": null,
        "targetType": "Local",
        "destination": "autoLocalLinuxRepo",
        "retentionLimit": 7,
        "retentionLimitType": "RestorePoints",
        "isGfsOptionEnabled": false
      }
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/agentJobs/{jobUid}": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get Backup Agent Job",
        "description": "Returns a resource representation of a backup agent job with the specified UID.",
        "operationId": "GetBackupServerAgentJob",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupServerAgentJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
  "totalJobsCount": 1,
  "successJobsCount": 1,
  "destination": "Default Backup Repository",
  "source": {
    "backupMode": "File",
    "backupUserFolders": false,
    "backupOperatingSystem": false,
    "fileSystemItems": {
      "volumes": null,
      "filesAndFolders": [
        "C:\\Share"
      ]
    }
  },
  "jobMode": "ManagedByBackupServer",
  "osType": "Windows",
  "licenseType": "Server",
  "_embedded": {
    "backupServerJob": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/agentJobs/{jobUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Backup Agent Job",
        "description": "Returns a collection resource representation of all objects of a backup agent job with the specified UID.",
        "operationId": "GetBackupServerAgentJobObjects",
        "parameters": [
          {
            "name": "jobUid",
            "in": "path",
            "description": "Backup agent job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "58c8814c-78fd-432e-99b2-cbba26ad55c8",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "agentUid": "69547a49-6444-4f72-9b07-817071b835df",
    "jobUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "computer": "vaw3",
    "backupStatus": "Success",
    "lastRun": "2021-08-15T06:53:57+02:00",
    "lastEndTime": "2021-08-15T06:58:35.823+02:00",
    "lastDuration": 278,
    "restorePointsCount": 1,
    "osType": "Windows",
    "failureMessage": ""
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/jobs/agentJobs/objects": {
      "get": {
        "tags": [
          "Backup Server Jobs"
        ],
        "summary": "Get All Objects of Backup Agent Jobs",
        "description": "Returns a collection resource representation of all backup agent job objects.",
        "operationId": "GetBackupServerAgentJobsObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentJobObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "58c8814c-78fd-432e-99b2-cbba26ad55c8",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "agentUid": "69547a49-6444-4f72-9b07-817071b835df",
    "jobUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "computer": "vaw3",
    "backupStatus": "Success",
    "lastRun": "2021-08-15T06:53:57+02:00",
    "lastEndTime": "2021-08-15T06:58:35.823+02:00",
    "lastDuration": 278,
    "restorePointsCount": 1,
    "osType": "Windows",
    "failureMessage": ""
  },
  {
    "instanceUid": "5097adc2-0a6c-4e3e-ae35-81df44369ece",
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "agentUid": "f1ddbfea-fb73-4068-8997-cf708e00a1ab",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "computer": "val2",
    "backupStatus": "Success",
    "lastRun": "2021-08-15T05:52:48.677+02:00",
    "lastEndTime": "2021-08-15T05:55:44.657+02:00",
    "lastDuration": 175,
    "restorePointsCount": 1,
    "osType": "Linux",
    "failureMessage": ""
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/protectionGroups": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Protection Groups",
        "description": "Returns a collection resource representation of all protection groups configured on managed Veeam Backup & Replication servers.",
        "operationId": "GetBackupServerAgentProtectionGroups",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentProtectionGroup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "730dc485-84c2-4a9d-86e7-2e35d1d5a0be",
    "name": "Manually Added",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
  },
  {
    "instanceUid": "730dc485-84c2-4a9d-86e7-2e35d1d5a0be",
    "name": "Manually Added",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013"
  },
  {
    "instanceUid": "730dc485-84c2-4a9d-86e7-2e35d1d5a0be",
    "name": "Manually Added",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36"
  },
  {
    "instanceUid": "df17abc5-f51f-4d73-90a3-57f49d15f334",
    "name": "Windows Protection Group",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/protectionGroups": {
      "get": {
        "tags": [
          "Backup Servers"
        ],
        "summary": "Get All Protection Groups Configured on Backup Server",
        "description": "Returns a collection resource representation of all protection groups configured on a managed Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupServerAgentProtectionGroupsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupServerAgentProtectionGroup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "730dc485-84c2-4a9d-86e7-2e35d1d5a0be",
    "name": "Manually Added",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
  },
  {
    "instanceUid": "df17abc5-f51f-4d73-90a3-57f49d15f334",
    "name": "Windows Protection Group",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get All Failover Plans",
        "description": "Returns a collection resource representation of all failover plans.",
        "operationId": "GetBackupFailoverPlans",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupFailoverPlan"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cab97c95-e0b3-60a9-c3eb-7177c168f839",
    "originalUid": "0331444c-d6c3-4d50-ac0b-6e1e5e85bba0",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "FailoverPlan1",
    "type": "Tenant",
    "status": "Ready",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "objectsCount": 1,
    "preFailoverScriptEnabled": false,
    "preFailoverCommand": "",
    "postFailoverCommand": "",
    "postFailoverScriptEnabled": false
  },
  {
    "instanceUid": "2407e1c7-534c-0a05-7c7f-8a85b82745cc",
    "originalUid": "d3988887-9007-49dc-8287-06c4426848e3",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "name": "FailoverPlan2",
    "type": "Tenant",
    "status": "Ready",
    "tenantUid": "179c48b7-644f-4af8-b652-0b64de4784e5",
    "objectsCount": 1,
    "preFailoverScriptEnabled": null,
    "preFailoverCommand": "",
    "postFailoverCommand": "",
    "postFailoverScriptEnabled": null
  },
  {
    "instanceUid": "437909a0-702b-eb5c-df26-8b8da7283768",
    "originalUid": "d6ee2664-88d4-49a7-9022-21c638e6c62a",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "name": "FailoverPlan3",
    "type": "Local",
    "status": "Ready",
    "tenantUid": null,
    "objectsCount": 1,
    "preFailoverScriptEnabled": true,
    "preFailoverCommand": "Rlab2_SP_pre",
    "postFailoverCommand": "Rlab2_SP_post",
    "postFailoverScriptEnabled": true
  },
  {
    "instanceUid": "0f8fa1fc-6243-157b-09a6-5ae276c72344",
    "originalUid": "868529c0-90a2-4b03-9ac3-e5ca4a3ac6d6",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "name": "FailoverPlan4",
    "type": "Local",
    "status": "Ready",
    "tenantUid": null,
    "objectsCount": 1,
    "preFailoverScriptEnabled": false,
    "preFailoverCommand": "",
    "postFailoverCommand": "",
    "postFailoverScriptEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/failoverplans": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get All Failover Plans Configured on Backup Server",
        "description": "Returns a collection resource representation of all failover plans configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupFailoverPlansByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupFailoverPlan"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cab97c95-e0b3-60a9-c3eb-7177c168f839",
    "originalUid": "0331444c-d6c3-4d50-ac0b-6e1e5e85bba0",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "FailoverPlan1",
    "type": "Tenant",
    "status": "Ready",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "objectsCount": 1,
    "preFailoverScriptEnabled": false,
    "preFailoverCommand": "",
    "postFailoverCommand": "",
    "postFailoverScriptEnabled": false
  },
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "originalUid": "84df7cb0-6eb6-88e4-574c-ff4d56b26276",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "FailoverPlan2",
    "type": "Tenant",
    "status": "Ready",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "objectsCount": 1,
    "preFailoverScriptEnabled": false,
    "preFailoverCommand": "",
    "postFailoverCommand": "",
    "postFailoverScriptEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans/{planUid}": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get Failover Plan",
        "description": "Returns a resource representation of a failover plan with the specified UID.",
        "operationId": "GetBackupFailoverPlan",
        "parameters": [
          {
            "name": "planUid",
            "in": "path",
            "description": "Failover plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupFailoverPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "437909a0-702b-eb5c-df26-8b8da7283768",
  "originalUid": "d6ee2664-88d4-49a7-9022-21c638e6c62a",
  "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
  "name": "FailoverPlan1",
  "type": "Local",
  "status": "Ready",
  "tenantUid": null,
  "objectsCount": 1,
  "preFailoverScriptEnabled": false,
  "preFailoverCommand": "",
  "postFailoverCommand": "",
  "postFailoverScriptEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Modify Failover Plan",
        "description": "Modifies a failover plan with the specified UID.\n> Operation is performed asynchronously and cannot be tracked.\n",
        "operationId": "PatchBackupFailoverPlan",
        "parameters": [
          {
            "name": "planUid",
            "in": "path",
            "description": "Failover plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Rlab2_SP_pre",
    "path": "/preFailoverCommand",
    "op": "replace"
  },
  {
    "value": "Rlab2_SP_post",
    "path": "/postFailoverCommand",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupFailoverPlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "437909a0-702b-eb5c-df26-8b8da7283768",
  "originalUid": "d6ee2664-88d4-49a7-9022-21c638e6c62a",
  "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
  "name": "Failover Plan",
  "type": "Local",
  "status": "Ready",
  "tenantUid": null,
  "objectsCount": 1,
  "preFailoverScriptEnabled": false,
  "preFailoverCommand": "",
  "postFailoverCommand": "",
  "postFailoverScriptEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupFailoverPlan"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans/{planUid}/start": {
      "post": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Start Failover Plan",
        "description": "Starts a failover plan with the specified UID. Returns a positive response when the task is added to the internal queue and not when the task is executed.",
        "operationId": "StartBackupFailoverPlan",
        "parameters": [
          {
            "name": "planUid",
            "in": "path",
            "description": "Failover plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "date-time",
            "in": "query",
            "description": "Backup date and time. Veeam Backup & Replication finds the closest restore point prior to the entered value for each VM and will fail over to it.\n> If you provide a future date, the operation returns an error response.\n",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans/{planUid}/undo": {
      "post": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Undo Failover Plan",
        "description": "Undoes a failover plan with the specified UID. Returns a positive response when the undo task is added to the internal queue and not when the task is executed.",
        "operationId": "UndoBackupFailoverPlan",
        "parameters": [
          {
            "name": "planUid",
            "in": "path",
            "description": "Failover plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans/objects": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get All Objects of Failover Plans",
        "description": "Returns a collection resource representation of VMs included in all failover plans.",
        "operationId": "GetBackupFailoverPlansObjects",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupFailoverPlanObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "00000000-0000-0000-0000-000000000000",
    "planUid": "cab97c95-e0b3-60a9-c3eb-7177c168f839",
    "name": "ivz10",
    "hostName": null,
    "folderName": null,
    "path": "ivz10",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "restoreSession": null
  },
  {
    "instanceUid": "00000000-0000-0000-0000-000000000000",
    "planUid": "2407e1c7-534c-0a05-7c7f-8a85b82745cc",
    "name": "ivz11",
    "hostName": null,
    "folderName": null,
    "path": "ivz11",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "restoreSession": null
  },
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "planUid": "437909a0-702b-eb5c-df26-8b8da7283768",
    "name": "localReplica_rsrv2",
    "hostName": "",
    "folderName": "",
    "path": "automoonvc.vspc\\AutoMoonDatacenter\\AutoMoonCluster\\RestLab\\Main\\localReplica_rsrv2",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "restoreSession": null
  },
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "planUid": "0f8fa1fc-6243-157b-09a6-5ae276c72344",
    "name": "localReplica_rsrv4",
    "hostName": "",
    "folderName": "",
    "path": "automoonvc.vspc\\AutoMoonDatacenter\\AutoMoonCluster\\RestLab\\Main\\localReplica_rsrv4",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "restoreSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/{backupServerUid}/failoverplans/objects": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get All Objects of Failover Plans Configured on Backup Server",
        "description": "Returns a collection resource representation of VMs included in all failover plans configured on a Veeam Backup & Replication server with the specified UID.",
        "operationId": "GetBackupFailoverPlansObjectsByServer",
        "parameters": [
          {
            "name": "backupServerUid",
            "in": "path",
            "description": "Veeam Backup & Replication server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupFailoverPlanObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "planUid": "437909a0-702b-eb5c-df26-8b8da7283768",
    "name": "localReplica_rsrv2",
    "hostName": "",
    "folderName": "",
    "path": "automoonvc.vspc\\AutoMoonDatacenter\\AutoMoonCluster\\RestLab\\Main\\localReplica_rsrv2",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "restoreSession": null
  },
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "planUid": "0f8fa1fc-6243-157b-09a6-5ae276c72344",
    "name": "localReplica_rsrv4",
    "hostName": "",
    "folderName": "",
    "path": "automoonvc.vspc\\AutoMoonDatacenter\\AutoMoonCluster\\RestLab\\Main\\localReplica_rsrv4",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "restoreSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupServers/failoverplans/{planUid}/objects": {
      "get": {
        "tags": [
          "Backup Server Failover Plans"
        ],
        "summary": "Get All Objects of Failover Plan",
        "description": "Returns a collection resource representation of all VMs included in a failover plan with the specified UID.",
        "operationId": "GetBackupFailoverPlanObjects",
        "parameters": [
          {
            "name": "planUid",
            "in": "path",
            "description": "Failover plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupFailoverPlanObject"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "423b64a5-21b6-6599-839c-3ab014344313",
    "planUid": "cab97c95-e0b3-60a9-c3eb-7177c168f839",
    "name": "ivz10",
    "hostName": null,
    "folderName": null,
    "path": "ivz10copy2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "restoreSession": null
  },
  {
    "instanceUid": "f43dd126-8d35-4d1f-9429-b8a423a8abe1",
    "planUid": "cab97c95-e0b3-60a9-c3eb-7177c168f839",
    "name": "ivz11",
    "hostName": null,
    "folderName": null,
    "path": "ivz10copy2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "restoreSession": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Backup Agents",
        "description": "Returns a collection resource representation of all Veeam backup agents.",
        "operationId": "GetBackupAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "agentPlatform": "Windows",
    "status": "Active",
    "managementAgentUid": "336f9b99-eed8-4b81-93e4-d8ca5a7c808d",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "winsrv4",
    "operationMode": "Server",
    "guiMode": "ReadOnly",
    "platform": "Virtual",
    "version": "5.0.0.4301",
    "activationTime": "2021-08-16T08:26:26.5566318+02:00",
    "managementMode": "ManagedByConsole",
    "installationType": "Full",
    "totalJobsCount": 2,
    "runningJobsCount": 2,
    "successJobsCount": 0
  },
  {
    "instanceUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "agentPlatform": "Windows",
    "status": "Active",
    "managementAgentUid": "0470c47d-fd2e-4bf5-903d-8a78542e9239",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "winsrv9",
    "operationMode": "UnLicensed",
    "guiMode": "Unknown",
    "platform": "Virtual",
    "version": "4.0.1.2169",
    "activationTime": "0001-01-01T09:00:00+01:00",
    "managementMode": "UnManaged",
    "installationType": "Full",
    "totalJobsCount": 0,
    "runningJobsCount": 0,
    "successJobsCount": 0
  },
  {
    "instanceUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "agentPlatform": "Windows",
    "status": "Active",
    "managementAgentUid": "b8e93fc7-b1b9-4461-a6f5-1f7b53e23400",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "winsrv10",
    "operationMode": "Workstation",
    "guiMode": "Full",
    "platform": "Virtual",
    "version": "4.0.0.1811",
    "activationTime": "2021-08-16T08:58:12.1413635+02:00",
    "managementMode": "ManagedByConsole",
    "installationType": "Full",
    "totalJobsCount": 1,
    "runningJobsCount": 0,
    "successJobsCount": 1
  },
  {
    "instanceUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "agentPlatform": "Linux",
    "status": "Active",
    "managementAgentUid": "1ae4ef20-c191-4ddf-bf79-90d24aff6e59",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "linsrv1",
    "operationMode": "Server",
    "guiMode": "Full",
    "platform": "Virtual",
    "version": "5.0.0.4318",
    "activationTime": "2021-08-16T08:08:41.513+02:00",
    "managementMode": "ManagedByConsole",
    "installationType": "Full",
    "totalJobsCount": 4,
    "runningJobsCount": 0,
    "successJobsCount": 0
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Backup Agent",
        "description": "Returns a resource representation of a Veeam backup agent with the specified UID.",
        "operationId": "GetBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
  "agentPlatform": "Windows",
  "status": "Active",
  "managementAgentUid": "2f588d55-f1e5-4a97-aab5-88edb4bd3135",
  "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9",
  "organizationUid": "aad6ee62-05fc-4da0-93d0-9de71d5fe12d",
  "name": "winsrv4",
  "operationMode": "UnLicensed",
  "guiMode": "Unknown",
  "platform": "Virtual",
  "version": "4.0.0.1811",
  "activationTime": null,
  "managementMode": "UnManaged",
  "installationType": "Full",
  "totalJobsCount": 0,
  "runningJobsCount": 0,
  "successJobsCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Modify Backup Agent",
        "description": "Modifies Veeam backup agent with the specified UID.",
        "operationId": "PatchBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "PATCH operation.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Full",
    "path": "/guiMode",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "agentPlatform": "Windows",
  "status": "Active",
  "managementAgentUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "name": "rb2em",
  "operationMode": "Server",
  "guiMode": "Full",
  "platform": "Virtual",
  "version": "5.0.0.4301",
  "activationTime": "2021-08-15T08:58:48.7251945+02:00",
  "managementMode": "ManagedByConsole",
  "installationType": "Full",
  "totalJobsCount": 3,
  "runningJobsCount": 0,
  "successJobsCount": 0
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupAgent"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Delete Backup Agent",
        "description": "Deletes Veeam backup agent with the specified UID.",
        "operationId": "DeleteBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/activate": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Activate Backup Agent",
        "description": "Changes management mode of a Veeam backup agent with the specified UID to ManagedByConsole.",
        "operationId": "ActivateBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/deactivate": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Deactivate Backup Agent",
        "description": "Changes management mode of Veeam backup agent with the specified UID to UnManaged and deletes management agent from the agent computer.",
        "operationId": "DeactivateBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/restart": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Restart Backup Agent",
        "description": "Restarts Veeam backup agent with the specified UID. Returns a positive response if the restart task is added to the internal queue and not when the task is executed.",
        "operationId": "RestartBackupAgentService",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/collect": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Force Data Collection from Backup Agent",
        "description": "Forces data collection from a Veeam backup agent with the specified UID. Returns a positive response when the management agent receives the data collection task and not when the task is executed.",
        "operationId": "ForceCollectBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Veeam Agents for Microsoft Windows",
        "description": "Returns a collection resource representation of all Veeam backup agents installed on Windows computers.",
        "operationId": "GetWindowsBackupAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsBackupAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "managementAgentUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
    "cbtDriverStatus": "NotInstalled"
  },
  {
    "instanceUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "managementAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
    "cbtDriverStatus": "Unknown"
  },
  {
    "instanceUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "managementAgentUid": "fca1405d-e52f-4949-8676-75c97ed7d0f9",
    "cbtDriverStatus": "NotInstalled"
  },
  {
    "instanceUid": "4cf83b42-9bca-bc64-f724-e8ab48aece24",
    "managementAgentUid": "4053efed-34ad-49c8-95ea-cd9774d71e7c",
    "cbtDriverStatus": "Unknown"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Veeam Agent for Microsoft Windows",
        "description": "Returns a resource representation of a Veeam Agent for Microsoft Windows with the specified UID.",
        "operationId": "GetWindowsBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
  "managementAgentUid": "447e5bb3-c233-4ea9-983e-22117dfbb0f9",
  "cbtDriverStatus": "NotInstalled"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/update": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Update Veeam Agent for Microsoft Windows",
        "description": "Updates Veeam Agent for Microsoft Windows with the specified UID. Returns a positive response when the management agent receives the update task and not when the task is executed.",
        "operationId": "UpdateWindowsBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeploymentInformation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "deployTaskUid": "9fc2b022-be46-4971-8eb2-83bbfaba0163",
  "deployTaskId": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/installCbtDriver": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Install CBT Driver",
        "description": "Installs the Veeam CBT driver on a Windows computer that runs Veeam Agent with the specified UID.",
        "operationId": "InstallCbtDriver",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/uninstallCbtDriver": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Uninstall CBT Driver",
        "description": "Uninstalls the Veeam CBT driver from a Windows computer that runs Veeam Agent with the specified UID.",
        "operationId": "UninstallCbtDriver",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/settings": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Veeam Agents for Microsoft Windows Settings",
        "description": "Returns a collection resource representation of settings configured for all Veeam backup agents installed on Windows computers.",
        "operationId": "GetBackupAgentsSettings",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentSettings"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbytePerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  },
  {
    "backupAgentUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbytePerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  },
  {
    "backupAgentUid": "39713b42-902b-1b9d-ea6e-26f7bf7e4aa7",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbytePerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  },
  {
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "disableScheduledBackups": false,
    "disableControlPanelNotification": false,
    "disableBackupOverMeteredConnection": true,
    "disableScheduleWakeup": false,
    "throttleBackupActivity": true,
    "restrictVpnConnections": false,
    "limitBandwidthConsumption": false,
    "bandwidthSpeedLimit": 1,
    "bandwidthSpeedLimitUnit": "MbytePerSec",
    "flrWithoutAdminPrivilegesAllowed": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/settings": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Veeam Agent for Microsoft Windows Settings",
        "description": "Returns a resource representation of settings configured for Veeam Agent for Microsoft Windows with the specified UID.",
        "operationId": "GetBackupAgentSettings",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupAgentSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "disableScheduledBackups": false,
  "disableControlPanelNotification": false,
  "disableBackupOverMeteredConnection": true,
  "disableScheduleWakeup": false,
  "throttleBackupActivity": true,
  "restrictVpnConnections": false,
  "limitBandwidthConsumption": true,
  "bandwidthSpeedLimit": 2,
  "bandwidthSpeedLimitUnit": "MbytePerSec",
  "flrWithoutAdminPrivilegesAllowed": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/BackupAgentSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "put": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Replace Veeam Agent for Microsoft Windows Settings",
        "description": "Replaces settings configured for Veeam Agent for Microsoft Windows with the specified UID.",
        "operationId": "SetBackupAgentSettings",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "New settings.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BackupAgentSettings"
              },
              "example": {
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "disableScheduledBackups": true,
  "disableControlPanelNotification": true,
  "disableBackupOverMeteredConnection": true,
  "disableScheduleWakeup": false,
  "throttleBackupActivity": true,
  "restrictVpnConnections": false,
  "limitBandwidthConsumption": true,
  "bandwidthSpeedLimit": 10,
  "bandwidthSpeedLimitUnit": "MbytePerSec",
  "flrWithoutAdminPrivilegesAllowed": true
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupAgentSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "disableScheduledBackups": true,
  "disableControlPanelNotification": true,
  "disableBackupOverMeteredConnection": true,
  "disableScheduleWakeup": false,
  "throttleBackupActivity": true,
  "restrictVpnConnections": false,
  "limitBandwidthConsumption": true,
  "bandwidthSpeedLimit": 10,
  "bandwidthSpeedLimitUnit": "MbytePerSec",
  "flrWithoutAdminPrivilegesAllowed": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Modify Veeam Agent for Microsoft Windows Settings",
        "description": "Modifies settings configured for Veeam Agent for Microsoft Windows with the specified UID.",
        "operationId": "PatchBackupAgentSettings",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": 2,
    "path": "/BandwidthSpeedLimit",
    "op": "replace"
  },
  {
    "value": true,
    "path": "/LimitBandwidthConsumption",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupAgentSettings"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "disableScheduledBackups": false,
  "disableControlPanelNotification": false,
  "disableBackupOverMeteredConnection": true,
  "disableScheduleWakeup": false,
  "throttleBackupActivity": true,
  "restrictVpnConnections": false,
  "limitBandwidthConsumption": true,
  "bandwidthSpeedLimit": 2,
  "bandwidthSpeedLimitUnit": "MbytePerSec",
  "flrWithoutAdminPrivilegesAllowed": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/BackupAgentSettings"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Policies Assigned to All Veeam Agents for Microsoft Windows",
        "description": "Returns a collection resource representation of all backup policies assigned to Veeam Agents for Microsoft Windows.",
        "operationId": "GetAllBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": "-"
  },
  {
    "configUid": "215b8be7-3be5-40c5-b56d-f42c4eed2e47",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "backupPolicyUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": 1,
    "assignedDate": "2021-08-15T10:05:11.5262288+02:00",
    "assignedBy": "VSPCSRV\\Administrator"
  },
  {
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "status": "Applied",
    "isCustom": true,
    "isOutOfDate": true,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": "2021-08-15T08:42:43.7094203+02:00",
    "assignedBy": "-"
  },
  {
    "configUid": "215b8be7-3be5-40c5-b56d-f42c4eed2e47",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": 1,
    "assignedDate": "2021-08-15T10:02:32.4118073+02:00",
    "assignedBy": "VSPCSRV\\Administrator"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Policies Assigned to Veeam Agent for Microsoft Windows",
        "description": "Returns a collection resource representation of all backup policies assigned to Veeam Agent for Microsoft Windows with the specified UID.",
        "operationId": "GetBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "status": "Applied",
    "isCustom": true,
    "isOutOfDate": true,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": "2021-08-15T08:42:43.7094203+02:00",
    "assignedBy": "-"
  },
  {
    "configUid": "215b8be7-3be5-40c5-b56d-f42c4eed2e47",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": 1,
    "assignedDate": "2021-08-15T10:02:32.4118073+02:00",
    "assignedBy": "VSPCSRV\\Administrator"
  },
  {
    "configUid": "1857a63d-3352-4b80-9bfb-a916e3f9a629",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "45df21b6-b0d2-4b8e-887d-d571c713eb29",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": "2021-08-15T10:03:43.899775+02:00",
    "assignedBy": "VSPCSRV\\Administrator"
  },
  {
    "configUid": "9f3bf058-5f78-401b-8067-9b1ede504759",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "backupPolicyUid": "eb004f11-97d8-4941-9af3-ff4ed1d84f9c",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": "2021-08-15T10:37:49+02:00",
    "assignedBy": "VSPCSRV\\Administrator"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Assign Policy to Veeam Agent for Microsoft Windows",
        "description": "Assigns a backup policy to a Veeam Agent for Microsoft Windows with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "AssignPolicyOnBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "policyUid",
            "in": "query",
            "description": "Backup policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get All Veeam Backup Agent Jobs",
        "description": "Returns a collection resource representation of all Veeam backup agent jobs protecting Windows computers.",
        "operationId": "GetBackupAgentJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "d480b8a3-9ec1-636f-8773-f18f944290ac",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "srv9_job",
    "description": "This policy processes user profile folder including all user settings and data.",
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "systemType": "Windows",
    "backupPolicyUid": "c948986f-e275-4eb1-9678-4aae8a6d3925",
    "backupPolicyFailureMessage": null,
    "status": "Running",
    "operationMode": "Workstation",
    "destination": "172.25.48.100",
    "restorePoints": 0,
    "lastRun": "2021-08-16T09:30:00.467+02:00",
    "lastEndTime": null,
    "lastDuration": 42,
    "nextRun": "2021-08-17T09:30:00+02:00",
    "avgDuration": 0,
    "backupMode": "File",
    "targetType": "CloudRepository",
    "isEnabled": true,
    "scheduleType": "Daily",
    "failureMessage": null,
    "backedUpSize": 0
  },
  {
    "instanceUid": "6944a5de-960e-6d07-8643-6d5bf79706fc",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "WServerVolumeCloud_srv3",
    "description": "",
    "configUid": "7cbe1b42-ded9-4aed-b63f-eb7253269ee2",
    "systemType": "Windows",
    "backupPolicyUid": "0d065804-98c4-426e-8a58-1d150db589e7",
    "backupPolicyFailureMessage": null,
    "status": "Running",
    "operationMode": "Server",
    "destination": "172.25.48.100",
    "restorePoints": 0,
    "lastRun": "2021-08-16T09:30:00.573+02:00",
    "lastEndTime": null,
    "lastDuration": 40,
    "nextRun": "2021-08-17T09:30:00+02:00",
    "avgDuration": 0,
    "backupMode": "Volume",
    "targetType": "CloudRepository",
    "isEnabled": true,
    "scheduleType": "Daily",
    "failureMessage": null,
    "backedUpSize": 0
  },
  {
    "instanceUid": "9fe73a5a-0914-602a-ba7a-340a2a15d3f2",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "ServerEntireCloudCustom_win_02",
    "description": "",
    "configUid": "b29ed7fa-5d56-4efd-ba64-8d457518175f",
    "systemType": "Windows",
    "backupPolicyUid": null,
    "backupPolicyFailureMessage": null,
    "status": "Running",
    "operationMode": "Server",
    "destination": "172.25.48.100",
    "restorePoints": 0,
    "lastRun": "2021-08-16T09:31:15.29+02:00",
    "lastEndTime": null,
    "lastDuration": 37,
    "nextRun": "2021-08-17T09:30:00+02:00",
    "avgDuration": 0,
    "backupMode": "EntireComputer",
    "targetType": "CloudRepository",
    "isEnabled": true,
    "scheduleType": "Daily",
    "failureMessage": null,
    "backedUpSize": 0
  },
  {
    "instanceUid": "77ab563d-b72b-65d1-af77-699db56afda8",
    "backupAgentUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "organizationUid": "d3eb9415-1e9d-44b2-922c-44337981af65",
    "name": "Windows server win_02",
    "description": "Created by VSPC\\Administrator at 5/30/2019 4:30 PM.",
    "configUid": "c0d6c588-40ca-4887-8568-7410fc16f77e",
    "systemType": "Windows",
    "backupPolicyUid": null,
    "backupPolicyFailureMessage": null,
    "status": "Success",
    "operationMode": "Workstation",
    "destination": "C:\\1\\",
    "restorePoints": 8,
    "lastRun": "2021-03-08T00:30:01.25+01:00",
    "lastEndTime": "2021-03-08T00:34:31.94+01:00",
    "lastDuration": 270,
    "nextRun": "2021-08-17T00:30:00+02:00",
    "avgDuration": 736,
    "backupMode": "File",
    "targetType": "LocalFolder",
    "isEnabled": true,
    "scheduleType": "Daily",
    "failureMessage": "",
    "backedUpSize": 2330656768
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/jobs/{backupAgentJobUid}/start": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Start Veeam Backup Agent Job",
        "description": "Starts a Veeam backup agent job with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "StartBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam backup agent job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/{backupAgentUid}/jobs/{backupAgentJobUid}/stop": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Stop Veeam Backup Agent Job",
        "description": "Stops a Veeam backup agent job with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "StopBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam backup agent job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Jobs for All Veeam Agents for Microsoft Windows",
        "description": "Returns a collection resource representation of all Veeam backup agent jobs protecting Windows computers.",
        "operationId": "GetWindowsBackupAgentJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c8f2fda0-baae-6423-9ccb-b91af63ce24a",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "Windows workstation - Personal files_rb2srv",
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "backupPolicyFailureMessage": null,
    "status": "Running",
    "operationMode": "Workstation",
    "destination": "cloudrepo03",
    "restorePoints": 1,
    "lastRun": "2021-08-15T09:30:00.163+02:00",
    "lastEndTime": "2021-08-15T09:58:30.903+02:00",
    "lastDuration": 1710,
    "nextRun": "2021-08-16T09:30:00+02:00",
    "avgDuration": 1710,
    "backupMode": "File",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "Daily",
    "scheduleEvents": [],
    "lastModifiedDate": null,
    "lastModifiedBy": "-",
    "failureMessage": null,
    "backedUpSize": 2771640320,
    "freeSpace": 51338197704
  },
  {
    "instanceUid": "8468b5b9-d5dd-654e-b2e5-f01c1de943c6",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "WServerVolumeCloud_rb2em",
    "configUid": "215b8be7-3be5-40c5-b56d-f42c4eed2e47",
    "backupPolicyUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "backupPolicyFailureMessage": null,
    "status": "None",
    "operationMode": "Server",
    "destination": "cloudrepo03",
    "restorePoints": 0,
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "nextRun": "2021-08-16T09:30:00+02:00",
    "avgDuration": 0,
    "backupMode": "Volume",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "Daily",
    "scheduleEvents": [],
    "lastModifiedDate": "2021-08-15T10:05:11.5262288+02:00",
    "lastModifiedBy": "VSPCSRV\\Administrator",
    "failureMessage": null,
    "backedUpSize": null,
    "freeSpace": null
  },
  {
    "instanceUid": "89c6a40d-7bfe-6e2e-acc7-8cbdad5caeeb",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "ServerEntireCloud_Custom",
    "configUid": "945073c0-724b-42bc-8439-34a4f537a7f0",
    "backupPolicyUid": null,
    "backupPolicyFailureMessage": null,
    "status": "None",
    "operationMode": "Workstation",
    "destination": "Cloud Repository default",
    "restorePoints": 0,
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "nextRun": null,
    "avgDuration": 0,
    "backupMode": "EntireComputer",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "scheduleEvents": [],
    "lastModifiedDate": "2021-08-15T10:08:02+02:00",
    "lastModifiedBy": "VSPCSRV\\Administrator",
    "failureMessage": null,
    "backedUpSize": null,
    "freeSpace": null
  },
  {
    "instanceUid": "1c78eb81-fc40-6c47-af92-dde680dea413",
    "backupAgentUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "srv3 Job",
    "configUid": "c0d6c588-40ca-4887-8568-7410fc16f77e",
    "backupPolicyUid": null,
    "backupPolicyFailureMessage": null,
    "status": "Success",
    "operationMode": "Workstation",
    "destination": "C:\\1\\",
    "restorePoints": 8,
    "lastRun": "2021-03-08T00:30:01.25+01:00",
    "lastEndTime": "2021-03-08T00:34:31.94+01:00",
    "lastDuration": 270,
    "nextRun": "2021-08-16T00:30:00+02:00",
    "avgDuration": 736,
    "backupMode": "File",
    "targetType": "Local",
    "isEnabled": true,
    "scheduleType": "Daily",
    "scheduleEvents": [],
    "lastModifiedDate": null,
    "lastModifiedBy": "-",
    "failureMessage": "",
    "backedUpSize": 2330656768,
    "freeSpace": 26032812032
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get All Jobs for Veeam Agent for Microsoft Windows",
        "description": "Returns a collection resource representation of all jobs configured for Veeam backup agent for Microsoft Windows with the specified UID.",
        "operationId": "GetWindowsBackupAgentJobsByAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/WindowsBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c8f2fda0-baae-6423-9ccb-b91af63ce24a",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "Windows workstation - Personal files_rb2srv",
    "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
    "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
    "backupPolicyFailureMessage": null,
    "status": "Running",
    "operationMode": "Workstation",
    "destination": "cloudrepo03",
    "restorePoints": 1,
    "lastRun": "2021-08-15T09:30:00.163+02:00",
    "lastEndTime": "2021-08-15T09:58:30.903+02:00",
    "lastDuration": 1710,
    "nextRun": "2021-08-16T09:30:00+02:00",
    "avgDuration": 1710,
    "backupMode": "File",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "Daily",
    "scheduleEvents": [],
    "lastModifiedDate": null,
    "lastModifiedBy": "-",
    "failureMessage": null,
    "backedUpSize": 2771640320,
    "freeSpace": 51338197704
  },
  {
    "instanceUid": "8468b5b9-d5dd-654e-b2e5-f01c1de943c6",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "WServerVolumeCloud_rb2em",
    "configUid": "215b8be7-3be5-40c5-b56d-f42c4eed2e47",
    "backupPolicyUid": "088e26c2-207c-464b-b847-57300434ab5b",
    "backupPolicyFailureMessage": null,
    "status": "None",
    "operationMode": "Server",
    "destination": "cloudrepo03",
    "restorePoints": 0,
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "nextRun": "2021-08-16T09:30:00+02:00",
    "avgDuration": 0,
    "backupMode": "Volume",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "Daily",
    "scheduleEvents": [],
    "lastModifiedDate": "2021-08-15T10:05:11.5262288+02:00",
    "lastModifiedBy": "VSPCSRV\\Administrator",
    "failureMessage": null,
    "backedUpSize": null,
    "freeSpace": null
  },
  {
    "instanceUid": "89c6a40d-7bfe-6e2e-acc7-8cbdad5caeeb",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "ServerEntireCloud_Custom",
    "configUid": "945073c0-724b-42bc-8439-34a4f537a7f0",
    "backupPolicyUid": null,
    "backupPolicyFailureMessage": null,
    "status": "None",
    "operationMode": "Workstation",
    "destination": "cloudrepo03",
    "restorePoints": 0,
    "lastRun": null,
    "lastEndTime": null,
    "lastDuration": null,
    "nextRun": null,
    "avgDuration": 0,
    "backupMode": "EntireComputer",
    "targetType": "Cloud",
    "isEnabled": true,
    "scheduleType": "NotScheduled",
    "scheduleEvents": [],
    "lastModifiedDate": "2021-08-15T10:08:02+02:00",
    "lastModifiedBy": "VSPCSRV\\Administrator",
    "failureMessage": null,
    "backedUpSize": null,
    "freeSpace": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs/{backupAgentJobUid}": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Job for Veeam Agent for Microsoft Windows",
        "description": "Returns a resource representation of a Veeam Agent for Microsoft Windows job with the specified UID.",
        "operationId": "GetWindowsBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupAgentJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c8f2fda0-baae-6423-9ccb-b91af63ce24a",
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "name": "Windows workstation - Personal files_rb2srv",
  "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
  "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
  "backupPolicyFailureMessage": null,
  "status": "Running",
  "operationMode": "Workstation",
  "destination": "cloudrepo03",
  "restorePoints": 1,
  "lastRun": "2021-08-15T09:30:00.163+02:00",
  "lastEndTime": "2021-08-15T09:58:30.903+02:00",
  "lastDuration": 1710,
  "nextRun": "2021-08-16T09:30:00+02:00",
  "avgDuration": 1710,
  "backupMode": "File",
  "targetType": "Cloud",
  "isEnabled": true,
  "scheduleType": "Daily",
  "scheduleEvents": [],
  "lastModifiedDate": null,
  "lastModifiedBy": "-",
  "failureMessage": null,
  "backedUpSize": 2771640320,
  "freeSpace": 51338197704
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Delete Job for Veeam Agent for Microsoft Windows",
        "description": "Deletes a Veeam Agent for Microsoft Windows job with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "DeleteWindowsBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeRestorePoints",
            "in": "query",
            "description": "Indicates whether restore points must be removed.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Modify Job for Veeam Agent for Microsoft Windows",
        "description": "Modifies a Veeam Agent for Microsoft Windows job with the specified UID.",
        "operationId": "PatchWindowsBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Running",
    "path": "/status",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsBackupAgentJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c8f2fda0-baae-6423-9ccb-b91af63ce24a",
  "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
  "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
  "name": "Windows workstation - Personal files_rb2srv",
  "configUid": "4610eb17-b41c-4cc5-81d1-938ee6d89b7a",
  "backupPolicyUid": "c3fa8176-ccbf-4d82-b7c9-77d147556f8f",
  "backupPolicyFailureMessage": null,
  "status": "Running",
  "operationMode": "Workstation",
  "destination": "cloudrepo03",
  "restorePoints": 1,
  "lastRun": "2021-08-15T09:30:00.163+02:00",
  "lastEndTime": "2021-08-15T09:58:30.903+02:00",
  "lastDuration": 1710,
  "nextRun": "2021-08-16T09:30:00+02:00",
  "avgDuration": 1710,
  "backupMode": "File",
  "targetType": "Cloud",
  "isEnabled": true,
  "scheduleType": "Daily",
  "scheduleEvents": [],
  "lastModifiedDate": null,
  "lastModifiedBy": "-",
  "failureMessage": null,
  "backedUpSize": 2771640320,
  "freeSpace": 51338197704
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsBackupAgentJob"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs/{backupAgentJobUid}/start": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Start Job for Veeam Agent for Microsoft Windows",
        "description": "Starts a Veeam Agent for Microsoft Windows job with the specified UID. Returns a positive response when the management agent receives the reboot task and not when the task is executed.",
        "operationId": "StartWindowsBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs/{backupAgentJobUid}/stop": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Stop Job for Veeam Agent for Microsoft Windows",
        "description": "Stops a Veeam Agent for Microsoft Windows job with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "StopWindowsBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs/{backupAgentJobUid}/configuration": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Configuration of Job for Veeam Agent for Microsoft Windows",
        "description": "Returns a resource representation of a configuration of the Veeam Agent for Microsoft Windows job with the specified UID.",
        "operationId": "GetWindowsBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerEntireCloud_Custom",
  "description": "",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "admin",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "computerLevelOptions": {
        "includeUsbDrives": true
      },
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "cloudRepository": {
        "backupCacheSettings": null
      }
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "RestorePoints",
        "retentionCount": 7
      },
      "scheduleSetting": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": null,
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        },
        "backupWindow": null
      },
      "indexingSettings": {
        "indexingType": "Everything",
        "includedFolders": null,
        "excludedFolders": [
          "%ProgramFiles%",
          "%ProgramFiles(x86)%",
          "%ProgramW6432%",
          "%TEMP%",
          "%windir%"
        ]
      },
      "applicationAwareProcessingSettings": {
        "enabled": false,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": null,
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": null,
          "archivedLogsRetentionMode": "DoNotDeleteArchivedLogs",
          "backupLifeTimeHours": 24,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": false,
          "periodicallyBackupSetting": null
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "Disabled",
          "preFreezeScript": null,
          "postThawScript": null,
          "credentials": null
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Optimal",
        "storageOptimization": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": false,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Modify Configuration of Job for Veeam Agent for Microsoft Windows",
        "description": "Modifies a configuration of the Veeam Agent for Microsoft Windows job with the specified UID.",
        "operationId": "PatchWindowsBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "Everything",
    "path": "/jobconfiguration/servermodesettings/indexingsettings/indexingtype",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerEntireCloud_Custom",
  "description": "",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "admin",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "computerLevelOptions": {
        "includeUsbDrives": true
      },
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "cloudRepository": {
        "backupCacheSettings": null
      }
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "RestorePoints",
        "retentionCount": 7
      },
      "scheduleSetting": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": null,
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        },
        "backupWindow": null
      },
      "indexingSettings": {
        "indexingType": "Everything",
        "includedFolders": null,
        "excludedFolders": [
          "%ProgramFiles%",
          "%ProgramFiles(x86)%",
          "%ProgramW6432%",
          "%TEMP%",
          "%windir%"
        ]
      },
      "applicationAwareProcessingSettings": {
        "enabled": false,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": null,
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": null,
          "archivedLogsRetentionMode": "DoNotDeleteArchivedLogs",
          "backupLifeTimeHours": 24,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": false,
          "periodicallyBackupSetting": null
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "Disabled",
          "preFreezeScript": null,
          "postThawScript": null,
          "credentials": null
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Optimal",
        "storageOptimization": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": false,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/windows/{backupAgentUid}/jobs/configuration": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Create Configuration of Job for Veeam Agent for Microsoft Windows",
        "description": "Creates a configuration of a Veeam backup agent job protecting a Windows computer with the specified UID.",
        "operationId": "CreateWindowsBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Microsoft Windows UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Configuration of a Veeam Agent for Microsoft Windows job",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
              },
              "example": {
  "name": "ServerEntireCloud_Custom",
  "description": "Job configuration for Windows computers.",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "alpha\\administrator",
    "password": "Password1"
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "computerLevelOptions": {
        "includeUsbDrives": true
      },
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "cloudRepository": {
        "backupCacheSettings": {
          "location": "C:\\string\\",
          "maximumSizeGb": 1
        }
      }
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "RestorePoints",
        "retentionCount": 7
      },
      "scheduleSetting": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": {
          "backupWindowSettings": {
            "scheduleWindow": null,
            "shiftForMinutes": 0
          }
        },
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        },
        "backupWindow": null
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": false,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": null,
        "oracleTransactionLogHandlingSettings": null,
        "sharePointAccountSettings": null,
        "scriptSettings": null
      }
    },
    "workstationModeSettings": {
      "scheduleSetting": {
        "periodicalScheduleEnabled": true,
        "periodicalScheduleSettings": {
          "dailyScheduleSettings": {
            "time": "00:30",
            "dailyMode": "Everyday",
            "specificDays": null
          },
          "shutdownAction": "SkipBackup",
          "finalizingAction": "KeepRunning"
        },
        "eventTriggerSettings": {
          "backupOnLock": false,
          "backupOnLogOff": false,
          "backupOnTargetConnection": false,
          "ejectTargetOnBackupComplete": false,
          "backupNotOften": 2,
          "notOftenTimeUnit": "Hours"
        }
      },
      "retentionSettings": {
        "retentionDays": 7
      }
    },
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Optimal",
        "storageOptimization": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null
      },
      "scheduleSettings": null,
      "maintenanceSettings": null
    },
    "gfsRetentionSettings": null
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/WindowsCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerEntireCloud_Custom",
  "description": "Job configuration for Windows computers.",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "alpha\\administrator",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "computerLevelOptions": {
        "includeUsbDrives": true
      },
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "cloudRepository": {
        "backupCacheSettings": {
          "location": "C:\\string\\",
          "maximumSizeGb": 1
        }
      }
    },
    "serverModeSettings": {
      "retentionSettings": {
        "retentionMode": "RestorePoints",
        "retentionCount": 7
      },
      "scheduleSetting": {
        "scheduleType": "Daily",
        "dailyScheduleSettings": {
          "time": "00:30",
          "dailyMode": "Everyday",
          "specificDays": null
        },
        "monthlyScheduleSettings": null,
        "periodicalScheduleSettings": null,
        "continuousScheduleSettings": null,
        "retrySettings": {
          "enabled": true,
          "retryTimes": 3,
          "waitTimeoutMinutes": 10
        },
        "backupWindow": null
      },
      "indexingSettings": null,
      "applicationAwareProcessingSettings": {
        "enabled": false,
        "transactionLogProcessingMode": "ProcessTransactionLogsWithJob",
        "sqlServerTransactionLogHandlingSettings": {
          "credentials": null,
          "logsProcessingMode": "TruncateLogs",
          "periodicallyBackupSetting": null
        },
        "oracleTransactionLogHandlingSettings": {
          "credentials": null,
          "archivedLogsRetentionMode": "DoNotDeleteArchivedLogs",
          "backupLifeTimeHours": 24,
          "backupSizeThresholdGb": 10,
          "backupLogsPeriodically": false,
          "periodicallyBackupSetting": null
        },
        "sharePointAccountSettings": null,
        "scriptSettings": {
          "mode": "Disabled",
          "preFreezeScript": null,
          "postThawScript": null,
          "credentials": null
        }
      }
    },
    "workstationModeSettings": null,
    "advancedSettings": {
      "backupStorage": {
        "compressionLevel": "Optimal",
        "storageOptimization": "Local",
        "encryptionEnabled": false,
        "password": null,
        "passwordHint": null
      },
      "scheduleSettings": {
        "syntheticFullOnDays": null,
        "activeFullSettings": null
      },
      "maintenanceSettings": {
        "backupHealthCheckSettings": null,
        "fullBackupFileMaintenanceSettings": {
          "enableDeletedFilesRetention": false,
          "removeDeletedItemsDataAfter": 30,
          "defragmentAndCompactFullBackupFileSettings": null
        }
      }
    },
    "gfsRetentionSettings": null
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Veeam Agents for Linux",
        "description": "Returns a collection resource representation of all Veeam Agents for Linux.",
        "operationId": "GetLinuxBackupAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxBackupAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "managementAgentUid": "ce6ad397-de9c-419f-af6c-57c56fc7d648"
  },
  {
    "instanceUid": "4211bca5-448b-b58b-d05d-e4e39b9ef349",
    "managementAgentUid": "acedb1b8-e677-405a-92c5-6e15cece3b0e"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Veeam Agent for Linux",
        "description": "Returns a resource representation of a Veeam Agent for Linux with the specified UID.",
        "operationId": "GetLinuxBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxBackupAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4211bca5-448b-b58b-d05d-e4e39b9ef349",
  "managementAgentUid": "acedb1b8-e677-405a-92c5-6e15cece3b0e"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/update": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Update Veeam Agent for Linux",
        "description": "Updates a Veeam Agent for Linux with the specified UID.",
        "operationId": "UpdateLinuxBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeploymentInformation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "deployTaskUid": "9fc2b022-be46-4971-8eb2-83bbfaba0163",
  "deployTaskId": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Policies Assigned to All Veeam Agents for Linux",
        "description": "Returns a collection resource representation of all backup policies assigned to Veeam Agents for Linux.",
        "operationId": "GetAllLinuxBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "ca7d562a-eb7c-4585-94f7-927f4e8a84ac",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "backupPolicyUid": "a52f970a-8862-477a-a319-56a2e1e49aee",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  },
  {
    "configUid": "74a8688c-8d26-4c74-9f99-b90fdd8f1c34",
    "backupAgentUid": "4211bca5-448b-b58b-d05d-e4e39b9ef349",
    "backupPolicyUid": "51486898-cd12-4a12-9a8c-575b493b2e42",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  },
  {
    "configUid": "ca7d562a-eb7c-4585-94f7-927f4e8a84ac",
    "backupAgentUid": "4211bca5-448b-b58b-d05d-e4e39b9ef349",
    "backupPolicyUid": "a52f970a-8862-477a-a319-56a2e1e49aee",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Policies Assigned to Veeam Agent for Linux",
        "description": "Returns a collection resource representation of all backup policies assigned to a Veeam Agent for Linux with the specified UID.",
        "operationId": "GetLinuxBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "f51654d0-9ff2-43d8-8011-cc8eab11334b",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "backupPolicyUid": "bc9a64fd-e6fb-43d8-8d73-41389d3ebb8f",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  },
  {
    "configUid": "ca7d562a-eb7c-4585-94f7-927f4e8a84ac",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "backupPolicyUid": "2884cba6-f424-4033-8f29-35798dc8064d",
    "status": "Applied",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": null,
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Assign Policy to Veeam Agent for Linux",
        "description": "Assigns a backup policy to a Veeam Agent for Linux with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "AssignLinuxPolicyOnBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "policyUid",
            "in": "query",
            "description": "Backup policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Jobs for All Veeam Agents for Linux",
        "description": "Returns a collection resource representation of all Veeam Agent jobs protecting Linux computers.",
        "operationId": "GetLinuxBackupAgentJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "1aa3ee14-ef2c-6664-a90a-f96486373207",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "LServerEntireCloud_r2val"
  },
  {
    "instanceUid": "c4197b31-c60d-6124-bf06-61bf800d863e",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "Linux server - Entire computer_r2val"
  },
  {
    "instanceUid": "c87f0074-9c6c-67cc-9b3c-db5b866a03f4",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "ServerVolumeCloud_Job"
  },
  {
    "instanceUid": "59295c6e-e5ce-6cf0-8e55-1f5139393a56",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "ServerEntireCloud_Custom"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get All Jobs for Veeam Agent for Linux",
        "description": "Returns a collection resource representation of all jobs configured for a Veeam Agent for Linux with the specified UID.",
        "operationId": "GetLinuxBackupAgentJobsByAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/LinuxBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "1aa3ee14-ef2c-6664-a90a-f96486373207",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "LServerEntireCloud_r2val"
  },
  {
    "instanceUid": "c4197b31-c60d-6124-bf06-61bf800d863e",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "Linux server - Entire computer_r2val"
  },
  {
    "instanceUid": "c87f0074-9c6c-67cc-9b3c-db5b866a03f4",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "ServerVolumeCloud_Job"
  },
  {
    "instanceUid": "59295c6e-e5ce-6cf0-8e55-1f5139393a56",
    "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
    "name": "ServerEntireCloud_Custom"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs/{backupAgentJobUid}": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Job for Veeam Agent for Linux",
        "description": "Returns a resource representation of a Veeam Agent for Linux job with the specified UID.",
        "operationId": "GetLinuxBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxBackupAgentJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "1aa3ee14-ef2c-6664-a90a-f96486373207",
  "backupAgentUid": "4211e60c-c4c1-3b58-ae37-442f5194c977",
  "name": "LServerEntireCloud_r2val"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Delete Job for Veeam Agent for Linux",
        "description": "Deletes a Veeam Agent for Linux job with the specified UID. Returns a positive response if the restart task is added to the internal queue and not when the task is executed.",
        "operationId": "DeleteLinuxBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeRestorePoints",
            "in": "query",
            "description": "Defines whether restore points must be deleted.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs/{backupAgentJobUid}/start": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Start Job for Veeam Agent for Linux",
        "description": "Starts a Veeam Agent for Linux job with the specified UID. Returns a positive response if the task is added to the internal queue and not when the task is executed.",
        "operationId": "StartLinuxBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs/{backupAgentJobUid}/stop": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Stop Job for Veeam Agent for Linux",
        "description": "Stops a Veeam Agent for Linux job with the specified UID. Returns a positive response if the task is added to the internal queue and not when the task is executed.",
        "operationId": "StopLinuxBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs/{backupAgentJobUid}/configuration": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Configuration of Job for Veeam Agent for Linux",
        "description": "Returns a resource representation of Veeam Agent for Linux job configuration with the specified UID.",
        "operationId": "GetLinuxBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerVolumeCloud_Job",
  "description": "",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "admin",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "Device",
            "path": "sda"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home"
      ]
    },
    "scriptSettings": null,
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "00:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "NotScheduled",
        "dayOfMonth": null,
        "weeklyOnDays": null
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 9,
          "lifeTimeHours": 23
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "patch": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Modify Configuration of Job for Veeam Agent for Linux",
        "description": "Modifies Veeam Agent for Linux job configuration with the specified UID.",
        "operationId": "PatchLinuxBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Linux job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "ExceptSpecifiedFolders",
    "path": "/jobconfiguration/indexingsettings/indexingtype",
    "op": "replace"
  },
  {
    "value": "home",
    "path": "/jobconfiguration/indexingsettings/excludedfolders/0",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerVolumeCloud_Job",
  "description": "",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "restv3t1",
    "password": null
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "Volume",
      "volumeLevelOptions": {
        "volumes": [
          {
            "volumeType": "Device",
            "path": "sda"
          }
        ]
      },
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": false,
      "removeDeletedItemsDataAfter": 30
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": {
      "indexingType": "ExceptSpecifiedFolders",
      "includedFolders": null,
      "excludedFolders": [
        "home"
      ]
    },
    "scriptSettings": null,
    "retentionSettings": {
      "restorePointsCount": 7
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "00:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "NotScheduled",
        "dayOfMonth": null,
        "weeklyOnDays": null
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 9,
          "lifeTimeHours": 23
        },
        "useOracleCredentials": true
      },
      "mySqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": ""
      },
      "postgreSqlAapSettings": {
        "processingType": "TryProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/linux/{backupAgentUid}/jobs/configuration": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Create Configuration of Job for Veeam Agent for Linux",
        "description": "Creates configuration of a Veeam backup agent job protecting Linux computer with the specified UID.",
        "operationId": "CreateLinuxBackupAgentJobConfiguration",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Linux UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Veeam Agent for Linux job configuration",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
              },
              "example": {
  "name": "ServerEntireCloud_Custom",
  "description": "Linux Policy",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "admin",
    "password": "Password1"
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": true,
      "removeDeletedItemsDataAfter": 5
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": null,
    "scriptSettings": {
      "enabled": false,
      "preJobScript": null,
      "postJobScript": null,
      "preFreezeScript": null,
      "postThawScript": null
    },
    "retentionSettings": {
      "restorePointsCount": 10
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "03:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "Monthly",
        "dayOfMonth": 2,
        "weeklyOnDays": [
          "Saturday"
        ]
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "DisableProcess",
        "credentials": null,
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 1,
          "lifeTimeHours": 1
        },
        "useOracleCredentials": false
      },
      "mySqlAapSettings": {
        "processingType": "DisableProcess",
        "credentials": {
          "username": "string",
          "password": "string"
        },
        "authType": "MySQLPassword",
        "passwordFilePath": null
      },
      "postgreSqlAapSettings": {
        "processingType": "DisableProcess",
        "credentials": {
          "username": "string",
          "password": "string"
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LinuxCustomJobConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "name": "ServerEntireCloud_Custom",
  "description": "Linux Policy",
  "operationMode": "Server",
  "cloudRepositoryConnectionSettings": {
    "backupResourceUid": "5b03d390-813f-40bc-886b-011de50b65d7",
    "username": "admin",
    "password": "Password1"
  },
  "jobConfiguration": {
    "backupSource": {
      "backupMode": "EntireComputer",
      "volumeLevelOptions": null,
      "fileLevelOptions": null
    },
    "backupTarget": {
      "targetType": "CloudRepository",
      "localPath": null,
      "sharedFolder": null,
      "backupRepository": null,
      "enableDeletedFilesRetention": true,
      "removeDeletedItemsDataAfter": 5
    },
    "backupStorage": {
      "compressionLevel": "Optimal",
      "blockSize": "Local",
      "encryptionEnabled": false,
      "password": null,
      "passwordHint": null,
      "isSnapshotRequired": true
    },
    "indexingSettings": null,
    "scriptSettings": {
      "enabled": false,
      "preJobScript": null,
      "postJobScript": null,
      "preFreezeScript": null,
      "postThawScript": null
    },
    "retentionSettings": {
      "restorePointsCount": 10
    },
    "scheduleSettings": {
      "scheduleType": "Daily",
      "dailyScheduleSettings": {
        "time": "03:30",
        "dailyMode": "Everyday",
        "specificDays": null
      },
      "monthlyScheduleSettings": null,
      "periodicallyScheduleSettings": null,
      "activeFullSettings": {
        "scheduleType": "Monthly",
        "dayOfMonth": 2,
        "weeklyOnDays": [
          "Saturday"
        ]
      },
      "retrySettings": {
        "enabled": true,
        "retryTimes": 3,
        "waitTimeoutMinutes": 10
      }
    },
    "applicationAwareProcessingSettings": {
      "oracleAapSettings": {
        "processingType": "DisableProcess",
        "credentials": null,
        "truncationConfig": {
          "truncationMode": "TruncateDisabled",
          "sizeGB": 1,
          "lifeTimeHours": 1
        },
        "useOracleCredentials": false
      },
      "mySqlAapSettings": {
        "processingType": "DisableProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "MySQLPassword",
        "passwordFilePath": null
      },
      "postgreSqlAapSettings": {
        "processingType": "DisableProcess",
        "credentials": {
          "username": "string",
          "password": null
        },
        "authType": "PSQLPassword"
      }
    }
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/mac": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Veeam Agents for Mac",
        "description": "Returns a collection resource representation of all Veeam Agents for Mac.",
        "operationId": "GetMacBackupAgents",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MacBackupAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "managementAgentUid": "ceddfb45-bdb5-4c87-943d-c921a40a5a08"
  },
  {
    "instanceUid": "42164e26-7a64-ff0a-af1b-f52ca8eb0381",
    "managementAgentUid": "a2a8a2b9-ae31-460e-bd11-9d3a6c27ed0a"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Veeam Agent for Mac",
        "description": "Returns a resource representation of a Veeam Agent for Mac with the specified UID.",
        "operationId": "GetMacBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/MacBackupAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "42165496-893b-4877-4e6f-886e5c0cb873",
  "managementAgentUid": "ceddfb45-bdb5-4c87-943d-c921a40a5a08"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/update": {
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Update Veeam Agent for Mac",
        "description": "Updates a Veeam Agent for Mac with the specified UID.",
        "operationId": "UpdateMacBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeploymentInformation"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "deployTaskUid": "9fc2b022-be46-4971-8eb2-83bbfaba0163",
  "deployTaskId": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get Policies Assigned to All Veeam Agents for Mac",
        "description": "Returns a collection resource representation of all backup policies assigned to Veeam Agents for Mac.",
        "operationId": "GetAllMacBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "9d832db0-ffe5-4ec4-8a18-6f6b5a07e530",
    "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "backupPolicyUid": "55d690e3-e189-407b-8370-2a3608443bef",
    "status": "Warning",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": "Full disk access privileges are not granted to the backup agent. Backup jobs may fail, or some sources may be skipped from backup.",
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  },
  {
    "configUid": "9d832db0-ffe5-4ec4-8a18-6f6b5a07e530",
    "backupAgentUid": "42164e26-7a64-ff0a-af1b-f52ca8eb0381",
    "backupPolicyUid": "55d690e3-e189-407b-8370-2a3608443bef",
    "status": "Warning",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": "Full disk access privileges are not granted to the backup agent. Backup jobs may fail, or some sources may be skipped from backup.",
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/assignedPolicies": {
      "get": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Get All Policies Assigned to Veeam Agent for Mac",
        "description": "Returns a collection resource representation of all backup policies assigned to a Veeam Agent for Mac with the specified UID.",
        "operationId": "GetMacBackupAgentAssignedPolicies",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupAgentAssignedBackupPolicy"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "configUid": "9d832db0-ffe5-4ec4-8a18-6f6b5a07e530",
    "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "backupPolicyUid": "55d690e3-e189-407b-8370-2a3608443bef",
    "status": "Warning",
    "isCustom": false,
    "isOutOfDate": false,
    "backupPolicyFailureMessage": "Full disk access privileges are not granted to the backup agent. Backup jobs may fail, or some sources may be skipped from backup.",
    "backupPolicyRevision": null,
    "assignedDate": null,
    "assignedBy": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "post": {
        "tags": [
          "Backup Agents"
        ],
        "summary": "Assign Policy to Veeam Agent for Mac",
        "description": "Assigns a backup policy to a Veeam Agent for Mac with the specified UID. Returns a positive response when the management agent receives the task and not when the task is executed.",
        "operationId": "AssignMacPolicyOnBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "policyUid",
            "in": "query",
            "description": "Backup policy UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Jobs for All Veeam Agents for Mac",
        "description": "Returns a collection resource representation of all Veeam Agent for Mac jobs.",
        "operationId": "GetMacBackupAgentJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MacBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "34711175-fd29-6570-abc4-bf335cf06ea6",
    "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "name": "Mac workstation - Users directory"
  },
  {
    "instanceUid": "4ea0df5d-7c51-66ee-b507-bb98e37cd7e5",
    "backupAgentUid": "42164e26-7a64-ff0a-af1b-f52ca8eb0381",
    "name": "Mac workstation - Users directory-2"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/jobs": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get All Jobs for Veeam Agent for Mac",
        "description": "Returns a collection resource representation of all jobs configured for Veeam Agent for Mac with the specified UID.",
        "operationId": "GetMacBackupAgentJobsByAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MacBackupAgentJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "34711175-fd29-6570-abc4-bf335cf06ea6",
    "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "name": "Mac workstation - Users directory"
  },
  {
    "instanceUid": "4ea0df5d-7c51-66ee-b507-bb98e37cd7e5",
    "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
    "name": "Mac workstation - Users directory-2"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/jobs/{backupAgentJobUid}": {
      "get": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Get Job for Veeam Agent for Mac",
        "description": "Returns a resource representation of a Veeam Agent for Mac job with the specified UID.",
        "operationId": "GetMacBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Mac job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/MacBackupAgentJob"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "34711175-fd29-6570-abc4-bf335cf06ea6",
  "backupAgentUid": "42165496-893b-4877-4e6f-886e5c0cb873",
  "name": "Mac workstation - Users directory"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Delete Job for Veeam Agent for Mac",
        "description": "Deletes a Veeam Agent for Mac job with the specified UID. Returns a positive response if the task is added to the internal queue and not when the task is executed.",
        "operationId": "DeleteMacBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Mac job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "removeRestorePoints",
            "in": "query",
            "description": "Defines whether restore point must be deleted.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/jobs/{backupAgentJobUid}/start": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Start Job for Veeam Agent for Mac",
        "description": "Starts a Veeam Agent for Mac job with the specified UID. Returns a positive response if the task is added to the internal queue and not when the task is executed.",
        "operationId": "StartMacBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Mac job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/backupAgents/mac/{backupAgentUid}/jobs/{backupAgentJobUid}/stop": {
      "post": {
        "tags": [
          "Backup Agent Jobs"
        ],
        "summary": "Stop Job for Veeam Agent for Mac",
        "description": "Stops a Veeam Agent for Mac job with the specified UID. Returns a positive response if the task is added to the internal queue and not when the task is executed.",
        "operationId": "StopMacBackupAgentJob",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam Agent for Mac UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "backupAgentJobUid",
            "in": "path",
            "description": "Veeam Agent for Mac job UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/sites": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Sites",
        "description": "Returns a collection resource representation of all cloud agents installed on sites.",
        "operationId": "GetSites",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudAgent"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "siteName": "ccsrv1",
    "description": "",
    "managementAgentUid": "d8228217-4ea4-4f4d-a139-4ea82ee1633c"
  },
  {
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "siteName": "ccsrv2",
    "description": "",
    "managementAgentUid": "f248212e-36d4-4af9-8a40-2ebd7f4f717c"
  },
  {
    "siteUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "siteName": "ccsrv3",
    "description": "",
    "managementAgentUid": "394017c2-87ad-4981-9e69-7fbbbe23b0fb"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Site",
        "description": "Returns a resource representation of a cloud agent installed on a site with the specified UID.",
        "operationId": "GetSite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CloudAgent"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "siteName": "ccsrv3",
  "description": "",
  "managementAgentUid": "d8228217-4ea4-4f4d-a139-4ea82ee1633c"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/hardwarePlans": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Hardware Plans",
        "description": "Returns a collection resource representation of all hardware plans.",
        "operationId": "GetBackupHardwarePlans",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupHardwarePlan"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "name": "Hardware plan 1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cpuQuota": 10000,
    "isCpuQuotaUnlimited": false,
    "memoryQuota": 20971520000,
    "isMemoryQuotaUnlimited": false,
    "networkWithInternetQuota": 0,
    "networkWithoutInternetQuota": 1
  },
  {
    "instanceUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
    "name": "Hardware plan 2",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "cpuQuota": 1000,
    "isCpuQuotaUnlimited": false,
    "memoryQuota": 2097152000,
    "isMemoryQuotaUnlimited": false,
    "networkWithInternetQuota": 0,
    "networkWithoutInternetQuota": 1
  },
  {
    "instanceUid": "d784598f-32ae-452c-8886-fd4255944e7c",
    "name": "Hardware plan 3",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "cpuQuota": 1000,
    "isCpuQuotaUnlimited": false,
    "memoryQuota": 2097152000,
    "isMemoryQuotaUnlimited": false,
    "networkWithInternetQuota": 0,
    "networkWithoutInternetQuota": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/hardwarePlans": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Hardware Plans Configured on Site",
        "description": "Returns a collection resource representation of all hardware plans configured on a site with the specified UID.",
        "operationId": "GetBackupHardwarePlansBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupHardwarePlan"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "name": "Hardware plan 1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cpuQuota": 10000,
    "isCpuQuotaUnlimited": false,
    "memoryQuota": 20971520000,
    "isMemoryQuotaUnlimited": false,
    "networkWithInternetQuota": 0,
    "networkWithoutInternetQuota": 1
  },
  {
    "instanceUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
    "name": "Hardware plan 2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "cpuQuota": 1000,
    "isCpuQuotaUnlimited": false,
    "memoryQuota": 2097152000,
    "isMemoryQuotaUnlimited": false,
    "networkWithInternetQuota": 0,
    "networkWithoutInternetQuota": 1
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/hardwarePlans/{instanceUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Hardware Plan",
        "description": "Returns a resource representation of a hardware plan with the specified UID.",
        "operationId": "GetBackupHardwarePlan",
        "parameters": [
          {
            "name": "instanceUid",
            "in": "path",
            "description": "Hardware plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/BackupHardwarePlan"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
  "name": "Hardware plan 1",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "cpuQuota": 10000,
  "isCpuQuotaUnlimited": false,
  "memoryQuota": 20971520000,
  "isMemoryQuotaUnlimited": false,
  "networkWithInternetQuota": 0,
  "networkWithoutInternetQuota": 1
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/hardwarePlans/storages": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Hardware Plan Storage Entities",
        "description": "Returns a collection resource representation of all storage entities in all hardware plans.",
        "operationId": "GetBackupHardwarePlansStorages",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupHardwarePlanStorage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "296f4777-76ab-4058-9201-60e4092a1903",
    "name": "Storage 1",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "quota": 53687091200
  },
  {
    "instanceUid": "24ae949e-a5e0-403e-b2d6-af58439feb03",
    "name": "Storage 2",
    "hardwarePlanUid": "f525464d-acd9-439f-a6a1-58ff55daf380",
    "quota": 53687091200
  },
  {
    "instanceUid": "686a18fa-4364-45d1-b3d2-8dd5c6b2f52e",
    "name": "Storage 3",
    "hardwarePlanUid": "d784598f-32ae-452c-8886-fd4255944e7c",
    "quota": 53687091200
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/hardwarePlans/{instanceUid}/storages": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Hardware Plan Storage Entities",
        "description": "Returns a collection resource representation of all storage entities in a hardware plan with the specified UID.",
        "operationId": "GetBackupHardwarePlanStorages",
        "parameters": [
          {
            "name": "instanceUid",
            "in": "path",
            "description": "Hardware plan UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BackupHardwarePlanStorage"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "296f4777-76ab-4058-9201-60e4092a1903",
    "name": "Storage 1",
    "hardwarePlanUid": "14464dc9-214f-4c5c-b339-d286f2a478a2",
    "quota": 53687091200
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/cloudgatewaypools": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateway Pools",
        "description": "Returns a collection resource representation of all cloud gateway pools.",
        "operationId": "GetCloudGatewayPools",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGatewayPool"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
    "name": "Cloud gateway pool 1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "numberOfGateways": 4
  },
  {
    "instanceUid": "4786976e-71d4-41a1-a764-621445e3761e",
    "name": "Cloud gateway pool 2",
    "backupServerUid": "84c36ba0-f423-4512-a112-b19a52f1828a",
    "numberOfGateways": 6
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/cloudgatewaypools": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateway Pools Configured for Site",
        "description": "Returns a collection resource representation of all cloud gateway pools configured for a site with the specified UID.",
        "operationId": "GetCloudGatewayPoolsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGatewayPool"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
    "name": "Cloud gateway pool 1",
    "backupServerUid": "84c36ba0-f423-4512-a112-b19a52f1828a",
    "numberOfGateways": 4
  },
  {
    "instanceUid": "4786976e-71d4-41a1-a764-621445e3761e",
    "name": "Cloud gateway pool 2",
    "backupServerUid": "84c36ba0-f423-4512-a112-b19a52f1828a",
    "numberOfGateways": 6
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/cloudgatewaypools/{instanceUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Cloud Gateway Pool",
        "description": "Returns a resource representation of a cloud gateway pool with the specified UID.",
        "operationId": "GetCloudGatewayPool",
        "parameters": [
          {
            "name": "instanceUid",
            "in": "path",
            "description": "Cloud gateway pool UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CloudGatewayPool"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
  "name": "Cloud gateway pool 1",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "numberOfGateways": 1
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/cloudgatewaypools/{instanceUid}/cloudgateways": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateways in Pool",
        "description": "Returns a collection resource representation of all cloud gateways included in a pool with the specified UID.",
        "operationId": "GetCloudGatewaysByPool",
        "parameters": [
          {
            "name": "instanceUid",
            "in": "path",
            "description": "Cloud gateway pool UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGateway"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "227c38a5-0850-4b06-90fe-71e6b23221b4",
    "name": "gw6",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "gatewayPoolUid": "77204359-b0ea-440a-8c87-a5f6fff73757",
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.150.112",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  },
  {
    "instanceUid": "69ab03f5-51c9-4cb2-9170-c6d6d90278a1",
    "name": "gw7",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "gatewayPoolUid": "77204359-b0ea-440a-8c87-a5f6fff73757",
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.150.168",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/cloudgateways": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateways",
        "description": "Returns a collection resource representation of all cloud gateways.",
        "operationId": "GetCloudGateways",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGateway"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ddf4b55c-7b2b-4d82-ae24-52b616631113",
    "name": "gw3",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "gatewayPoolUid": null,
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.25.48.120",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  },
  {
    "instanceUid": "557d9bda-1093-4b80-9e21-6db10ddb5f35",
    "name": "gw5",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "gatewayPoolUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.158.240",
    "isOutOfDate": false,
    "hostUid": "17c4b7c1-6360-44c0-ab3f-55c29879bba9",
    "isDisabled": false,
    "status": "Healthy"
  },
  {
    "instanceUid": "227c38a5-0850-4b06-90fe-71e6b23221b4",
    "name": "gw6",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "gatewayPoolUid": null,
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.150.112",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  },
  {
    "instanceUid": "69ab03f5-51c9-4cb2-9170-c6d6d90278a1",
    "name": "gw7",
    "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "gatewayPoolUid": null,
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.150.168",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/cloudgateways": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateways Configured for Site",
        "description": "Returns a collection resource representation of all cloud gateways configured for a site with the specified UID.",
        "operationId": "GetCloudGatewaysBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGateway"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ddf4b55c-7b2b-4d82-ae24-52b616631113",
    "name": "gw2",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "gatewayPoolUid": null,
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.25.48.100",
    "isOutOfDate": false,
    "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
    "isDisabled": false,
    "status": "Healthy"
  },
  {
    "instanceUid": "557d9bda-1093-4b80-9e21-6db10ddb5f35",
    "name": "gw5",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "gatewayPoolUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
    "port": 9999,
    "externalPort": 6180,
    "externalIp": "172.24.158.242",
    "isOutOfDate": false,
    "hostUid": "17c4b7c1-6360-44c0-ab3f-55c29879bba9",
    "isDisabled": false,
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/cloudgateways/{gatewayUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Cloud Gateway",
        "description": "Returns a resource representation of a cloud gateway with the specified UID.",
        "operationId": "GetCloudGateway",
        "parameters": [
          {
            "name": "gatewayUid",
            "in": "path",
            "description": "Cloud gateway pool UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CloudGateway"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "69ab03f5-51c9-4cb2-9170-c6d6d90278a1",
  "name": "VBRCC3",
  "backupServerUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
  "gatewayPoolUid": null,
  "port": 9999,
  "externalPort": 6180,
  "externalIp": "172.24.150.178",
  "isOutOfDate": false,
  "hostUid": "6745a759-2205-4cd2-b172-8ec8f7e60ef8",
  "isDisabled": false,
  "status": "Healthy"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/wanAccelerators": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Wan Accelerators",
        "description": "Returns a collection resource representation of all WAN accelerators.",
        "operationId": "GetSiteWanAcceleratorResources",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteWanAcceleratorResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
    "name": "VSPCSRV",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/wanAccelerators": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Wan Accelerators Configured for Site",
        "description": "Returns a collection resource representation of all WAN accelerators configured for a site with the specified UID.",
        "operationId": "GetSiteWanAcceleratorResourcesBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/SiteWanAcceleratorResource"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
    "name": "VSPCSRV",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/wanAccelerators/{wanAcceleratorUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Wan Accelerator",
        "description": "Returns a resource representation of a WAN accelerator with the specified UID.",
        "operationId": "GetSiteWanAcceleratorResource",
        "parameters": [
          {
            "name": "wanAcceleratorUid",
            "in": "path",
            "description": "WAN accelerator UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/SiteWanAcceleratorResource"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "ba9ac76e-c499-49e2-ad01-bc2778051394",
  "name": "VSPCSRV",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Tenants",
        "description": "Returns a collection resource representation of all tenants.",
        "operationId": "GetTenants",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5734fee5-a895-4068-9971-5c6db44544e7",
    "name": "ExonCo",
    "description": "Created by Powershell at 14.08.2021 20:04:47.",
    "hashedPassword": "rDAseFhYOWpx5A1SezuQhA==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "GatewayPool",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [
      "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3"
    ],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": true,
    "isVcdReplicationResourcesEnabled": false
  },
  {
    "instanceUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "AtriumSolutions",
    "description": "Created by Powershell at 14.08.2021 20:03:22.",
    "hashedPassword": "7Plc91Lv9yYfe4CrroubSg==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": "2021-08-15T05:31:00+02:00",
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": true,
    "isVcdReplicationResourcesEnabled": false
  },
  {
    "instanceUid": "059c5941-ae56-4240-b57e-8e59a4a301fc",
    "name": "AlphaComp",
    "description": "Created by Powershell at 14.08.2021 20:04:11.",
    "hashedPassword": null,
    "type": "VCD",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": false,
    "isVcdReplicationResourcesEnabled": true
  },
  {
    "instanceUid": "76e1139a-0531-47c0-9e6e-365781868370",
    "name": "JupiterInc",
    "description": "",
    "hashedPassword": "O6iz+zEPtDPwXyoZwB4muA==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": false,
    "isVcdReplicationResourcesEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/tenants": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Tenants Registered on Site",
        "description": "Returns a collection resource representation of tenants registered on a site with the specified UID.",
        "operationId": "GetTenantsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5734fee5-a895-4068-9971-5c6db44544e7",
    "name": "ExonCo",
    "description": "Created by Powershell at 14.08.2021 20:04:47.",
    "hashedPassword": "rDAseFhYOWpx5A1SezuQhA==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "GatewayPool",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [
      "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3"
    ],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": true,
    "isVcdReplicationResourcesEnabled": false
  },
  {
    "instanceUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "AtriumSolutions",
    "description": "Created by Powershell at 14.08.2021 20:03:22.",
    "hashedPassword": "7Plc91Lv9yYfe4CrroubSg==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": "2021-08-15T03:24:00+02:00",
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": true,
    "isVcdReplicationResourcesEnabled": false
  },
  {
    "instanceUid": "059c5941-ae56-4240-b57e-8e59a4a301fc",
    "name": "AlphaComp",
    "description": "Created by Powershell at 14.08.2021 20:04:11.",
    "hashedPassword": null,
    "type": "VCD",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": false,
    "isVcdReplicationResourcesEnabled": true
  },
  {
    "instanceUid": "76e1139a-0531-47c0-9e6e-365781868370",
    "name": "JupiterInc",
    "description": "",
    "hashedPassword": "O6iz+zEPtDPwXyoZwB4muA==",
    "type": "General",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "lastActive": null,
    "gatewaySelectionType": "StandaloneGateways",
    "isEnabled": true,
    "isLeaseExpirationEnabled": false,
    "leaseExpirationDate": null,
    "isBackupProtectionEnabled": false,
    "backupProtectionPeriod": null,
    "isGatewayFailoverEnabled": false,
    "gatewayPoolsUids": [],
    "isThrottlingEnabled": false,
    "throttlingValue": null,
    "throttlingUnit": null,
    "maxConcurrentTask": 1,
    "isBackupResourcesEnabled": false,
    "isNativeReplicationResourcesEnabled": false,
    "isVcdReplicationResourcesEnabled": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/{tenantUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Tenant",
        "description": "Returns a resource representation of a tenant with the specified UID.",
        "operationId": "GetTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CloudTenant"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
  "name": "ExonCo",
  "description": "Created by Powershell at 14.08.2021 20:03:22.",
  "hashedPassword": "7Plc91Lv9yYfe4CrroubSg==",
  "type": "General",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "lastActive": "2021-08-15T03:24:00+02:00",
  "gatewaySelectionType": "StandaloneGateways",
  "isEnabled": true,
  "isLeaseExpirationEnabled": false,
  "leaseExpirationDate": null,
  "isBackupProtectionEnabled": false,
  "backupProtectionPeriod": null,
  "isGatewayFailoverEnabled": false,
  "gatewayPoolsUids": [],
  "isThrottlingEnabled": false,
  "throttlingValue": null,
  "throttlingUnit": null,
  "maxConcurrentTask": 1,
  "isBackupResourcesEnabled": false,
  "isNativeReplicationResourcesEnabled": true,
  "isVcdReplicationResourcesEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/subtenants": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Subtenants",
        "description": "Returns a collection resource representation of all subtenants.",
        "operationId": "GetSubTenants",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudSubTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5a8dc282-a138-4504-9408-a3f85816266c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valNet",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:54:53 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "334ef340-3708-4aca-a975-eb3c6d1b59d0",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_val",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:56:55 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "17b8c37b-01d4-4ed9-873a-909e59434d6c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valR",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:58:48 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "49941f2c-99a8-4927-97bf-2794c0ca3c90",
    "tenantUid": "5734fee5-a895-4068-9971-5c6db44544e7",
    "name": "t1_em",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 1:18:22 AM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/tenants/subtenants": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Subtenants Registered on Site",
        "description": "Returns a collection resource representation of all subtenants provided with resources of a site with the specified UID.",
        "operationId": "GetSubTenantsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudSubTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5a8dc282-a138-4504-9408-a3f85816266c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valNet",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:54:53 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "334ef340-3708-4aca-a975-eb3c6d1b59d0",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_val",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:56:55 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "17b8c37b-01d4-4ed9-873a-909e59434d6c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valR",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:58:48 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "49941f2c-99a8-4927-97bf-2794c0ca3c90",
    "tenantUid": "5734fee5-a895-4068-9971-5c6db44544e7",
    "name": "t1_em",
    "description": "Created by Veeam Service Provider Console at 8/15/2021 1:18:22 AM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/{tenantUid}/subtenants": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Subtenants Registered by Tenant",
        "description": "Returns a collection resource representation of all subtenants registered by a tenant with the specified UID.",
        "operationId": "GetSubTenantsByTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudSubTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5a8dc282-a138-4504-9408-a3f85816266c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valNet",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:54:53 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "334ef340-3708-4aca-a975-eb3c6d1b59d0",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_val",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:56:55 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  },
  {
    "instanceUid": "17b8c37b-01d4-4ed9-873a-909e59434d6c",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "name": "t1_valR",
    "description": "Created by Veeam Service Provider Console at 8/14/2021 11:58:48 PM",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "isEnabled": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/subtenants/{subtenantUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Subtenant",
        "description": "Returns a resource representation of a subtenant with the specified UID.",
        "operationId": "GetSubTenant",
        "parameters": [
          {
            "name": "subtenantUid",
            "in": "path",
            "description": "Subtenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/CloudSubTenant"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "5a8dc282-a138-4504-9408-a3f85816266c",
  "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
  "name": "t1_valNet",
  "description": "Created by Veeam Service Provider Console at 8/14/2021 11:54:53 PM",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "isEnabled": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/{tenantUid}/cloudGatewayPools": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Cloud Gateway Pools Assigned to Tenant",
        "description": "Returns a collection resource representation of all cloud gateway pools assigned to a tenant with the specified UID.",
        "operationId": "GetCloudGatewayPoolsByTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "Tenant UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudGatewayPool"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a1d4b70d-2fcc-49f1-a99a-de17a4b123d3",
    "name": "Cloud gateway pool 1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "numberOfGateways": 4
  },
  {
    "instanceUid": "4786976e-71d4-41a1-a764-621445e3761e",
    "name": "Cloud gateway pool 2",
    "backupServerUid": "84c36ba0-f423-4512-a112-b19a52f1828a",
    "numberOfGateways": 6
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/tenants/products": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Tenant Veeam Products",
        "description": "Returns a collection resource representation of Veeam products installed in all tenant infrastructures.",
        "operationId": "GetCloudTenantsProducts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudTenantProductVersionInfo"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "productType": "VBR",
    "version": "11.0.0.837",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "isVersionInfoAvailable": true
  },
  {
    "instanceUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "productType": "Unknown",
    "version": "5.0.0.4301",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "isVersionInfoAvailable": true
  },
  {
    "instanceUid": "da324b1a-4a43-4101-93a9-0e57456debdd",
    "productType": "Unknown",
    "version": "4.0.0.1811",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
    "tenantUid": "da324b1a-4a43-4101-93a9-0e57456debdd",
    "isVersionInfoAvailable": true
  },
  {
    "instanceUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "productType": "VBR",
    "version": "11.0.0.837",
    "siteUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "companyUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "tenantUid": "7e4cc662-4279-41fa-8b05-bd10f1a486f9",
    "isVersionInfoAvailable": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/tenants/products": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Tenant Veeam Products on Site",
        "description": "Returns a collection resource representation of Veeam products installed in the infrastructures of all tenants managed by a Veeam Cloud Connect server with the specified UID.",
        "operationId": "GetCloudTenantsProductsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CloudTenantProductVersionInfo"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "productType": "VBR",
    "version": "11.0.0.837",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "tenantUid": "a8b1612a-f990-4b54-a11a-8605821be98a",
    "isVersionInfoAvailable": true
  },
  {
    "instanceUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "productType": "Unknown",
    "version": "5.0.0.4301",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "tenantUid": "8fb85538-489d-4ab3-9e7d-cd4902e56c58",
    "isVersionInfoAvailable": true
  },
  {
    "instanceUid": "da324b1a-4a43-4101-93a9-0e57456debdd",
    "productType": "Unknown",
    "version": "4.0.0.1811",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "companyUid": "52bd6dde-a3e5-440c-b93e-6519d2bda4e0",
    "tenantUid": "da324b1a-4a43-4101-93a9-0e57456debdd",
    "isVersionInfoAvailable": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 3,
                      "count": 3,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/vcdServers": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VMware Cloud Director Servers",
        "description": "Returns a collection resource representation of all VMware Cloud Director servers.",
        "operationId": "GetVcdServers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "vcd95.vspc.local"
  },
  {
    "instanceUid": "4703a27c-1e81-49f5-951e-81ac2d08c437",
    "backupServerUid": "9acca238-d1d3-491f-be2f-eacdffc11013",
    "name": "vcd97.vspc.local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VMware Cloud Director Servers Managed by Site",
        "description": "Returns a collection resource representation of all VMware Cloud Director servers managed by a site with the specified UID.",
        "operationId": "GetVcdServersBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "vcd95.vspc.local"
  },
  {
    "instanceUid": "4703a27c-1e81-49f5-951e-81ac2d08c437",
    "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "vcd97.vspc.local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/{vcdServerUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get VMware Cloud Director Server",
        "description": "Returns a resource representation of a VMware Cloud Director server with the specified UID.",
        "operationId": "GetVcdServer",
        "parameters": [
          {
            "name": "vcdServerUid",
            "in": "path",
            "description": "VMware Cloud Director server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VcdServer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
  "backupServerUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "name": "vcd95.vspc.local"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/vcdServers/vcdOrganizations": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VMware Cloud Director Organizations",
        "description": "Returns a collection resource representation of all VMware Cloud Director organizations.",
        "operationId": "GetVcdOrganizations",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganization"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcdo1",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "name": "vcdo2",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "name": "vcdo3",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "2dde13e4-1386-4714-9782-715486bca6e6",
    "name": "vcdo4",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VMware Cloud Director Organizations on Site",
        "description": "Returns a collection resource representation of all VMware Cloud Director organizations on a site with the specified UID.",
        "operationId": "GetVcdOrganizationsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganization"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcdo1",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "name": "vcdo2",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "name": "vcdo3",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "2dde13e4-1386-4714-9782-715486bca6e6",
    "name": "vcdo4",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/{vcdServerUid}/vcdOrganizations": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VMware Cloud Director Organizations Configured on VMware Cloud Director Server",
        "description": "Returns a collection resource representation of all VMware Cloud Director organizations configured on a VMware Cloud Director server with the specified UID.",
        "operationId": "GetVcdOrganizationsByVcd",
        "parameters": [
          {
            "name": "vcdServerUid",
            "in": "path",
            "description": "VMware Cloud Director server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganization"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcdo1",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "name": "vcdo2",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "name": "vcdo3",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  },
  {
    "instanceUid": "2dde13e4-1386-4714-9782-715486bca6e6",
    "name": "vcdo4",
    "vcdServerUid": "10604abc-5158-4eac-af96-bf958b4e0485",
    "siteUid": "4e2ec6cf-6fe6-4ad7-b614-db7d85e82db9"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/{vcdOrganizationUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get VMware Cloud Director Organization",
        "description": "Returns a resource representation of a VMware Cloud Director organization with the specified UID.",
        "operationId": "GetVcdOrganization",
        "parameters": [
          {
            "name": "vcdOrganizationUid",
            "in": "path",
            "description": "VMware Cloud Director organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VcdOrganization"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
  "name": "vcdo1",
  "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/vcdServers/vcdOrganizations/vDCs": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Organization VDCs",
        "description": "Returns a collection resource representation of all organization VDCs.",
        "operationId": "GetVcdOrganizationVDCs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationDataCenter"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cf82125f-5732-41b9-85ff-083300c081ef",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC1"
  },
  {
    "instanceUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC2"
  },
  {
    "instanceUid": "114adf14-0b30-4ae7-ae4c-90a89b338427",
    "vcdOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC3"
  },
  {
    "instanceUid": "1852e112-6669-4f46-8028-761d30298206",
    "vcdOrganizationUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC4"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/vDCs": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Organization VDCs on Site",
        "description": "Returns a collection resource representation of all organization VDCs on a site with the specified UID.",
        "operationId": "GetVcdOrganizationVDCsBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationDataCenter"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cf82125f-5732-41b9-85ff-083300c081ef",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC1"
  },
  {
    "instanceUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC2"
  },
  {
    "instanceUid": "114adf14-0b30-4ae7-ae4c-90a89b338427",
    "vcdOrganizationUid": "7f9cf3d7-53b3-403f-86c7-c314d90ba230",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC3"
  },
  {
    "instanceUid": "1852e112-6669-4f46-8028-761d30298206",
    "vcdOrganizationUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC4"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/{vcdOrganizationUid}/vDCs": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All VDCs Providing Resources to VMware Cloud Director Organization",
        "description": "Returns a collection resource representation of all VDCs that provide resources to a VMware Cloud Director organization with the specified UID.",
        "operationId": "GetVcdOrganizationVDCsByOrganization",
        "parameters": [
          {
            "name": "vcdOrganizationUid",
            "in": "path",
            "description": "VMware Cloud Director organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationDataCenter"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "cf82125f-5732-41b9-85ff-083300c081ef",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC1"
  },
  {
    "instanceUid": "1605f30e-6a4f-4d85-984a-89cca9b7de43",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
    "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
    "name": "VDC2"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/vDCs/{vdcUid}": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Organization VDC",
        "description": "Returns a resource representation of an organization VDC with the specified UID.",
        "operationId": "GetVcdOrganizationVDC",
        "parameters": [
          {
            "name": "vdcUid",
            "in": "path",
            "description": "Organization VDC UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VcdOrganizationDataCenter"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "cf82125f-5732-41b9-85ff-083300c081ef",
  "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
  "vcdServerUid": "4eefcd32-8dce-43d7-8677-97c42424f8b1",
  "siteUid": "94b797c3-058d-4829-83fa-2713fb02acea",
  "name": "VDC1"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/vcdServers/vcdOrganizations/users": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Users of VMware Cloud Director Organization",
        "description": "Returns a collection resource representation of all VMware Cloud Director organization users.",
        "operationId": "GetVcdOrganizationUsers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationUser"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "urn:vcloud:user:a40a7d1a-a7d7-4c39-a3bd-04a0bdfea9d0",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcd_admin"
  },
  {
    "instanceUid": "urn:vcloud:user:ec48f3d4-9020-4d72-aaf5-067319b6729f",
    "vcdOrganizationUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "name": "vcd_admin2"
  },
  {
    "instanceUid": "urn:vcloud:user:156c62fa-253e-4009-a10a-4f8c89358f55",
    "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0",
    "name": "vcd_manager"
  },
  {
    "instanceUid": "urn:vcloud:user:2dc08a64-1e28-4df0-97be-bceeab8a1828",
    "vcdOrganizationUid": "222289aa-58d8-4f1f-922e-8975a12d96c4",
    "name": "vcd_operator"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/users": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get All Users of VMware Cloud Director Organization on Site",
        "description": "Returns a collection resource representation of all VMware Cloud Director organization users on a site with the specified UID.",
        "operationId": "GetVcdOrganizationUsersBySite",
        "parameters": [
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationUser"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "urn:vcloud:user:a40a7d1a-a7d7-4c39-a3bd-04a0bdfea9d0",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcd_admin"
  },
  {
    "instanceUid": "urn:vcloud:user:ec48f3d4-9020-4d72-aaf5-067319b6729f",
    "vcdOrganizationUid": "61947ef6-2d6d-42f2-956d-09dae1590530",
    "name": "vcd_admin2"
  },
  {
    "instanceUid": "urn:vcloud:user:156c62fa-253e-4009-a10a-4f8c89358f55",
    "vcdOrganizationUid": "2405374a-360d-476c-a7fc-0e5f01c7f2a0",
    "name": "vcd_manager"
  },
  {
    "instanceUid": "urn:vcloud:user:2dc08a64-1e28-4df0-97be-bceeab8a1828",
    "vcdOrganizationUid": "222289aa-58d8-4f1f-922e-8975a12d96c4",
    "name": "vcd_operator"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/sites/{siteUid}/vcdServers/vcdOrganizations/{vcdOrganizationUid}/users": {
      "get": {
        "tags": [
          "Cloud Connect"
        ],
        "summary": "Get Users of VMware Cloud Director Organization",
        "description": "Returns a collection resource representation of all users of a VMware Cloud Director organization with the specified UID.",
        "operationId": "GetVcdOrganizationUsersByOrganization",
        "parameters": [
          {
            "name": "vcdOrganizationUid",
            "in": "path",
            "description": "VMware Cloud Director organization UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "siteUid",
            "in": "path",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VcdOrganizationUser"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "urn:vcloud:user:a40a7d1a-a7d7-4c39-a3bd-04a0bdfea9d0",
    "vcdOrganizationUid": "c109b906-daf7-443a-9f2b-d21dac7b461e",
    "name": "vcd_admin"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/deployment/deploy/{deploymentTaskUid}/log/{managementAgentUid}": {
      "get": {
        "tags": [
          "Deployment"
        ],
        "summary": "Get Deployment Task Status",
        "description": "Returns a resource representation of deployment task status.",
        "operationId": "GetDeploymentLog",
        "parameters": [
          {
            "name": "deploymentTaskUid",
            "in": "path",
            "description": "Deployment task UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "managementAgentUid",
            "in": "path",
            "description": "Management agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/DeploymentLog"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "completePercentage": 100,
  "status": "success",
  "logEntries": [
    {
      "taskUid": "9fc2b022-be46-4971-8eb2-83bbfaba0163",
      "event": 27,
      "managementAgentUid": "447e5bb3-c233-4ea9-983e-22117dfbb0f9",
      "biosUuid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
      "hostName": "r2vawRule",
      "taskName": "Deploy",
      "message": "Backup agent policy configuration skipped.",
      "time": "2021-08-15T10:31:05.7189331+02:00"
    },
    {
      "taskUid": "9fc2b022-be46-4971-8eb2-83bbfaba0163",
      "event": -3,
      "managementAgentUid": "447e5bb3-c233-4ea9-983e-22117dfbb0f9",
      "biosUuid": "d3533b42-475c-a193-4c1f-4c08fbff63cb",
      "hostName": "r2vawRule",
      "taskName": "UpdateWinAgent",
      "message": null,
      "time": "2021-08-15T10:31:11.8126885+02:00"
    }
  ]
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/cloudVirtualMachines": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Protected Cloud VMs",
        "description": "Returns a collection resource representation of all protected cloud VMs.",
        "operationId": "GetProtectedCloudVirtualMachines",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedCloudVirtualMachine"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "23ac0e26-d971-c02e-402b-22e1f8728d2a",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "name": "vm3",
    "resourceId": "i-004ba5b41e62a6f6b",
    "destinations": [
      "CCRepo1",
      "CCRepo2"
    ],
    "latestBackupDate": "2021-08-15T04:59:23.013+02:00"
  },
  {
    "instanceUid": "c79117c4-4606-3a05-8a9f-2d03ece89120",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "name": "fvvm4",
    "resourceId": "i-0efc83c48940cdf7c",
    "destinations": [
      "CCRepo1"
    ],
    "latestBackupDate": "2020-08-04T18:00:22.48+02:00"
  },
  {
    "instanceUid": "2784f72c-43a6-5b26-198a-33b15b373afa",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "name": "vm7",
    "resourceId": "i-0c24e01689e7d2b13",
    "destinations": [
      "CCRepo1"
    ],
    "latestBackupDate": "2021-08-15T04:20:24.447+02:00"
  },
  {
    "instanceUid": "c5468a60-9fde-1928-6b6c-533ad62cf09d",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "name": "fvvm8",
    "resourceId": "i-08e65e0bcde25593a",
    "destinations": [
      "CCRepo1"
    ],
    "latestBackupDate": "2021-03-18T13:00:15.52+01:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/cloudVirtualMachines/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Backups of All Protected Cloud VMs",
        "description": "Returns a collection resource representation of all backups of protected cloud VMs.",
        "operationId": "GetProtectedCloudVirtualMachinesBackups",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedCloudVirtualMachineBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "cloudVirtualMachineUid": "23ac0e26-d971-c02e-402b-22e1f8728d2a",
    "jobUid": "f968dedb-f7bc-43f5-9c50-8f1ec406c3d5",
    "backupType": "Backup",
    "destination": "CCRepo1",
    "totalRestorePointSize": 6595216195,
    "latestRestorePointSize": 17863539,
    "restorePoints": 338,
    "latestRestorePointDate": "2021-08-14T04:56:27+02:00"
  },
  {
    "cloudVirtualMachineUid": "23ac0e26-d971-c02e-402b-22e1f8728d2a",
    "jobUid": "f968dedb-f7bc-43f5-9c50-8f1ec406c3d5",
    "backupType": "Snapshot",
    "destination": "CCRepo2",
    "totalRestorePointSize": 2989297238016,
    "latestRestorePointSize": 8589934592,
    "restorePoints": 348,
    "latestRestorePointDate": "2021-08-15T04:59:23.013+02:00"
  },
  {
    "cloudVirtualMachineUid": "c79117c4-4606-3a05-8a9f-2d03ece89120",
    "jobUid": "00000000-0000-0000-0000-000000000000",
    "backupType": "Snapshot",
    "destination": "CCRepo2",
    "totalRestorePointSize": 25769803776,
    "latestRestorePointSize": 8589934592,
    "restorePoints": 3,
    "latestRestorePointDate": "2020-08-04T18:00:22.48+02:00"
  },
  {
    "cloudVirtualMachineUid": "2784f72c-43a6-5b26-198a-33b15b373afa",
    "jobUid": "00000000-0000-0000-0000-000000000000",
    "backupType": "Snapshot",
    "destination": "CCRepo2",
    "totalRestorePointSize": 171798691840,
    "latestRestorePointSize": 8589934592,
    "restorePoints": 20,
    "latestRestorePointDate": "2021-08-15T04:20:24.447+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/cloudVirtualMachines/{cloudVirtualMachineUid}/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Backups of Protected Cloud VM",
        "description": "Returns a collection resource representation of all backups of a protected cloud VM with the specified UID.",
        "operationId": "GetProtectedCloudVirtualMachineBackupsByVm",
        "parameters": [
          {
            "name": "cloudVirtualMachineUid",
            "in": "path",
            "description": "Cloud VM UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedCloudVirtualMachineBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "cloudVirtualMachineUid": "23ac0e26-d971-c02e-402b-22e1f8728d2a",
    "jobUid": "f968dedb-f7bc-43f5-9c50-8f1ec406c3d5",
    "backupType": "Backup",
    "destination": "CCRepo1",
    "totalRestorePointSize": 6595216195,
    "latestRestorePointSize": 17863539,
    "restorePoints": 338,
    "latestRestorePointDate": "2021-08-14T04:56:27+02:00"
  },
  {
    "cloudVirtualMachineUid": "23ac0e26-d971-c02e-402b-22e1f8728d2a",
    "jobUid": "f968dedb-f7bc-43f5-9c50-8f1ec406c3d5",
    "backupType": "Snapshot",
    "destination": "CCRepo2",
    "totalRestorePointSize": 2989297238016,
    "latestRestorePointSize": 8589934592,
    "restorePoints": 348,
    "latestRestorePointDate": "2021-08-15T04:59:23.013+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Protected VMs",
        "description": "Returns a collection resource representation of all protected VMs.",
        "operationId": "GetProtectedVirtualMachines",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachine"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "srv3",
    "hierarchyReference": "host1_vm-88",
    "ipAddresses": [],
    "provisionedSourceSize": 0,
    "usedSourceSize": null,
    "totalRestorePointSize": 4902912,
    "latestRestorePointSize": 1634304,
    "restorePoints": 4,
    "latestRestorePointDate": "2021-08-15T12:31:15.947+02:00",
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb"
  },
  {
    "instanceUid": "3548a09e-aad8-d88b-d488-ef0fe30a0e94",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "srv4",
    "hierarchyReference": "host1_vm-73",
    "ipAddresses": [],
    "provisionedSourceSize": 34359738368,
    "usedSourceSize": 2097152,
    "totalRestorePointSize": 3317760,
    "latestRestorePointSize": 1658880,
    "restorePoints": 2,
    "latestRestorePointDate": "2021-08-15T09:59:38.253+02:00",
    "jobUid": "4ca2493f-5225-4666-bbb5-da1938a0ddb9"
  },
  {
    "instanceUid": "c8312d03-20ad-fdcc-95c0-dd4d89c7df89",
    "backupServerUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
    "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
    "name": "srv5",
    "hierarchyReference": "host1_vm-248",
    "ipAddresses": [],
    "provisionedSourceSize": 0,
    "usedSourceSize": null,
    "totalRestorePointSize": null,
    "latestRestorePointSize": null,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T08:22:37+02:00",
    "jobUid": "94af754d-48a5-4070-a9bb-ef8f20ceb213"
  },
  {
    "instanceUid": "d983cc31-d4b6-7ece-cc9d-6b98528432c2",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "srv6",
    "hierarchyReference": "host1_vm-79",
    "ipAddresses": [],
    "provisionedSourceSize": 32212254720,
    "usedSourceSize": 32212254720,
    "totalRestorePointSize": null,
    "latestRestorePointSize": null,
    "restorePoints": 2,
    "latestRestorePointDate": "2021-08-15T06:32:18+02:00",
    "jobUid": "41121962-0fab-400e-b959-54e76cdaa178"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Backups of All Protected VMs",
        "description": "Returns a collection resource representation of all backups of protected VMs.",
        "operationId": "GetProtectedVirtualMachineBackups",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachineBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "3a3238fd-834a-471d-901a-eca37eb887f2",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "jobUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "backupType": "Backup",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": 1634304,
    "latestRestorePointSize": 1634304,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:54:23.03+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "65545f58-a507-4b74-924a-9fe172153f52",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb",
    "backupType": "Backup",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": 4902912,
    "latestRestorePointSize": 1634304,
    "restorePoints": 3,
    "latestRestorePointDate": "2021-08-15T12:31:15.947+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "4f0c00b4-380d-418c-89ee-13dd5fca8826",
    "virtualMachineUid": "d983cc31-d4b6-7ece-cc9d-6b98528432c2",
    "jobUid": "41121962-0fab-400e-b959-54e76cdaa178",
    "backupType": "Replication",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": null,
    "latestRestorePointSize": null,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T06:32:18+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "20116d82-bc53-4a88-bf02-7e5445187a2d",
    "virtualMachineUid": "d983cc31-d4b6-7ece-cc9d-6b98528432c2",
    "jobUid": "4c1cf360-840e-4be8-8b3b-4abb709c9b64",
    "backupType": "Replication",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": null,
    "latestRestorePointSize": null,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T06:05:49.163+02:00",
    "targetType": "Local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines/{virtualMachineUid}/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Backups of Protected VM",
        "description": "Returns a collection resource representation of all backups of a protected VM with the specified UID.",
        "operationId": "GetProtectedVirtualMachineBackupsByVm",
        "parameters": [
          {
            "name": "virtualMachineUid",
            "in": "path",
            "description": "Virtual machine UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachineBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "06bc09ce-3663-4862-b3df-3ce587c082a6",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "jobUid": "91238ecf-3096-4fc8-b399-b8baa1e0bc9b",
    "backupType": "BackupCopy",
    "repositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "totalRestorePointSize": 1650688,
    "latestRestorePointSize": 1650688,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:37:38.677+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "a7f72632-9e0f-443f-ab03-702659e3eea9",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "jobUid": "5504370d-b95e-4d12-87a3-c8cf1625f223",
    "backupType": "Backup",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": 1658880,
    "latestRestorePointSize": 1658880,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:37:38.677+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "7245aeaa-f70a-4482-bc6c-0ff83419be29",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "jobUid": "8b72d410-692a-4ce9-93f4-c90a62d8f42b",
    "backupType": "BackupCopy",
    "repositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "totalRestorePointSize": 1650688,
    "latestRestorePointSize": 1650688,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:37:38.677+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "65de54f4-575f-445d-a5c4-30abaf839dfd",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "jobUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
    "backupType": "Replication",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": null,
    "latestRestorePointSize": null,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:45:18.857+02:00",
    "targetType": "Local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines/backupRestorePoints/latest": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Latest Restore Points of Protected VMs",
        "description": "Returns a collection resource representation of latest restore points created for VMs.",
        "operationId": "GetProtectedVirtualMachinesLatestRestorePoints",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachineBackupRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "9254988b-8373-4d50-812d-657f7cdbba8c",
    "backupUid": "65545f58-a507-4b74-924a-9fe172153f52",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "filePath": "C:\\Backup\\BackupJob1\\BackupJob1D2021-08-15T033104_75D6.vib",
    "gfsType": [],
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": 1634304,
    "provisionedSourceSize": null,
    "usedSourceSize": null,
    "incrementRawDataSize": 19336,
    "cpuCores": 1,
    "memory": 2147483648,
    "backupCreationTime": "2021-08-15T12:31:15.947+02:00",
    "fileCreationTime": "2021-08-15T12:31:04.013+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "3d3e7651-f3b8-4669-914c-c316db0eda3c",
    "backupUid": "8df689f4-f998-4e66-8837-0cb98e09ba05",
    "virtualMachineUid": "3548a09e-aad8-d88b-d488-ef0fe30a0e94",
    "filePath": "C:\\Backup\\BackupJob1\\BackupJob1D2021-08-15T033104_75D6.vib",
    "gfsType": [],
    "jobUid": "4ca2493f-5225-4666-bbb5-da1938a0ddb9",
    "repositoryUid": "a9b374e5-ba65-4d57-8f26-1cdd6b1f8288",
    "size": 1658880,
    "provisionedSourceSize": 34359738368,
    "usedSourceSize": 2097152,
    "incrementRawDataSize": 12719,
    "cpuCores": 1,
    "memory": 4294967296,
    "backupCreationTime": "2021-08-15T09:59:38.253+02:00",
    "fileCreationTime": "2021-08-15T09:44:57+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "afbc7fb8-f1a6-453e-8d30-9be8748d767b",
    "backupUid": "7245aeaa-f70a-4482-bc6c-0ff83419be29",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "filePath": "C:\\ProgramData\\BackupCopyJob\\BackupJob\\BackupJobD2021-08-15T013358_93EF.vbk",
    "gfsType": [],
    "jobUid": "8121d94c-8ddc-4be9-8afe-a32d43b8afc9",
    "repositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "size": 1650688,
    "provisionedSourceSize": 34359738368,
    "usedSourceSize": 2097152,
    "incrementRawDataSize": 34359751227,
    "cpuCores": 1,
    "memory": 4294967296,
    "backupCreationTime": "2021-08-15T05:37:38.677+02:00",
    "fileCreationTime": "2021-08-15T10:33:58.79+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "d9b80988-24f4-4174-ab8d-1dff1413af7b",
    "backupUid": "ef6cda35-072b-4d81-afd9-96dabfc613d4",
    "virtualMachineUid": "53d6089f-20be-1d83-6b8c-87d9850c7f9e",
    "filePath": "C:\\Backup\\BackupJob\\BackupJobD2021-08-14T193749_EFC7.vbk",
    "gfsType": [],
    "jobUid": "6147dc59-315a-4e37-ba25-6c725816b284",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": 17911296,
    "provisionedSourceSize": null,
    "usedSourceSize": 2097152,
    "incrementRawDataSize": 34359750745,
    "cpuCores": 0,
    "memory": 0,
    "backupCreationTime": "2021-08-15T04:38:31.277+02:00",
    "fileCreationTime": "2021-08-15T04:37:49.313+02:00",
    "isConsistent": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines/{virtualMachineUid}/backupRestorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Backup Restore Points of Protected VM",
        "description": "Returns a collection resource representation of backup restore points created for a protected VM with the specified UID.",
        "operationId": "GetProtectedVirtualMachineBackupRestorePoints",
        "parameters": [
          {
            "name": "virtualMachineUid",
            "in": "path",
            "description": "VM UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachineBackupRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "034fd234-1c4a-4035-91db-cbd108e39685",
    "backupUid": "3a3238fd-834a-471d-901a-eca37eb887f2",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "filePath": "C:\\Backup\\BackupJob\\BackupJobD2021-08-14T205333_33C2.vbk",
    "gfsType": [],
    "jobUid": "784a3a14-b744-4322-a782-10f41d8bd689",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": null,
    "provisionedSourceSize": null,
    "usedSourceSize": null,
    "incrementRawDataSize": null,
    "cpuCores": 1,
    "memory": 2147483648,
    "backupCreationTime": "2021-08-15T05:54:23.03+02:00",
    "fileCreationTime": "2021-08-15T05:53:33.27+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "222a8af0-4c68-4ac0-acf5-ca5b77661593",
    "backupUid": "65545f58-a507-4b74-924a-9fe172153f52",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "filePath": "C:\\Backup\\BackupJob1\\BackupJob1D2021-08-14T205552_186C.vbk",
    "gfsType": [],
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": null,
    "provisionedSourceSize": null,
    "usedSourceSize": null,
    "incrementRawDataSize": null,
    "cpuCores": 1,
    "memory": 2147483648,
    "backupCreationTime": "2021-08-15T05:56:21.823+02:00",
    "fileCreationTime": "2021-08-15T05:55:52.203+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "e5746f54-95e4-46ce-8923-ce563001367d",
    "backupUid": "65545f58-a507-4b74-924a-9fe172153f52",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "filePath": "C:\\Backup\\BackupJob1\\BackupJob1D2021-08-15T025311_31C5.vib",
    "gfsType": [],
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": null,
    "provisionedSourceSize": null,
    "usedSourceSize": null,
    "incrementRawDataSize": null,
    "cpuCores": 1,
    "memory": 2147483648,
    "backupCreationTime": "2021-08-15T11:53:31.723+02:00",
    "fileCreationTime": "2021-08-15T11:53:11.22+02:00",
    "isConsistent": true
  },
  {
    "instanceUid": "9254988b-8373-4d50-812d-657f7cdbba8c",
    "backupUid": "65545f58-a507-4b74-924a-9fe172153f52",
    "virtualMachineUid": "69765040-af7a-1490-a699-1ce08cfe68e6",
    "filePath": "C:\\Backup\\BackupJob1\\BackupJob1D2021-08-15T033104_75D6.vib",
    "gfsType": [],
    "jobUid": "5bcbfb6e-55dd-4f6b-8cc1-a570a7940feb",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": null,
    "provisionedSourceSize": null,
    "usedSourceSize": null,
    "incrementRawDataSize": null,
    "cpuCores": 1,
    "memory": 2147483648,
    "backupCreationTime": "2021-08-15T12:31:15.947+02:00",
    "fileCreationTime": "2021-08-15T12:31:04.013+02:00",
    "isConsistent": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/virtualMachines/{virtualMachineUid}/replicaRestorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Replication Restore Points of Protected VM",
        "description": "Returns a collection resource representation of replication restore points created for a protected VM with the specified UID.",
        "operationId": "GetProtectedVirtualMachineReplicaRestorePoints",
        "parameters": [
          {
            "name": "virtualMachineUid",
            "in": "path",
            "description": "Virtual machine UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedVirtualMachineReplicaRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "00977ee4-2cd6-4d7c-9822-a1832825efed",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "backupUid": "65de54f4-575f-445d-a5c4-30abaf839dfd",
    "jobUid": "db858eb3-d75b-43bf-8f5a-2199601cccb1",
    "hardwarePlanUid": null,
    "creationDate": "2021-08-15T05:45:18+02:00"
  },
  {
    "instanceUid": "98c58856-1675-4d48-8b28-412af5e6c2cb",
    "virtualMachineUid": "9032a7bc-b8fb-e766-e236-37c514518a96",
    "backupUid": "8aff1e75-0d96-44bd-a1cc-b2e77f8e208a",
    "jobUid": "4d13033f-6762-4f90-bbc4-3976aaeb5110",
    "hardwarePlanUid": null,
    "creationDate": "2021-08-15T05:45:18+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Protected Computers Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of all protected computers managed by Veeam Service Provider Console.",
        "operationId": "GetProtectedComputersManagedByConsole",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsole"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "rb2e03",
    "numberOfJobs": 1,
    "operationMode": "Server",
    "latestRestorePointDate": "2021-08-15T12:19:43.957+02:00"
  },
  {
    "backupAgentUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "rb2l04",
    "numberOfJobs": 0,
    "operationMode": "Workstation",
    "latestRestorePointDate": "2021-03-08T09:32:51.847+01:00"
  },
  {
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "rb2vaw1",
    "numberOfJobs": 1,
    "operationMode": "Server",
    "latestRestorePointDate": "2021-08-15T09:34:42.443+02:00"
  },
  {
    "backupAgentUid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
    "organizationUid": "25e2f147-bd17-4b83-ad2a-5c92f663b6bf",
    "name": "rb2vaw2",
    "numberOfJobs": 2,
    "operationMode": "Workstation",
    "latestRestorePointDate": "2021-08-15T10:14:47.743+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole/jobs": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Jobs Protecting All Computers Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of all jobs that protect computers managed by Veeam Service Provider Console.",
        "operationId": "GetProtectedComputersManagedByConsoleJobs",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsoleJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "jobUid": "f13f15a1-7795-4857-83e6-f4558a7853f9",
    "jobName": "Windows workstation - Personal files_rb2e03",
    "sourceSize": null,
    "totalRestorePointSize": 2771640320,
    "latestRestorePointSize": 2771640320,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T09:30:12+02:00",
    "targetType": "Cloud"
  },
  {
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "jobUid": "f25f522d-e39a-4846-937e-59eb2a54ed3c",
    "jobName": "Windows workstation - Personal files_rb2vaw1",
    "sourceSize": null,
    "totalRestorePointSize": 12910592,
    "latestRestorePointSize": 12910592,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T09:30:31+02:00",
    "targetType": "Cloud"
  },
  {
    "backupAgentUid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
    "jobUid": "532d5593-dc4a-46b4-b996-1a900994f2b9",
    "jobName": "Windows workstation - Personal files_rb2l04",
    "sourceSize": null,
    "totalRestorePointSize": 1093672960,
    "latestRestorePointSize": 314544128,
    "restorePoints": 15,
    "latestRestorePointDate": "2021-08-15T09:30:25+02:00",
    "targetType": "Local"
  },
  {
    "backupAgentUid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
    "jobUid": "0305074d-1f80-483f-9f88-71a0ce5d8df5",
    "jobName": "Windows workstation - Personal files_rb2vaw2",
    "sourceSize": null,
    "totalRestorePointSize": 993013760,
    "latestRestorePointSize": 993013760,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T09:30:20+02:00",
    "targetType": "Cloud"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole/{backupAgentUid}/jobs": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Jobs Protecting Computer Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of jobs that protect a computer managed by Veeam Service Provider Console with the specified UID of Veeam backup agent installed on the computer.",
        "operationId": "GetProtectedComputersManagedByConsoleJobsByBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsoleJob"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "jobUid": "f25f522d-e39a-4846-937e-59eb2a54ed3c",
    "jobName": "Windows workstation - Personal files_rb2vaw1",
    "sourceSize": null,
    "totalRestorePointSize": 12910592,
    "latestRestorePointSize": 12910592,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T09:30:31+02:00",
    "targetType": "Cloud"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole/restorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Restore Points of Protected Computers Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of all restore points of computers managed by Veeam Service Provider Console.",
        "operationId": "GetProtectedComputersManagedByConsoleRestorePoints",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsoleRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5939956e-ae47-4d1b-a5da-0f6fd9755b7c",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "jobUid": "f13f15a1-7795-4857-83e6-f4558a7853f9",
    "backedupItems": "Personal Files",
    "destination": "cloudrepo03",
    "size": 2771640320,
    "incrementRawDataSize": 3318818157,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:12+02:00"
  },
  {
    "instanceUid": "71a9acf5-744c-47e1-a15f-094c369d88f8",
    "backupAgentUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "jobUid": "bffded0b-7c79-494c-a151-bb200f3fc4f5",
    "backedupItems": "",
    "destination": "C:\\fff\\",
    "size": 363819008,
    "incrementRawDataSize": 368050176,
    "sourceSize": null,
    "creationDate": "2021-03-07T23:39:36+01:00"
  },
  {
    "instanceUid": "14ff7383-b694-4002-897b-24877b08b33d",
    "backupAgentUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "jobUid": "bffded0b-7c79-494c-a151-bb200f3fc4f5",
    "backedupItems": "",
    "destination": "C:\\fff\\",
    "size": 28364800,
    "incrementRawDataSize": 368050176,
    "sourceSize": null,
    "creationDate": "2021-03-08T09:30:21+01:00"
  },
  {
    "instanceUid": "e7db22a3-fcee-4cb5-8477-42b666ae1c57",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "jobUid": "f25f522d-e39a-4846-937e-59eb2a54ed3c",
    "backedupItems": "Personal Files",
    "destination": "CCRepo2",
    "size": 12910592,
    "incrementRawDataSize": 58076618,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:31+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole/restorePoints/latest": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Latest Restore Points of All Protected Computers Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of latest restore points of computers managed by Veeam Service Provider Console.",
        "operationId": "GetProtectedComputersManagedByConsoleLatestRestorePoints",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsoleRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5939956e-ae47-4d1b-a5da-0f6fd9755b7c",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "jobUid": "f13f15a1-7795-4857-83e6-f4558a7853f9",
    "backedupItems": "Personal Files",
    "destination": "cloudrepo03",
    "size": 2771640320,
    "incrementRawDataSize": 3318818157,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:12+02:00"
  },
  {
    "instanceUid": "14ff7383-b694-4002-897b-24877b08b33d",
    "backupAgentUid": "861d3b42-f46f-b0c7-4f6f-4e8c507e7b5c",
    "jobUid": "bffded0b-7c79-494c-a151-bb200f3fc4f5",
    "backedupItems": "",
    "destination": "C:\\fff\\",
    "size": 28364800,
    "incrementRawDataSize": 368050176,
    "sourceSize": null,
    "creationDate": "2021-03-08T09:30:21+01:00"
  },
  {
    "instanceUid": "e7db22a3-fcee-4cb5-8477-42b666ae1c57",
    "backupAgentUid": "19873b42-88ea-bbc5-e764-74d8f6ebd698",
    "jobUid": "f25f522d-e39a-4846-937e-59eb2a54ed3c",
    "backedupItems": "Personal Files",
    "destination": "CCRepo2",
    "size": 12910592,
    "incrementRawDataSize": 58076618,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:31+02:00"
  },
  {
    "instanceUid": "a0cb5030-c31e-4f04-8dae-de72ac721398",
    "backupAgentUid": "6bbf3b42-5585-2ba6-9df2-515b8e62e1ea",
    "jobUid": "532d5593-dc4a-46b4-b996-1a900994f2b9",
    "backedupItems": "Personal Files; Files and folders",
    "destination": "C:\\1\\",
    "size": 314544128,
    "incrementRawDataSize": 499844820,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:25+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByConsole/{backupAgentUid}/restorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Restore Points of Protected Computer Managed by Veeam Service Provider Console",
        "description": "Returns a collection resource representation of restore points created for a protected computer managed by Veeam Service Provider Console with the specified UID of Veeam backup agent installed on the computer.",
        "operationId": "GetProtectedComputerManagedByConsoleRestorePoints",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByConsoleRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "5939956e-ae47-4d1b-a5da-0f6fd9755b7c",
    "backupAgentUid": "07773b42-89fb-7227-9c6a-95e6908f25de",
    "jobUid": "f13f15a1-7795-4857-83e6-f4558a7853f9",
    "backedupItems": "Personal Files",
    "destination": "cloudrepo03",
    "size": 2771640320,
    "incrementRawDataSize": 3318818157,
    "sourceSize": null,
    "creationDate": "2021-08-15T09:30:12+02:00"
  },
  {
    "instanceUid": "cd1f9f19-831c-4286-afd3-0621d10e19ec",
    "backupAgentUid": "5bae3b42-31e4-51de-23c3-ff3b18bc8317",
    "jobUid": "532d5593-dc4a-46b4-b996-1a900994f2b9",
    "backedupItems": "Personal Files; Files and folders",
    "destination": "cloudrepo03",
    "size": 166805504,
    "incrementRawDataSize": 243803462,
    "sourceSize": 25718639616,
    "creationDate": "2021-08-15T09:33:56+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Protected Computers Managed By Backup Server",
        "description": "Returns a collection resource representation of all protected computers managed by Veeam Backup & Replication.",
        "operationId": "GetProtectedComputersManagedByBackupServer",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "42c03b42-96f9-ad8a-5277-ca43a693cbf0",
    "sourceInstanceUid": "69547a49-6444-4f72-9b07-817071b835df",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "protectionGroups": [
      "df17abc5-f51f-4d73-90a3-57f49d15f334"
    ],
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "name": "rb2vaw3",
    "ipAddresses": [
      "172.24.156.218"
    ],
    "guestOs": "Microsoft Windows 10 (20H2, 64-bit)",
    "platformType": "Windows",
    "operationMode": "Server",
    "latestRestorePointDate": "2021-08-15T06:54:00+02:00"
  },
  {
    "instanceUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "sourceInstanceUid": "f1ddbfea-fb73-4068-8997-cf708e00a1ab",
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "protectionGroups": [
      "fcf70a70-bdc3-4c8f-8f76-139150e9e1cd"
    ],
    "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "name": "rb2val2",
    "ipAddresses": [
      "172.24.149.243"
    ],
    "guestOs": "Ubuntu 18.04.1 LTS",
    "platformType": "Linux",
    "operationMode": "Server",
    "latestRestorePointDate": "2021-08-15T05:52:54+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer/restorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Restore Points of Protected Computers Managed by Backup Server",
        "description": "Returns a collection resource representation of all restore points created for computers managed by Veeam Backup & Replication.",
        "operationId": "GetProtectedComputersManagedByBackupServerRestorePoints",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServerRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "620fe944-bf3c-4694-a3bb-c0c2bb8fcc82",
    "backupAgentUid": "42c03b42-96f9-ad8a-5277-ca43a693cbf0",
    "backupUid": "3d0b9e10-b38e-4543-87df-bfb3ab94ee2b",
    "jobUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": 87011328,
    "provisionedSourceSize": 52704110592,
    "usedSourceSize": null,
    "incrementRawDataSize": 24603698176,
    "sourceSize": 52704110592,
    "cpuCores": 2,
    "memory": 4293918720,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T06:58:28+02:00",
    "fileCreationTime": "2021-08-15T06:54:00+02:00"
  },
  {
    "instanceUid": "2caa87ea-e498-49fd-82f0-de866c24f7f6",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "backupUid": "054c14f8-d8ab-4778-a781-5a28114c9429",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "repositoryUid": "8d725da9-9f4a-4932-92e8-adf78447a1f2",
    "size": 5545984,
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "incrementRawDataSize": 46301175921,
    "sourceSize": 46301168128,
    "cpuCores": 2,
    "memory": 4294967296,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T05:55:31+02:00",
    "fileCreationTime": "2021-08-15T05:52:54+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Backups of All Protected Computers Managed by Backup Server",
        "description": "Returns a collection resource representation of all backups of computers managed by Veeam Backup & Replication.",
        "operationId": "GetProtectedComputersManagedByBackupServerBackups",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServerBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "3d0b9e10-b38e-4543-87df-bfb3ab94ee2b",
    "backupAgentUid": "42c03b42-96f9-ad8a-5277-ca43a693cbf0",
    "jobUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "jobName": "vawJob",
    "jobKind": "Backup",
    "provisionedSourceSize": 52704110592,
    "usedSourceSize": 24603698176,
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "totalRestorePointSize": 87011328,
    "latestRestorePointSize": 87011328,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T06:54:00.433+02:00",
    "targetType": "Local"
  },
  {
    "instanceUid": "054c14f8-d8ab-4778-a781-5a28114c9429",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "jobName": "LinuxBackupJob",
    "jobKind": "Backup",
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "repositoryUid": "8d725da9-9f4a-4932-92e8-adf78447a1f2",
    "totalRestorePointSize": 5545984,
    "latestRestorePointSize": 5545984,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:52:54.94+02:00",
    "targetType": "Local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer/{backupAgentUid}/backups": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Backups of Protected Computer Managed by Backup Server",
        "description": "Returns a collection resource representation of all backups of a computer managed by Veeam Backup & Replication with the specified UID of Veeam backup agent installed on the computer.",
        "operationId": "GetProtectedComputersManagedByBackupServerBackupsByBackupAgent",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServerBackup"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "054c14f8-d8ab-4778-a781-5a28114c9429",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "jobName": "autoLinuxBackupJob",
    "jobKind": "Backup",
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "repositoryUid": "8d725da9-9f4a-4932-92e8-adf78447a1f2",
    "totalRestorePointSize": 5545984,
    "latestRestorePointSize": 5545984,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:52:54.94+02:00",
    "targetType": "Local"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer/restorePoints/latest": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Latest Restore Points of All Protected Computers Managed by Backup Server",
        "description": "Returns a collection resource representation of the latest restore points of computers managed by Veeam Backup & Replication.",
        "operationId": "GetProtectedComputersManagedByBackupServerLatestRestorePoints",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServerRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "620fe944-bf3c-4694-a3bb-c0c2bb8fcc82",
    "backupAgentUid": "42c03b42-96f9-ad8a-5277-ca43a693cbf0",
    "backupUid": "3d0b9e10-b38e-4543-87df-bfb3ab94ee2b",
    "jobUid": "2d8f0168-9503-421c-98ec-ab4d8753af0c",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "size": 87011328,
    "provisionedSourceSize": 52704110592,
    "usedSourceSize": null,
    "incrementRawDataSize": 24603698176,
    "sourceSize": 52704110592,
    "cpuCores": 2,
    "memory": 4293918720,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T06:58:28+02:00",
    "fileCreationTime": "2021-08-15T06:54:00+02:00"
  },
  {
    "instanceUid": "2caa87ea-e498-49fd-82f0-de866c24f7f6",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "backupUid": "054c14f8-d8ab-4778-a781-5a28114c9429",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "repositoryUid": "8d725da9-9f4a-4932-92e8-adf78447a1f2",
    "size": 5545984,
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "incrementRawDataSize": 46301175921,
    "sourceSize": 46301168128,
    "cpuCores": 2,
    "memory": 4294967296,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T05:55:31+02:00",
    "fileCreationTime": "2021-08-15T05:52:54+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/computersManagedByBackupServer/{backupAgentUid}/restorePoints": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get Latest Restore Points of Protected Computer Managed by Backup Server",
        "description": "Returns a collection resource representation of all restore points created for a protected computer managed by Veeam Backup & Replication with the specified UID of Veeam backup agent installed on the computer.",
        "operationId": "GetProtectedComputerManagedByBackupServerRestorePoints",
        "parameters": [
          {
            "name": "backupAgentUid",
            "in": "path",
            "description": "Veeam backup agent UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedComputerManagedByBackupServerRestorePoint"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "2caa87ea-e498-49fd-82f0-de866c24f7f6",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "backupUid": "054c14f8-d8ab-4778-a781-5a28114c9429",
    "jobUid": "1ce100b1-0b31-4c88-86a9-29f144bcb6e2",
    "repositoryUid": "8d725da9-9f4a-4932-92e8-adf78447a1f2",
    "size": 5545984,
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "incrementRawDataSize": 46301175921,
    "sourceSize": 46301168128,
    "cpuCores": 2,
    "memory": 4294967296,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T05:55:31+02:00",
    "fileCreationTime": "2021-08-15T05:52:54+02:00"
  },
  {
    "instanceUid": "5d6755fc-5994-4ca4-8f2d-d510554cc49a",
    "backupAgentUid": "4211a8e8-1f9c-3da5-6972-4b1a6f4b8c6a",
    "backupUid": "a6029e8b-de21-4424-880a-f88b6d4ab121",
    "jobUid": "d6f141f2-d57b-4455-b1af-0deb86b19619",
    "repositoryUid": "c503a8ce-67d7-40aa-a1cd-44c02b0b237f",
    "size": 5599232,
    "provisionedSourceSize": 46301168128,
    "usedSourceSize": null,
    "incrementRawDataSize": 46301176117,
    "sourceSize": 46301168128,
    "cpuCores": 2,
    "memory": 4294967296,
    "targetType": "Local",
    "backupCreationTime": "2021-08-15T05:55:31+02:00",
    "fileCreationTime": "2021-08-15T05:52:54+02:00"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/protectedWorkloads/fileServers": {
      "get": {
        "tags": [
          "Protected Workloads"
        ],
        "summary": "Get All Protected File Servers",
        "description": "Returns a collection resource representation of all protected file servers.",
        "operationId": "GetProtectedFileServers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProtectedFileServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "jobUid": "ec23359b-e960-4646-93cf-d44d71f1ffdb",
    "repositoryUid": "fc25cd0d-00ce-4fa0-bfe8-014db039d9ab",
    "archiveRepositoryUid": null,
    "name": "vbr2\\C$\\setup",
    "archiveSize": 0,
    "shortTermBackupSize": 4350718,
    "archiveRestorePoints": 0,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:51:22+02:00",
    "sourceSize": 1124,
    "sources": [
      {
        "path": "vbr2\\C$\\setup",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          " \\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ]
  },
  {
    "fileServerUid": "df16bb3d-815e-4ab5-8364-9eb6028ddbf6",
    "backupServerUid": "d4987a7c-fbd4-44ff-b1c1-cc3007fe0b22",
    "organizationUid": "4c2c0c2d-05d7-4d8a-b283-2ceb4fd49aa2",
    "jobUid": "4a8718fd-b652-44cb-b8d8-67d9aa24e5c0",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "archiveRepositoryUid": null,
    "name": "vbr2\\C$\\setup",
    "archiveSize": 0,
    "shortTermBackupSize": 4330238,
    "archiveRestorePoints": 0,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T05:51:22+02:00",
    "sourceSize": null,
    "sources": [
      {
        "path": "vbr2\\C$\\setup",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vbr2\\C$\\setup\\.snapshot",
          " \\\\vbr2\\C$\\setup\\~snapshot"
        ]
      }
    ]
  },
  {
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "jobUid": "11bf99d8-442f-48a8-9f73-62a160a8d920",
    "repositoryUid": "88788f9e-d8f5-4eb4-bc4f-9b3f5403bcec",
    "archiveRepositoryUid": null,
    "name": "vspc-srv\\C$\\setup",
    "archiveSize": 0,
    "shortTermBackupSize": 4350718,
    "archiveRestorePoints": 0,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T06:25:01+02:00",
    "sourceSize": null,
    "sources": [
      {
        "path": "vspc-srv\\C$\\setup",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vspc-srv\\C$\\setup\\.snapshot",
          " \\\\vspc-srv\\C$\\setup\\~snapshot"
        ]
      }
    ]
  },
  {
    "fileServerUid": "651c1fbf-97ea-48d6-a344-42b5490f57d6",
    "backupServerUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
    "jobUid": "e0162d7d-65a1-434b-9b8e-524eef5a7f2d",
    "repositoryUid": "b68226aa-9e0d-4c92-9046-3c395fcc60bc",
    "archiveRepositoryUid": null,
    "name": "vspc-srv\\C$\\setup",
    "archiveSize": 0,
    "shortTermBackupSize": 4350718,
    "archiveRestorePoints": 0,
    "restorePoints": 1,
    "latestRestorePointDate": "2021-08-15T06:25:01+02:00",
    "sourceSize": 1124,
    "sources": [
      {
        "path": "vspc-srv\\C$\\setup",
        "inclusionMasks": [
          "*.*"
        ],
        "exclusionMasks": [
          "\\\\vspc-srv\\C$\\setup\\.snapshot",
          " \\\\vspc-srv\\C$\\setup\\~snapshot"
        ]
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/alarms/templates": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "summary": "Get All Alarm Templates",
        "description": "Returns a collection resource representation of all Veeam Service Provider Console alarm templates.",
        "operationId": "GetAlarms",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Alarm"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "05a56d81-4dcd-478e-8d59-65b1de5c5abd",
    "name": "Job state",
    "category": "BackupVmJob",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "internalId": 1,
    "knowledge": {
      "summary": "Job is in a disabled state or without any configured schedule for more than an allowed time period.",
      "cause": "Veeam Backup & Replication server allows disabling scheduled jobs during maintenance windows. If a job stays in a disabled state or does not have any schedule at all for more than an allowed time period, it should be enabled back or the schedule has to be configured.",
      "resolution": "Enable all disabled jobs using the backup portal UI or the Veeam Backup & Replication console."
    },
    "isPredifined": true,
    "isEnabled": true
  },
  {
    "instanceUid": "49e522dc-ada9-4a49-9d43-0f11857db715",
    "name": "Max allowed job duration",
    "category": "BackupVmJob",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "internalId": 2,
    "knowledge": {
      "summary": "Job has exceeded its allowed execution time.",
      "cause": "Veeam job has exceeded the configured threshold of maximum allowed job duration.",
      "resolution": "Verify that VMware CBT was used for all VMs in the configured backup/replication job. Check the number of read and transferred data blocks for each VM or changed files during the latest file job session, make sure your Veeam proxy servers have sufficient number of concurrently running tasks allowed. Alternatively, adjust the maximum allowed job duration threshold for this alarm. Once triggered, this alarm needs to be resolved manually."
    },
    "isPredifined": true,
    "isEnabled": false
  },
  {
    "instanceUid": "ed879e9e-c8b0-4bd9-b8a7-aa71a943daa3",
    "name": "Backup proxy connection state",
    "category": "BackupProxy",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "internalId": 3,
    "knowledge": {
      "summary": "Veeam Backup & Replication server lost connection to the proxy server.",
      "cause": "Veeam Backup & Replication may lose connection to the backup proxy due to one of the following reasons: failure of the network cable, disconnect of the cable, failure of the physical network card, backup proxy services failure, firewall issues, backup proxy power state.",
      "resolution": "Verify that backup proxy is accessible by Veeam Backup & Replication server. Check firewall settings on the proxy server (if applicable) and make sure Veeam backup proxy services are up and running."
    },
    "isPredifined": true,
    "isEnabled": true
  },
  {
    "instanceUid": "77f25ec1-1c13-4e4f-9024-a85c65c1c29f",
    "name": "Backup repository connection state",
    "category": "BackupRepository",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "internalId": 4,
    "knowledge": {
      "summary": "Veeam Backup & Replication server lost connection to the backup repository.",
      "cause": "Veeam Backup & Replication may lose connection to the backup repository due to one of the following reasons: failure of the network cable, disconnect of the cable, failure of the physical network card, backup repository services failure, firewall issues, backup repository power state.",
      "resolution": "Verify that backup repository is accessible by both backup proxy and Veeam Backup & Replication servers. Check firewall settings on the proxy server (if applicable) and make sure Veeam backup repository services are up and running."
    },
    "isPredifined": true,
    "isEnabled": true
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/alarms/templates/{alarmUid}": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "summary": "Get Alarm Template",
        "description": "Returns a resource representation of an alarm template with the specified UID.",
        "operationId": "GetAlarm",
        "parameters": [
          {
            "name": "alarmUid",
            "in": "path",
            "description": "Alarm template UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Alarm"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "f8bd9582-9026-419b-bd22-cef00a6e55cd",
  "name": "Backup agent job state",
  "category": "BackupAgentJob",
  "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "internalId": 100,
  "knowledge": {
    "summary": "Managed computer failed to be backed up successfully.",
    "cause": "The latest backup job configured was not successful for the managed computer.",
    "resolution": "Locate the computer that has a failed job session and re-run the job."
  },
  "isPredifined": true,
  "isEnabled": true
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Alarms"
        ],
        "summary": "Delete Alarm Template",
        "description": "Deletes an alarm template with the specified UID.",
        "operationId": "DeleteAlarm",
        "parameters": [
          {
            "name": "alarmUid",
            "in": "path",
            "description": "Alarm template UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/alarms/templates/{alarmUid}/clone": {
      "post": {
        "tags": [
          "Alarms"
        ],
        "summary": "Clone Alarm Template",
        "description": "Creates a clone of an alarm template with the specified UID.",
        "operationId": "CloneAlarm",
        "parameters": [
          {
            "name": "alarmUid",
            "in": "path",
            "description": "Alarm template UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "cloneName",
            "in": "query",
            "description": "Name of an alarm template clone. If not specified, the name is *\\<source alarm template name> copy*.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Alarm"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "52d41a2b-d3a2-4db9-8b6c-5ebd0e197034",
  "name": "SP_Cloned Alarm Template",
  "category": "BackupVmJob",
  "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
  "internalId": 1,
  "knowledge": {
    "summary": "Job is in a disabled state or without any configured schedule for more than an allowed time period.",
    "cause": "Veeam Backup & Replication server allows disabling scheduled jobs during maintenance windows. If a job stays in a disabled state or does not have any schedule at all for more than an allowed time period, it should be enabled back or the schedule has to be configured.",
    "resolution": "Enable all disabled jobs using the backup portal UI or the Veeam Backup & Replication console."
  },
  "isPredifined": false,
  "isEnabled": false
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/alarms/templates/{alarmUid}/events": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "summary": "Get Alarm Status Changes",
        "description": "Returns all status changes of a triggered alarm with the specified template UID.",
        "operationId": "GetActiveAlarmsByAlarm",
        "parameters": [
          {
            "name": "alarmUid",
            "in": "path",
            "description": "Alarm template UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ActiveAlarm"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "84f8e66a-0157-412d-be52-badc2a7de585",
    "alarmTemplateUid": "b547ac98-b1d6-4e17-ade9-750a4d385e57",
    "repeatCount": 1,
    "object": {
      "instanceUid": "c2bdb6e0-2145-4cbf-8135-e748cdf3ebce",
      "type": "Reseller",
      "organizationUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
      "locationUid": null,
      "managementAgentUid": null,
      "computerName": null,
      "objectUid": "5a9e523c-9acf-4585-8f38-8f919ad0ece8",
      "objectName": "Atrium Solutions"
    },
    "lastActivation": {
      "instanceUid": "11ed5ed0-47f3-4099-a16c-8c7c44599fb1",
      "time": "2021-08-15T09:45:17.6247668+02:00",
      "status": "Warning",
      "message": "Quota for the \"Atrium Hardware Plan\" hardware plan has been exceeded. You cannot assign new companies to this plan.\r\n",
      "remark": "\r\n"
    }
  },
  {
    "instanceUid": "6f673e16-c816-41e4-bf17-aa1e0b698329",
    "alarmTemplateUid": "b547ac98-b1d6-4e17-ade9-750a4d385e57",
    "repeatCount": 1,
    "object": {
      "instanceUid": "f9d8a4df-a42c-4ddd-9544-3b16eeb904e2",
      "type": "Reseller",
      "organizationUid": "95db13b5-d291-4c0b-9324-698985243aa5",
      "locationUid": null,
      "managementAgentUid": null,
      "computerName": null,
      "objectUid": "95db13b5-d291-4c0b-9324-698985243aa5",
      "objectName": "CloudBearer"
    },
    "lastActivation": {
      "instanceUid": "b9d4647c-29c9-4324-a06b-3eafae694926",
      "time": "2021-08-15T09:46:17.9707404+02:00",
      "status": "Warning",
      "message": "Quota for the \"CloudBearer Hardware Plan\" hardware plan has been exceeded. You cannot assign new companies to this plan.\r\n",
      "remark": "\r\n"
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/alarms/active": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "summary": "Get All Triggered Alarms",
        "description": "Returns collection resource representation of all Veeam Service Provider Console triggered alarms.",
        "operationId": "GetActiveAlarms",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ActiveAlarm"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "8fe046b4-64b5-4453-ad25-29c2548dea75",
    "alarmTemplateUid": "a74bb4ea-f600-476d-9d33-f49359c13626",
    "repeatCount": 1,
    "object": {
      "instanceUid": "3fc84cc3-5033-43ff-bcdb-60e6725694b1",
      "type": "Internal",
      "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "locationUid": null,
      "managementAgentUid": null,
      "computerName": "srv3",
      "objectUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "objectName": "SRV3"
    },
    "lastActivation": {
      "instanceUid": "6dccb862-df14-4350-acd0-d6a2a3c35846",
      "time": "2021-08-15T07:27:48.047+02:00",
      "status": "Info",
      "message": "License auto-update functionality is not enabled.\r\n",
      "remark": "\r\n"
    }
  },
  {
    "instanceUid": "34276cd2-28ba-4b1f-960c-b6cd143ea944",
    "alarmTemplateUid": "ad47e72c-c1d7-4507-8644-593ddb456c2d",
    "repeatCount": 1,
    "object": {
      "instanceUid": "a64b0ea6-de03-4752-8c72-266563aca766",
      "type": "Internal",
      "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "locationUid": null,
      "managementAgentUid": null,
      "computerName": "srv5",
      "objectUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "objectName": "SRV5"
    },
    "lastActivation": {
      "instanceUid": "023726a5-1dfd-4e01-b6e5-a546ca3f8f56",
      "time": "2021-08-15T07:58:00.82+02:00",
      "status": "Warning",
      "message": "The same license ID 00772222-1111-2222-3333-111122223333 has been detected for backup servers: VSPCSRV (My Company), VBRCC2 (My Company), VBRCC3 (My Company)\r\n",
      "remark": "\r\n"
    }
  },
  {
    "instanceUid": "0a834973-a605-4c9f-b103-d1348b322fd0",
    "alarmTemplateUid": "160e569b-1acf-438c-a15e-cbe61c93894e",
    "repeatCount": 1,
    "object": {
      "instanceUid": "1c15866d-3edc-4f12-a041-490979e4381d",
      "type": "BackupServer",
      "organizationUid": "0a82833c-69fb-4155-bbdf-d2dc755710da",
      "locationUid": "91b26c62-95da-49b7-9b56-fa805b1fc4ec",
      "managementAgentUid": "9e81f09e-9409-4f0a-b5ff-cb222247fa71",
      "computerName": "vbr1",
      "objectUid": "c828c0f5-a645-4c0a-926e-28f34266eed8",
      "objectName": "VBR1"
    },
    "lastActivation": {
      "instanceUid": "854bba35-c369-4825-b940-9df1fde5199e",
      "time": "2021-08-15T08:25:13.3713054+02:00",
      "status": "Error",
      "message": "Veeam backup server support contract expired (167 days, 12 hours ago).\r\n",
      "remark": "\r\n"
    }
  },
  {
    "instanceUid": "d336a7fd-df84-41b3-be25-5e258a238c5a",
    "alarmTemplateUid": "09426da9-0a03-4302-8ccf-cf2d7f783fc0",
    "repeatCount": 1,
    "object": {
      "instanceUid": "2f6d7108-6a7e-4fce-a090-92e1e842a394",
      "type": "Site",
      "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
      "locationUid": null,
      "managementAgentUid": "394017c2-87ad-4981-9e69-7fbbbe23b0fb",
      "computerName": "vbrcc3",
      "objectUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
      "objectName": "vbrcc3"
    },
    "lastActivation": {
      "instanceUid": "5fbdf1ef-faae-4885-ba79-e849ded7c342",
      "time": "2021-08-15T08:35:14.5791415+02:00",
      "status": "Error",
      "message": "Cloud Host Memory Usage quota is exceeded by 104.80%.\r\n",
      "remark": "\r\n"
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/alarms/active/{activeAlarmUid}": {
      "get": {
        "tags": [
          "Alarms"
        ],
        "summary": "Get Triggered Alarm",
        "description": "Returns a resource representation of a triggered alarm with the specified UID.",
        "operationId": "GetActiveAlarm",
        "parameters": [
          {
            "name": "activeAlarmUid",
            "in": "path",
            "description": "Triggered alarm UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/ActiveAlarm"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "d336a7fd-df84-41b3-be25-5e258a238c5a",
  "alarmTemplateUid": "09426da9-0a03-4302-8ccf-cf2d7f783fc0",
  "repeatCount": 1,
  "object": {
    "instanceUid": "ac796cfd-580e-4333-80cc-48d1803d5e71",
    "type": "Site",
    "organizationUid": "82d44884-eb79-4be4-94a8-36a234669e7d",
    "locationUid": null,
    "managementAgentUid": "394017c2-87ad-4981-9e69-7fbbbe23b0fb",
    "computerName": "srv3",
    "objectUid": "3531cffc-ff5e-42d3-90e5-619afd9c6a36",
    "objectName": "SRV3"
  },
  "lastActivation": {
    "instanceUid": "5fbdf1ef-faae-4885-ba79-e849ded7c342",
    "time": "2021-08-15T08:35:14.5791415+02:00",
    "status": "Error",
    "message": "Cloud Host Memory Usage quota is exceeded by 104.80%.\r\n",
    "remark": "\r\n"
  }
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      },
      "delete": {
        "tags": [
          "Alarms"
        ],
        "summary": "Delete Triggered Alarm",
        "description": "Deletes a triggered alarm with the specified UID.",
        "operationId": "DeleteActiveAlarm",
        "parameters": [
          {
            "name": "activeAlarmUid",
            "in": "path",
            "description": "Triggered alarm UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/alarms/active/{activeAlarmUid}/resolve": {
      "post": {
        "tags": [
          "Alarms"
        ],
        "summary": "Resolve Triggered Alarm",
        "description": "Resolves a triggered alarm with the specified UID.",
        "operationId": "ResolveActiveAlarm",
        "parameters": [
          {
            "name": "activeAlarmUid",
            "in": "path",
            "description": "Triggered alarm UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Comment about resolving the alarm.",
            "required": true,
            "schema": {
              "maxLength": 512,
              "type": "string"
            }
          },
          {
            "name": "resolveOnClients",
            "in": "query",
            "description": "Defines whether the alarm must be resolved on a client portal.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/alarms/active/{activeAlarmUid}/acknowledge": {
      "post": {
        "tags": [
          "Alarms"
        ],
        "summary": "Acknowledge Triggered Alarm",
        "description": "Assigns the Acknowledged status to a triggered alarm with the specified UID.",
        "operationId": "AcknowledgeActiveAlarm",
        "parameters": [
          {
            "name": "activeAlarmUid",
            "in": "path",
            "description": "Triggered alarm UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "comment",
            "in": "query",
            "description": "Comment about acknowledging the alarm.",
            "required": true,
            "schema": {
              "maxLength": 512,
              "type": "string"
            }
          },
          {
            "name": "resolveOnClients",
            "in": "query",
            "description": "Defines whether the alarm must be acknowledged on a client portal.",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/misc/currencies": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get All Currencies",
        "description": "Returns a collection resource representation of all currencies.",
        "operationId": "GetCurrencies",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Currency"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 1,
    "name": "Zimbabwe Dollar",
    "code": "ZWD"
  },
  {
    "id": 2,
    "name": "Rand",
    "code": "ZAR"
  },
  {
    "id": 3,
    "name": "CFA Franc BCEAO",
    "code": "XOF"
  },
  {
    "id": 4,
    "name": "Dong",
    "code": "VND"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/misc/countries": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get All Countries",
        "description": "Returns a collection resource representation of all countries.",
        "operationId": "GetCountries",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Country"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 3,
    "name": "Afghanistan",
    "code": "AF"
  },
  {
    "id": 4,
    "name": "Albania",
    "code": "AL"
  },
  {
    "id": 5,
    "name": "Algeria",
    "code": "DZ"
  },
  {
    "id": 6,
    "name": "American Samoa",
    "code": "DS"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/misc/usaStates": {
      "get": {
        "tags": [
          "Misc"
        ],
        "summary": "Get All USA States",
        "description": "Returns a collection resource representation of all USA states.",
        "operationId": "GetUsaStates",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/UsaState"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "id": 1,
    "name": "Alabama",
    "code": "AL"
  },
  {
    "id": 2,
    "name": "Alaska",
    "code": "AK"
  },
  {
    "id": 3,
    "name": "Arizona",
    "code": "AZ"
  },
  {
    "id": 4,
    "name": "Arkansas",
    "code": "AR"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/enterpriseManagers": {
      "get": {
        "tags": [
          "Enterprise Manager"
        ],
        "summary": "Get All Veeam Backup Enterprise Manager servers",
        "description": "Returns a collection resource representation of all Veeam Backup Enterprise Manager servers.",
        "operationId": "GetEnterpriseManagers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EnterpriseManager"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
    "name": "R2EM",
    "managementAgentUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
    "installationUid": "449d7978-83c1-4c5d-8053-76b784fea768",
    "version": "11.0.0.837",
    "status": "Healthy"
  },
  {
    "instanceUid": "f08824e5-8f34-4e42-bc7f-f1195298f419",
    "name": "R2EM2",
    "managementAgentUid": "4ef5db78-8023-43fd-862f-dc2a3fb29af1",
    "installationUid": "1a314e39-8fa2-4346-b168-ba97b0bfd59c",
    "version": "11.0.0.837",
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/enterpriseManagers/{enterpriseManagerUid}": {
      "get": {
        "tags": [
          "Enterprise Manager"
        ],
        "summary": "Get Veeam Backup Enterprise Manager Server",
        "description": "Returns a resource representation of a Veeam Backup Enterprise Manager server with the specified UID.",
        "operationId": "GetEnterpriseManager",
        "parameters": [
          {
            "name": "enterpriseManagerUid",
            "in": "path",
            "description": "Veeam Backup Enterprise Manager server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/EnterpriseManager"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
  "name": "R2EM",
  "managementAgentUid": "56ce444b-e0e8-474d-bb56-02bf695153d9",
  "installationUid": "449d7978-83c1-4c5d-8053-76b784fea768",
  "version": "11.0.0.837",
  "status": "Healthy"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/enterpriseManagers/{enterpriseManagerUid}/backupServers": {
      "get": {
        "tags": [
          "Enterprise Manager"
        ],
        "summary": "Get Backup Servers Managed by Veeam Backup Enterprise Manager Server",
        "description": "Returns a collection resource representation of all Veeam Backup & Replication servers that are managed by a Veeam Backup Enterprise Manager server with specified UID.",
        "operationId": "GetBackupServersByEnterpriseManager",
        "parameters": [
          {
            "name": "enterpriseManagerUid",
            "in": "path",
            "description": "Veeam Backup Enterprise Manager server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/EnterpriseManagerBackupServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
    "address": "vspc-srv",
    "port": 9392,
    "backupServer": {
      "instanceUid": "1e40c44a-a023-467b-93c6-b69524ece61d",
      "name": "VBR2",
      "organizationUid": "8cdd860e-7eaa-47c7-b2e4-bd03459533fb",
      "locationUid": "cd996541-f7d9-4ab1-bd30-ea423be03951",
      "managementAgentUid": "738809af-c878-4622-bcaf-af45ede11500",
      "version": "11.0.0.837",
      "displayVersion": "11.0.0.837 P20210507",
      "installationUid": "81c0b20d-c7d1-4783-966d-38e7e8f72102",
      "backupServerRoleType": "Client",
      "status": "Healthy"
    }
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/voneServers": {
      "get": {
        "tags": [
          "Veeam ONE Server"
        ],
        "summary": "Get All Connected Veeam ONE Servers",
        "description": "Returns a collection resource representation of all Veeam ONE servers connected to Veeam Service Provider Console.",
        "operationId": "GetVOneServers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/VOneServer"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "locationUid": "2619179b-1604-43e7-a331-71833cefbdd3",
    "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
    "managementAgentUid": "a85c8e4b-87d0-4e41-9d68-3aabdc87767c",
    "installationUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
    "name": "one_srv",
    "version": "11.0.1.1798",
    "status": "Healthy"
  },
  {
    "instanceUid": "50aee0f1-2492-4b4a-ad36-d60f52955b23",
    "locationUid": "60f840a6-d684-4b1c-9ed5-05c0e18679d8",
    "organizationUid": "f8124f61-9725-4906-ab86-3cd5b082bd12",
    "managementAgentUid": "693df798-78f9-4cc0-9268-725c4ef9f01f",
    "installationUid": "50aee0f1-2492-4b4a-ad36-d60f52955b23",
    "name": "vone",
    "version": "11.0.1.1798",
    "status": "Healthy"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/voneServers/{vOneServerUid}": {
      "get": {
        "tags": [
          "Veeam ONE Server"
        ],
        "summary": "Get Connected Veeam ONE Server",
        "description": "Returns a resource representation of a connected Veeam ONE server with the specified UID.",
        "operationId": "GetVOneServer",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam ONE server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/VOneServer"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "locationUid": "2619179b-1604-43e7-a331-71833cefbdd3",
  "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
  "managementAgentUid": "a85c8e4b-87d0-4e41-9d68-3aabdc87767c",
  "installationUid": "a2144b16-88b4-40b2-9d40-15c945525a9d",
  "name": "one_srv",
  "version": "11.0.1.1798",
  "status": "Inaccessible"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/voneServers/{vOneServerUid}/collect": {
      "post": {
        "tags": [
          "Veeam ONE Server"
        ],
        "summary": "Enforce Data Collection from Connected Veeam ONE Server",
        "description": "Enforces data collection from a connected Veeam ONE server with the specified UID.\n>Returns a positive response when the collection task is added to the internal queue and not when the task is executed.\n",
        "operationId": "ForceCollectVOneServer",
        "parameters": [
          {
            "name": "vOneServerUid",
            "in": "path",
            "description": "Veeam ONE server UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/infrastructure/vbm365Servers": {
      "get": {
        "tags": [
          "Veeam Backup for Microsoft 365 Server"
        ],
        "summary": "Get All Connected Veeam Backup fot Microsoft 365 Servers.",
        "description": "Returns a collection resource representation of all connected Veeam Backup for Microsoft 365 servers.",
        "operationId": "GetVbm365Servers",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Vbm365Server"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": null,
    "locationUid": "2619179b-1604-43e7-a331-71833cefbdd3",
    "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
    "managementAgentUid": "a85c8e4b-87d0-4e41-9d68-3aabdc87767c",
    "installationUid": null,
    "name": "vbm2",
    "version": "6.0.0.422",
    "status": "Inaccessible"
  },
  {
    "instanceUid": null,
    "locationUid": "dfac74cc-9ef8-4589-8a96-658a62410af7",
    "organizationUid": "5cf88541-56bc-4f3e-a9e1-0a0a07e7abfc",
    "managementAgentUid": "5f5d5270-c6b6-49f0-8d6c-5de6bf746129",
    "installationUid": null,
    "name": "vbm3",
    "version": "6.0.0.422",
    "status": "Inaccessible"
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 2,
                      "count": 2,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/vbm365Servers/{vbm365ServerUid}": {
      "get": {
        "tags": [
          "Veeam Backup for Microsoft 365 Server"
        ],
        "summary": "Get Connected Veeam Backup for Microsoft 365 Server",
        "description": "Returns a resource representation of a connected Veeam Backup for Microsoft 365 server with the specified UID.",
        "operationId": "GetVbm365Server",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 Server UID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Vbm365Server"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": null,
  "locationUid": "2619179b-1604-43e7-a331-71833cefbdd3",
  "organizationUid": "8eaca6f2-72c4-4352-bf27-915d1e02d91d",
  "managementAgentUid": "a85c8e4b-87d0-4e41-9d68-3aabdc87767c",
  "installationUid": null,
  "name": "vbm2",
  "version": "6.0.0.422",
  "status": "Healthy"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "LocationUser",
          "CompanyOwner",
          "Subtenant",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderUser",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator",
          "Read-onlyUser"
        ]
      }
    },
    "/infrastructure/vbm365Servers/{vbm365ServerUid}/collect": {
      "post": {
        "tags": [
          "Veeam Backup for Microsoft 365 Server"
        ],
        "summary": "Enforce Data Collection from Veeam Backup for Microsoft 365 Server",
        "description": "Enforces data collection from a Veeam Backup for Microsoft 365 server with the specified UID.\n>Returns a positive response when the collection task is added to the internal queue and not when the task is executed.'\n",
        "operationId": "ForceCollectVbm365Server",
        "parameters": [
          {
            "name": "vbm365ServerUid",
            "in": "path",
            "description": "Veeam Backup for Microsoft 365 Server UID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-fire-and-forget": true,
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "LocationAdministrator",
          "CompanyOwner",
          "PortalOperator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderOperator",
          "ServiceProviderAdministrator",
          "SiteAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/pulse": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get VCSP Pulse Configuration",
        "description": "Returns a resource representation of VCSP Pulse plugin configuration.",
        "operationId": "GetPulseConfiguration",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "token": null,
  "status": "Configured",
  "statusMessage": "",
  "isCompanyMappingEnabled": true,
  "isLicenseManagementEnabled": false,
  "isPushingNewCompaniesToPulseEnabled": false,
  "lastUpdateDate": "2021-08-16T07:30:42.1800083+02:00",
  "tokenExpirationDate": "2022-02-18T00:59:00+01:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/PulseConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Pulse"
        ],
        "summary": "Modify VCSP Pulse Configuration",
        "description": "Modifies VCSP Pulse plugin configuration.\n> To disconnect the plugin, replace the `token` property value with `null`.\n",
        "operationId": "PatchPulseConfiguration",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJsdWIiOiJpbnRlZ3JhdGlvbi10ZWFtIiwiaXNzIjoiaW50ZWdyYXRpb24tdGVhbSIsImlhdCI6MTYxMzU1Nzc4NSwiZXhwIjoxNjQ1MTQyMzQwLCJjb21wYW55SWQiOjI5MjAzOX0.VKwy5pw28i1r1TEK44w5CiXgxRiYkHLRGjkVdKjC2e4",
    "path": "/token",
    "op": "add"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseConfiguration"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "token": null,
  "status": "Configured",
  "statusMessage": "",
  "isCompanyMappingEnabled": false,
  "isLicenseManagementEnabled": false,
  "isPushingNewCompaniesToPulseEnabled": false,
  "lastUpdateDate": "2021-08-16T07:30:42.1800083+02:00",
  "tokenExpirationDate": "2022-02-18T00:59:00+01:00"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/PulseConfiguration"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/sync": {
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Synchronize with VCSP Pulse Portal",
        "description": "Initiates synchronization with the VCSP Pulse portal.",
        "operationId": "SyncPulseData",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/contracts": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get All Rental Agreement Contracts",
        "description": "Returns a collection resource representation of all rental agreement contracts.",
        "operationId": "GetPulseLicenseContracts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PulseLicenseContract"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "contractId": "02429772",
    "expirationDate": "2021-11-30T01:00:00+01:00",
    "pointsLimit": null,
    "automaticExtensionAlwaysOn": false
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 1,
                      "count": 1,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/products": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get Veeam Products Available in VCSP Pulse",
        "description": "Returns a collection resource representation of all Veeam products managed in VCSP Pulse.",
        "operationId": "GetPulseLicenseProducts",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PulseLicenseProduct"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "productId": "VBR_PLS_11_0_0",
    "name": "Veeam Backup & Replication",
    "edition": "Enterprise Plus",
    "version": "11.0.0",
    "workloads": [
      {
        "workloadId": "Cloud VM_VBR_PLS_11_0_0",
        "name": "Cloud VM",
        "multiplier": 11.0
      },
      {
        "workloadId": "File Share_VBR_PLS_11_0_0",
        "name": "File Share",
        "multiplier": 10.0
      },
      {
        "workloadId": "Server_VBR_PLS_11_0_0",
        "name": "Server",
        "multiplier": 11.0
      },
      {
        "workloadId": "VM_VBR_PLS_11_0_0",
        "name": "VM",
        "multiplier": 11.0
      },
      {
        "workloadId": "Workstation_VBR_PLS_11_0_0",
        "name": "Workstation",
        "multiplier": 4.0
      },
      {
        "workloadId": "Enterprise Application_VBR_PLS_11_0_0",
        "name": "Enterprise Application",
        "multiplier": 11.0
      }
    ]
  },
  {
    "productId": "VBR_ENT_11_0_0",
    "name": "Veeam Backup & Replication",
    "edition": "Enterprise",
    "version": "11.0.0",
    "workloads": [
      {
        "workloadId": "Cloud VM_VBR_ENT_11_0_0",
        "name": "Cloud VM",
        "multiplier": 11.0
      },
      {
        "workloadId": "File Share_VBR_ENT_11_0_0",
        "name": "File Share",
        "multiplier": 10.0
      },
      {
        "workloadId": "Server_VBR_ENT_11_0_0",
        "name": "Server",
        "multiplier": 11.0
      },
      {
        "workloadId": "VM_VBR_ENT_11_0_0",
        "name": "VM",
        "multiplier": 9.0
      },
      {
        "workloadId": "Workstation_VBR_ENT_11_0_0",
        "name": "Workstation",
        "multiplier": 4.0
      }
    ]
  },
  {
    "productId": "VBR_STD_11_0_0",
    "name": "Veeam Backup & Replication",
    "edition": "Standard",
    "version": "11.0.0",
    "workloads": [
      {
        "workloadId": "Cloud VM_VBR_STD_11_0_0",
        "name": "Cloud VM",
        "multiplier": 11.0
      },
      {
        "workloadId": "File Share_VBR_STD_11_0_0",
        "name": "File Share",
        "multiplier": 10.0
      },
      {
        "workloadId": "Server_VBR_STD_11_0_0",
        "name": "Server",
        "multiplier": 11.0
      },
      {
        "workloadId": "VM_VBR_STD_11_0_0",
        "name": "VM",
        "multiplier": 5.0
      },
      {
        "workloadId": "Workstation_VBR_STD_11_0_0",
        "name": "Workstation",
        "multiplier": 4.0
      }
    ]
  },
  {
    "productId": "VCC_000_11_0_0",
    "name": "Veeam Cloud Connect",
    "edition": null,
    "version": "11.0.0",
    "workloads": [
      {
        "workloadId": "Backup VM_VCC_000_11_0_0",
        "name": "Backup VM",
        "multiplier": 5.0
      },
      {
        "workloadId": "Replica VM_VCC_000_11_0_0",
        "name": "Replica VM",
        "multiplier": 10.0
      },
      {
        "workloadId": "Server_VCC_000_11_0_0",
        "name": "Server",
        "multiplier": 7.0
      },
      {
        "workloadId": "Workstation_VCC_000_11_0_0",
        "name": "Workstation",
        "multiplier": 3.0
      }
    ]
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/licenses": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get All Licenses Managed in VCSP Pulse",
        "description": "Rerurns a collection resource representation of all licenses managed in VCSP Pulse.",
        "operationId": "GetPulseLicenses",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PulseLicense"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a167dd86-10a9-4614-98e5-f1662b42d72b",
    "licenseId": null,
    "type": "Rental",
    "assignStatus": "NotAssigned",
    "usageType": "SingleCustomerUse",
    "contractId": "02429772",
    "createdBy": "My Company",
    "productId": "ONE_000_11_0_0",
    "description": null,
    "expirationDate": "2021-11-14T07:30:54.9969626+01:00",
    "points": 2.0,
    "automaticExtensionStatus": "Off",
    "assignedCompanyUid": null,
    "assignedResellerUid": null
  },
  {
    "instanceUid": "680082f3-f9a4-4529-b926-9960980845e2",
    "licenseId": null,
    "type": "Rental",
    "assignStatus": "NotAssigned",
    "usageType": "SingleCustomerUse",
    "contractId": "02429772",
    "createdBy": "My Company",
    "productId": "VAG_000_5_0_0",
    "description": null,
    "expirationDate": "2021-11-14T07:30:58.2550042+01:00",
    "points": 15.0,
    "automaticExtensionStatus": "Off",
    "assignedCompanyUid": null,
    "assignedResellerUid": null
  },
  {
    "instanceUid": "1fdac531-8b29-44e1-9151-a439c025b9d8",
    "licenseId": null,
    "type": "Rental",
    "assignStatus": "NotAssigned",
    "usageType": "SingleCustomerUse",
    "contractId": "02429772",
    "createdBy": "My Company",
    "productId": "VBO_000_5_0_0",
    "description": null,
    "expirationDate": "2021-11-14T07:31:01.2813891+01:00",
    "points": 2.0,
    "automaticExtensionStatus": "Off",
    "assignedCompanyUid": null,
    "assignedResellerUid": null
  },
  {
    "instanceUid": "16b3d1e2-7cb0-4075-8272-64d921ba5a33",
    "licenseId": "9f69a062-223d-3064-04a0-271efb577b9d",
    "type": "Rental",
    "assignStatus": "Assigned",
    "usageType": "SingleCustomerUse",
    "contractId": "02429772",
    "createdBy": "My Company",
    "productId": "VBR_ENT_11_0_0",
    "description": "PulseTenant 2021-08-16 05:32",
    "expirationDate": "2021-11-14T01:00:00+01:00",
    "points": 45.0,
    "automaticExtensionStatus": "Off",
    "assignedCompanyUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
    "assignedResellerUid": null
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Add License to VCSP Pulse",
        "description": "Adds a new license configuration with the specified parameters to VCSP Pulse.",
        "operationId": "CreatePulseLicense",
        "parameters": [
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "License parameters.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PulseLicenseInput"
              },
              "example": {
  "productId": "VBR_PLS_11_0_0",
  "contractId": "02429772",
  "description": null,
  "expirationDate": "2021-11-14T07:31:07.3352853+01:00",
  "type": "Rental",
  "isAutomaticExtensionEnabled": false,
  "workloads": [
    {
      "workloadId": "Cloud VM_VBR_PLS_11_0_0",
      "count": 1
    },
    {
      "workloadId": "File Share_VBR_PLS_11_0_0",
      "count": 1
    },
    {
      "workloadId": "Server_VBR_PLS_11_0_0",
      "count": 1
    },
    {
      "workloadId": "VM_VBR_PLS_11_0_0",
      "count": 1
    },
    {
      "workloadId": "Workstation_VBR_PLS_11_0_0",
      "count": 1
    },
    {
      "workloadId": "Enterprise Application_VBR_PLS_11_0_0",
      "count": 1
    }
  ]
}
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "304db407-35fe-4ff9-8229-1847c6f3b71b",
  "licenseId": null,
  "type": "Rental",
  "assignStatus": "NotAssigned",
  "usageType": "SingleCustomerUse",
  "contractId": "02429772",
  "createdBy": "My Company",
  "productId": "VBR_STD_11_0_0",
  "description": null,
  "expirationDate": "2021-11-14T07:31:10.3588903+01:00",
  "points": 41.0,
  "automaticExtensionStatus": "Off",
  "assignedCompanyUid": null,
  "assignedResellerUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/licenses/{licenseUid}": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get License Managed in VCSP Pulse",
        "description": "Rerurns a resource representation of a license managed in VCSP Pulse with the specified UID.",
        "operationId": "GetPulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "16b3d1e2-7cb0-4075-8272-64d921ba5a33",
  "licenseId": "9f69a062-223d-3064-04a0-271efb577b9d",
  "type": "Rental",
  "assignStatus": "Assigned",
  "usageType": "SingleCustomerUse",
  "contractId": "02429772",
  "createdBy": "My Company",
  "productId": "VBR_ENT_11_0_0",
  "description": "autoMapPulseTenant 2021-08-16 05:32",
  "expirationDate": "2021-11-14T01:00:00+01:00",
  "points": 45.0,
  "automaticExtensionStatus": "Off",
  "assignedCompanyUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
  "assignedResellerUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/PulseLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Pulse"
        ],
        "summary": "Modify License Managed in VCSP Pulse",
        "description": "Modifies a license managed in VCSP Pulse with the specified UID.",
        "operationId": "PatchPulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
    "path": "/assignedCompanyUid",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "16b3d1e2-7cb0-4075-8272-64d921ba5a33",
  "licenseId": "9f69a062-223d-3064-04a0-271efb577b9d",
  "type": "Rental",
  "assignStatus": "Assigned",
  "usageType": "SingleCustomerUse",
  "contractId": "02429772",
  "createdBy": "My Company",
  "productId": "VBR_ENT_11_0_0",
  "description": null,
  "expirationDate": "2021-11-14T07:31:04.3092592+01:00",
  "points": 45.0,
  "automaticExtensionStatus": "Off",
  "assignedCompanyUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
  "assignedResellerUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/PulseLicense"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "delete": {
        "tags": [
          "Pulse"
        ],
        "summary": "Delete License Managed in VCSP Pulse.",
        "description": "Deletes a license managed in VCSP Pulse with the specified UID.",
        "operationId": "DeletePulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/licenses/{licenseUid}/copy": {
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Copy License Managed in VCSP Pulse",
        "description": "Creates a copy of a license managed in VCSP Pulse with the specified UID.",
        "operationId": "CopyPulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseLicense"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "9b0843d3-7f6b-4204-86aa-1d1d1be28a0d",
  "licenseId": null,
  "type": "Rental",
  "assignStatus": "NotAssigned",
  "usageType": "SingleCustomerUse",
  "contractId": "02429772",
  "createdBy": "PulseReseller",
  "productId": "VBR_ENT_11_0_0",
  "description": null,
  "expirationDate": "2021-11-14T07:35:54.0154411+01:00",
  "points": 45.0,
  "automaticExtensionStatus": "Off",
  "assignedCompanyUid": null,
  "assignedResellerUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/licenses/{licenseUid}/revoke": {
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Revoke License Managed in VCSP Pulse",
        "description": "Revokes a license managed in VCSP Pulse with the specified UID.",
        "operationId": "RevokePulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmptyResponse"
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/licenses/{licenseUid}/download": {
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Download License Managed in VCSP Pulse",
        "description": "Downloads a license managed in VCSP Pulse with the specified UID.",
        "operationId": "DownloadPulseLicense",
        "parameters": [
          {
            "name": "licenseUid",
            "in": "path",
            "description": "License UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "License file in the Base64 format.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "string",
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": "PD94bWwgdmVyc2lvbj8iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxMaWNlbnNlcz48TGljZW5zZT48IVtDREFUQVtBZGRpdGlvbmFsIFNpZ25hdHVyZT1GNDQxRjk0NzU3MEU1MjVCMTc3QTdGNUVEM0ZGQjExRjc2MDY0N0Q4RkZCNTJGRkJGQURDRDc0NjIzRTA0MUE4MTkxRTFDNDUwMzY5NjRFMEJENUQ0REYyOEJDNDc1NjFDMEY0MjNDMTlGRDU0MDdDMzdGQUU2NUFEQjc1NERFMzlCNDQzNUVEQzMxODUzRTRFQzJGNzZENUFGRDIxMEYyOTExMzIxQzRBNzkwQUIwMTA2NkYzMDE1NTU5QTlCODdEMEY5NUJDQkM2QzM5QzQ5RTQ5M0VCNkQ5N0E2NzI1OEVCMjZDNzg4RTc2MTA5NUVFMDI3QzU4QzY1NDI2QzFGNzI3NTNDRkFDMUU2MjA0MTA5OThFNzNCRkI2MjQ1Rjk5NTMzMUVBRUQ5QzM1NjlGNDdCRUQ0NkJDODhGOEUyODI4OEVDREJCMDlFNjNCQTI3NjQzNDg2RDM3MTFBMjJFN0QwQzI2OEI5MjE5QkI2RDgwRkMxRjJBOTk1QURBN0RCQzVBRjlDMEE0MkE1Q0EzQTcyMzY3RTk5RjU0NkU4RTRBODYzQzlGRjg2M0E0QkMyOUJFQkVEQTg5Nzk0RkREMkQ2RjVEM0Q1Q0NDNjJDMjk0MkRFMEJBN0UwM0ZEMjhFMEFGMDJCRDU5MDdGQkU1REE1QTJEMTIxMzQ0RTc4RjI3OTUzNEM2MkQ4M0ZEMTUzQ0MyNEZEMzIxNTRGMEQ0NEU5MkM4RkY2NEExRDQ4M0U5MDM0N0Q3NkUzOEI1M0E5REQ2QUI3MUUxMTcxN0YzMDNFREMwMDU0MzkwODhGMzY0M0RFN0Q5RjU1RUYwOUZFN0IzNjc1NjFDOTkxNzcwMzgyQzI1NTk0ODgyM0MxMUFFNjgzQTY4RjREMzU5OUQ0NDE5Q0YwRkY0MUU1RkVFODMyRTFFOTZERUNFOUMxQzQ0NjBGNEYxRDRBMERFRDhEODFENjU3NDA2RERDNDk3MzVFQTlGN0ZGN0Y2MjZFODdBMkYwREMwODIwMUY1MzQNCkNsb3VkIENvbm5lY3Q9Tm8NCkNvbXBhbnk9RmFycmVsbCBhbmQgQmxhY2tidXJuIFRyYWRpbmcNCkRlc2NyaXB0aW9uPUNvcHlyaWdodCAyMDIxIFZlZWFtIFNvZnR3YXJlLiBBbGwgUmlnaHRzIFJlc2VydmVkLiBVc2Ugb2Ygc29mdHdhcmUgaXMgZ292ZXJuZWQgYnkgdGhlIHNvZnR3YXJlIGxpY2Vuc2UgYWdyZWVtZW50Lg0KRS1tYWlsPXl1cmkua3VuaXZlckB2ZWUuYW0NCkVkaXRpb249RW50ZXJwcmlzZQ0KSW5zdGFuY2VzPTQ1DQpMaWNlbnNlIElEPTlGNjlBMDYyLTIyM0QtMzA2NC0wNEEwLTI3MUVGQjU3N0I5RA0KTGljZW5zZSBleHBpcmVzPTE0LzExLzIwMjENCkxpY2Vuc2UgdHlwZT1SZW50YWwNClBhY2thZ2U9QmFja3VwDQpTdXBwb3J0IElEPTAyNDI5NzcyDQpTaWduYXR1cmU9OTkxNTE5NDAxNjQzRDBEODcwNDk4RkY0QTk5MkVDMzdGQzBGODg2OUVDNjMyQkNFMzFDOEE3NkYyRjgxM0JCNjk3RkY1NDA5QkQ2NkZGNDAyNTQ5QUFBNTZCQ0QyOEFFQzk2NkQ3QkIxQTUzMzY4QTk3OTUxNEEyNzY3NTZBMjY1Qzc1Q0JBQkEwNkUyMDEwRUM0NUQ1NkJDMkI0NDY0NzkyRkVCQjczMTUzRjUxNjMyNDI4NDM2NDU5RURBNDA3NkY2QzVBMDg1MUMyRTI4MjYxQjA2NzkwMURGNTkwQjZGRjM5OUUzNkE4NEM4RUY2MjcwRkYwN0Y2Q0RGRDI1RQ0KXV0+PC9MaWNlbnNlPjwvTGljZW5zZXM+DQo="
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "CompanyOwner",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator",
          "CompanyAdministrator"
        ]
      }
    },
    "/pulse/tenants": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get All VCSP Pulse Tenants",
        "description": "Returns a collection resource representation of all VCSP Pulse tenants.",
        "operationId": "GetPulseTenants",
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "Specifies the conditions that a resource must meet to be returned in the output.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-filter": true
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Specifies the order in which resources are returned from the collection.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-sort": true
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Specifies the first N resources that must be returned in the output.",
            "schema": {
              "maximum": 500,
              "minimum": 1,
              "type": "integer",
              "format": "int32",
              "default": 100
            },
            "x-veeam-pagination-limit": true
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Excludes the first N resources from the query output.",
            "schema": {
              "maximum": 2147483647,
              "minimum": 0,
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-veeam-pagination-offset": true
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/PulseTenant"
                      },
                      "readOnly": true
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": [
  {
    "instanceUid": "a7m0100000006gNAAQ",
    "mappingStatus": "NotMapped",
    "mappingStatusMessage": null,
    "name": "PulseResTenant",
    "mappedMasterOrganizationUid": null,
    "mergedOrganizationUids": []
  },
  {
    "instanceUid": "a7m0100000006gIAAQ",
    "mappingStatus": "NotMapped",
    "mappingStatusMessage": null,
    "name": "PulseResTenant1",
    "mappedMasterOrganizationUid": null,
    "mergedOrganizationUids": []
  },
  {
    "instanceUid": "a7m0100000006UgAAI",
    "mappingStatus": "NotMapped",
    "mappingStatusMessage": null,
    "name": "PulseResTenant2",
    "mappedMasterOrganizationUid": null,
    "mergedOrganizationUids": []
  },
  {
    "instanceUid": "a7m0100000006XaAAI",
    "mappingStatus": "NotMapped",
    "mappingStatusMessage": null,
    "name": "PulseResTenant3",
    "mappedMasterOrganizationUid": null,
    "mergedOrganizationUids": []
  }
],
                  "meta": {
                    "pagingInfo": {
                      "total": 4,
                      "count": 4,
                      "offset": 0
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Create VCSP Pulse Tenant",
        "description": "Creates a VCSP Pulse tenant based on a specific company.",
        "operationId": "CreatePulseTenantByCompany",
        "parameters": [
          {
            "name": "companyUid",
            "in": "query",
            "description": "Company UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "rewriteExisting",
            "in": "query",
            "description": "Defines whether a company must be mapped to an existing tenant with the same name.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseTenant"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "304db407-35fe-4ff9-8229-1847c6f3b71b",
  "licenseId": null,
  "type": "Rental",
  "assignStatus": "NotAssigned",
  "usageType": "SingleCustomerUse",
  "contractId": "02429772",
  "createdBy": "My Company",
  "productId": "VBR_STD_11_0_0",
  "description": null,
  "expirationDate": "2021-11-14T07:31:10.3588903+01:00",
  "points": 41.0,
  "automaticExtensionStatus": "Off",
  "assignedCompanyUid": null,
  "assignedResellerUid": null
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/tenants/{tenantUid}": {
      "get": {
        "tags": [
          "Pulse"
        ],
        "summary": "Get VCSP Pulse Tenant",
        "description": "Returns a resource representation of a VCSP Pulse tenant with the specified UID.",
        "operationId": "GetPulseTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "VCSP Pulse tenant UID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseTenant"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a7m0100000006XaAAI",
  "mappingStatus": "Mapped",
  "mappingStatusMessage": null,
  "name": "PulseTenant",
  "mappedMasterOrganizationUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
  "mergedOrganizationUids": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-get-for": {
          "$ref": "#/components/schemas/PulseTenant"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      },
      "patch": {
        "tags": [
          "Pulse"
        ],
        "summary": "Modify VCSP Pulse Tenant",
        "description": "Modifies a VCSP Pulse tenant with the specified UID.",
        "operationId": "PatchPulseTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "VCSP Pulse tenant UID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "requestBody": {
          "description": "Array of JSON Patch operations according to RFC 6902.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatches"
              },
              "example": [
  {
    "value": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
    "path": "/mappedMasterOrganizationUid",
    "op": "replace"
  }
]
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/PulseTenant"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "a7m0100000006XaAAI",
  "mappingStatus": "Mapped",
  "mappingStatusMessage": null,
  "name": "AlphaPulseTenant",
  "mappedMasterOrganizationUid": "bb06d148-37f8-4480-bb0b-943c53cfc3cc",
  "mergedOrganizationUids": []
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-patch-for": {
          "$ref": "#/components/schemas/PulseTenant"
        },
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    },
    "/pulse/tenants/{tenantUid}/createCompany": {
      "post": {
        "tags": [
          "Pulse"
        ],
        "summary": "Create Company from VCSP Tenant",
        "description": "Creates a company based on VCSP Pulse tenant with the specified UID.",
        "operationId": "CreateCompanyByPulseTenant",
        "parameters": [
          {
            "name": "tenantUid",
            "in": "path",
            "description": "VCSP Pulse tenant UID.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "siteUid",
            "in": "query",
            "description": "Site UID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "gatewayPoolUid",
            "in": "query",
            "description": "Gateway pool UID.",
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "X-Request-id",
            "in": "header",
            "description": "Random UID required to enable asynchronous processing.",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "example": "ba547d14-c556-42bb-b85c-eeeb16e2f5e7"
          },
          {
            "name": "X-Client-Version",
            "in": "header",
            "description": "Version of Veeam Service Provider Console RESTful API supported by client.",
            "schema": {
              "type": "string"
            },
            "example": "3.2"
          },
          {
            "name": "select",
            "in": "query",
            "description": "Returns explicitly requested properties.",
            "schema": {
              "type": "string"
            },
            "x-veeam-pagination-select": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "$ref": "#/components/schemas/ResponseMetadata"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Organization"
                    },
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ResponseError"
                      },
                      "nullable": true,
                      "readOnly": true
                    }
                  }
                },
                "example": {
                  "data": {
  "instanceUid": "501e7a55-736a-42ca-8969-b613679a1993",
  "name": "ExonCo",
  "alias": "exonco",
  "type": "Company",
  "taxId": "09876",
  "email": "m.lore@exonco.com",
  "phone": "503-254-0212",
  "country": 1,
  "state": 37,
  "city": "Portland",
  "street": "5006 Gateway Road",
  "notes": null,
  "zipCode": 97220,
  "website": "www.exonco.com",
  "companyId": "exonco"
}
                }
              }
            }
          },
          "202": {
            "description": "Request has been queued for execution.",
            "headers": {
              "Location": {
                "description": "Contains a link to the async action tracking endpoint. Example: https://vspc:1280/api/v3/asyncActions/97431954-0dd7-472a-8cb7-d0cb0fbccaf7",
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "description": "All client errors (400–499) are returned with the associated HTTP status codes. All server errors (≥500) are returned with the 520 HTTP status code. For details, see the response body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": [ ]
          }
        ],
        "x-veeam-vspc-admitted-roles": [
          "PortalAdministrator",
          "ServiceProviderGlobalAdministrator",
          "ServiceProviderAdministrator"
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "FilterParameter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FilterExpression"
        },
        "description": "Array of the `filter` query expressions.",
        "nullable": true
      },
      "SortParameter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SortExpression"
        },
        "description": "Array of the `sort` query expressions.",
        "nullable": true
      },
      "Collation": {
        "enum": [
          "ordinal",
          "ignorecase",
          "lexicographic"
        ],
        "type": "string",
        "description": "Type of rules that determine how specified values are compared with resource property values.",
        "nullable": true
      },
      "FilterExpression": {
        "required": [
          "operation"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "description": "Path to the required resource property.",
            "nullable": true
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FilterExpression"
            },
            "description": "Inner expressions. Can be used only with `and`, `or` and `not` operation.",
            "nullable": true
          },
          "operation": {
            "enum": [
              "in",
              "contains",
              "subset",
              "superset",
              "equals",
              "notEquals",
              "lessThan",
              "lessThanOrEqual",
              "greaterThan",
              "greaterThanOrEqual",
              "exclusiveOr",
              "or",
              "and",
              "not"
            ],
            "type": "string",
            "description": "Filter operation.",
            "x-ms-enum": {
              "name": "FilterOperation"
            }
          },
          "collation": {
            "$ref": "#/components/schemas/Collation"
          },
          "value": {
            "type": "object",
            "description": "Resource property value.",
            "nullable": true
          }
        }
      },
      "SortExpression": {
        "required": [
          "property",
          "direction"
        ],
        "type": "object",
        "properties": {
          "property": {
            "type": "string",
            "description": "Path to the required resource property."
          },
          "direction": {
            "enum": [
              "ascending",
              "descending"
            ],
            "type": "string",
            "description": "Direction specifier.",
            "default": "ascending",
            "x-ms-enum": {
              "name": "SortDirection"
            }
          },
          "collation": {
            "$ref": "#/components/schemas/Collation"
          }
        }
      },
      "SelectParameter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SelectExpression"
        },
        "description": "Array of the `select` query expressions.",
        "nullable": true
      },
      "SelectExpression": {
        "required": [
          "propertyPath"
        ],
        "type": "object",
        "properties": {
          "propertyPath": {
            "type": "string",
            "description": "Path to the required resource property."
          }
        }
      },
      "AsyncActionInfo": {
        "required": [
          "id",
          "initiatorUid",
          "actionName",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "UID assigned to an async action.",
            "format": "uuid"
          },
          "initiatorUid": {
            "type": "string",
            "description": "UID assigned to a user who initiates an async action.",
            "format": "uuid"
          },
          "actionName": {
            "type": "string",
            "description": "Name of async action. Used only for debug purposes."
          },
          "status": {
            "enum": [
              "running",
              "succeed",
              "canceled",
              "failed"
            ],
            "type": "string",
            "description": "Current stage of a long running action.",
            "x-ms-enum": {
              "name": "AsyncActionStatus"
            }
          }
        },
        "readOnly": true
      },
      "AsyncActionsConfig": {
        "required": [
          "resultRetentionTime"
        ],
        "type": "object",
        "properties": {
          "resultRetentionTime": {
            "type": "integer",
            "description": "Amount of time an async action result is retained, in seconds.",
            "format": "int32"
          }
        },
        "readOnly": true
      },
      "JsonPatches": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/JsonPatch"
        }
      },
      "JsonPatch": {
        "required": [
          "op",
          "value",
          "path"
        ],
        "type": "object",
        "properties": {
          "op": {
            "enum": [
              "add",
              "replace",
              "test",
              "remove",
              "move",
              "copy"
            ],
            "type": "string",
            "description": "Performed operation."
          },
          "value": {
            "type": "string",
            "description": "Value that is added, replaced, tested or removed by the PATCH operation."
          },
          "from": {
            "type": "string",
            "description": "JSON Pointer containing path to a location from which data is moved or copied.",
            "nullable": true
          },
          "path": {
            "type": "string",
            "description": "JSON Pointer containing path to a target location where the PATCH operation is performed."
          }
        },
        "externalDocs": {
          "description": "Link to RFC 6902.",
          "url": "https://tools.ietf.org/html/rfc6902"
        }
      },
      "Alarm": {
        "required": [
          "name",
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an alarm template.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of an alarm template."
          },
          "category": {
            "enum": [
              "Unknown",
              "ManagementAgent",
              "Location",
              "Company",
              "User",
              "Internal",
              "BackupAgent",
              "VmFailoverPlan",
              "BackupServer",
              "EnterpriseManager",
              "BackupProxy",
              "BackupRepository",
              "BackupVmJob",
              "BackupServerAgentJob",
              "BackupWanAccelerator",
              "BackupCloudGateway",
              "BackupLicense",
              "BackupTenantRepository",
              "SureBackupJob",
              "BackupAgentJob",
              "DiscoveryRule",
              "Integrator",
              "Site",
              "Reseller",
              "ResellerCloudRepository",
              "BackupMicrosoft365Server",
              "OneServer"
            ],
            "type": "string",
            "description": "Category of an alarm template.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "AlarmCategoryType"
            }
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "internalId": {
            "type": "integer",
            "description": "ID assigned to an alarm template in Veeam Service Provider Console internal alarm database.",
            "format": "int32",
            "readOnly": true
          },
          "knowledge": {
            "$ref": "#/components/schemas/AlarmKnowledge"
          },
          "isPredifined": {
            "type": "boolean",
            "description": "Indicates whether an alarm template is predefined.",
            "readOnly": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": " Indicates whether an alarm template is enabled."
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "fcdb7145-3634-4d34-99fd-138879cd9c2c",
          "name": "Job state",
          "category": "BackupVmJob",
          "organizationUid": "39f65b4c-a7d2-451e-936d-aeae418b53e1",
          "internalId": 1,
          "knowledge": {
            "summary": "Job is in a disabled state for more than an allowed time period.",
            "cause": "Veeam Backup & Replication server allows to disable scheduled backup jobs during maintenance windows. If backup job stays in a disabled state for more than an allowed time period, it should be enabled back.",
            "resolution": "Open Veeam Backup & Replication console and enable all disabled backup jobs."
          },
          "isPredifined": true,
          "isEnabled": false
        }
      },
      "AlarmKnowledge": {
        "type": "object",
        "properties": {
          "summary": {
            "type": "string",
            "description": "General description of an alarm template.",
            "readOnly": true
          },
          "cause": {
            "type": "string",
            "description": "Possible causes of an alarm trigger.",
            "readOnly": true
          },
          "resolution": {
            "type": "string",
            "description": "Recommended solutions.",
            "readOnly": true
          }
        },
        "description": "Knowledge base for an alarm template.",
        "readOnly": true
      },
      "ActiveAlarm": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a triggered alarm.",
            "format": "uuid",
            "readOnly": true
          },
          "alarmTemplateUid": {
            "type": "string",
            "description": "UID assigned to an alarm template.",
            "format": "uuid",
            "readOnly": true
          },
          "repeatCount": {
            "type": "integer",
            "description": "Number of times that an alarm changed its status.",
            "format": "int32",
            "readOnly": true
          },
          "object": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/AlarmObject"
              }
            ],
            "description": "Alarm object.",
            "readOnly": true
          },
          "lastActivation": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LastAlarmActivation"
              }
            ],
            "description": "Latest alarm activation.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "08b46982-1160-4804-bb12-6227b521972e",
          "alarmTemplateUid": "5cf175f4-d596-4636-bf8e-f166516418df",
          "repeatCount": 3,
          "object": {
            "instanceUid": "baf8d020-fb95-41ba-be4f-89b44dca4fcd",
            "type": "ObjectEntity",
            "companyUid": "39f65b4c-a7d2-451e-936d-aeae418b53e1",
            "locationUid": "5523b04d-077b-4526-a219-4533d6f23987",
            "managementAgentUid": "d4b32a13-0b1b-4e7f-9050-309fa0eb7055",
            "computerName": "ws-5floor",
            "objectName": "Premium repository"
          },
          "lastActivation": {
            "instanceUid": "86477f51-389e-49bb-9480-25dc9abc71d2",
            "time": "2020-01-12T23:20:50.5200000+00:00",
            "status": "Error",
            "message": "Free space (2.55%, 1.01 GB) is below the defined threshold (5%).\r\n",
            "remark": "\r\n"
          }
        }
      },
      "AlarmObject": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an object for which an alarm was triggered.",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "ManagementAgent",
              "Location",
              "Company",
              "User",
              "Internal",
              "ObjectEntity",
              "DiscoveryRule",
              "Integrator",
              "Reseller",
              "Site",
              "ResellerCloudRepository",
              "BackupAgent",
              "FailoverPlan",
              "BackupServer",
              "BackupServerJob",
              "EnterpriseManagerServer",
              "BackupProxy",
              "BackupRepository",
              "BackupWanAccelerator",
              "CloudGateway",
              "CloudRepository",
              "VOneServer",
              "BackupMicrosoft365Server"
            ],
            "type": "string",
            "description": "Object type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "AlarmObjectType"
            }
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to a organization for which an alarm was triggered.",
            "format": "uuid",
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a location for which an alarm was triggered.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a managed agent that is installed on an alarm object.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "computerName": {
            "type": "string",
            "description": "Name of a computer for which an alarm was triggered.",
            "readOnly": true
          },
          "objectUid": {
            "type": "string",
            "description": "UID assigned to an alarm object.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "objectName": {
            "type": "string",
            "description": "Name of an alarm object.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "LastAlarmActivation": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to the last alarm trigger.",
            "format": "uuid",
            "readOnly": true
          },
          "time": {
            "type": "string",
            "description": "Date and time of the last alarm trigger.",
            "format": "date-time",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Resolved",
              "Info",
              "Warning",
              "Error",
              "Acknowledged"
            ],
            "type": "string",
            "description": "Alarm status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "AlarmStatus"
            }
          },
          "message": {
            "type": "string",
            "description": "Cause of the alarm trigger.\n> Every line break is represented by the `\\r\\n` control characters.\n",
            "nullable": true,
            "readOnly": true
          },
          "remark": {
            "type": "string",
            "description": "Comment to the resolved alarm.\n> Every line break is represented by the `\\r\\n` control characters.\n",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WelcomeEmailOptions": {
        "required": [
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password for created account.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "Reseller": {
        "required": [
          "quota"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "proPartnerId": {
            "type": "string",
            "description": "ProPartner Portal ID assigned to a reseller.",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "Name of a reseller.\n> Can be changed using the `PatchOrganization` operation.\n",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Disabled"
            ],
            "type": "string",
            "description": "Reseller status.",
            "default": "Active",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ResellerStatus"
            }
          },
          "permissions": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "REST"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "OrganizationPermission"
              }
            },
            "description": "Array of the Veeam Service Provider Console components that a reseller can access.",
            "readOnly": true
          },
          "quota": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResellerQuota"
              }
            ],
            "description": "Reseller quota."
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForOrganizationChildren"
          }
        },
        "description": "",
        "readOnly": true
      },
      "ResellerQuota": {
        "type": "object",
        "properties": {
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "serversQuota": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "description": "Maximum number of client servers that a reseller can manage.\n> If quota is unlimited, the property value is 0.\n",
            "format": "int32",
            "nullable": true
          },
          "isServersQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a reseller can manage an unlimited number of company servers.",
            "default": true
          },
          "workstationsQuota": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "description": "Maximum number of client workstations that a reseller can manage.\n> If quota is unlimited, the property value is 0.\n",
            "format": "int32",
            "nullable": true
          },
          "isWorkstationsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a reseller can manage an unlimited number of company workstations.",
            "default": true
          },
          "dataTransferOutQuota": {
            "maximum": 1073740750258176,
            "minimum": 1073741824,
            "type": "integer",
            "description": "Maximum amount of data transfer out traffic available to a reseller, in bytes.\n> If quota is unlimited, the property value is 0.'\n",
            "format": "int64",
            "nullable": true
          },
          "isDataTransferOutQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the amount of data transfer out traffic available to a reseller is unlimited.",
            "default": true
          },
          "insiderProtectionQuota": {
            "maximum": 99,
            "type": "integer",
            "description": "Number of days during which deleted backup files of reseller clients must be kept in the recycle bin by the service provider.",
            "format": "int32",
            "default": 0,
            "nullable": true
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled for replication jobs of reseller clients.",
            "default": false
          }
        },
        "description": ""
      },
      "ResellerLicenseResource": {
        "type": "object",
        "properties": {
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "pulseConfigurationStatus": {
            "enum": [
              "Unknown",
              "NotConfigured",
              "Configured",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Status of VCSP Pulse configuration.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseConfigurationStatus"
            }
          },
          "pulseConfigurationStatusMessage": {
            "type": "string",
            "description": "Status message.",
            "readOnly": true
          },
          "isLicenseManagementEnabled": {
            "type": "boolean",
            "description": "Indicates whether license management is enabled for a reseller.",
            "default": false
          },
          "licenseContractId": {
            "type": "string",
            "description": "ID assigned to a license rental agreement contract.",
            "nullable": true
          },
          "licensePointsQuota": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "description": "Number of license points available to a reseller.",
            "format": "int32",
            "nullable": true
          },
          "isLicensePointsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a reseller can use an unlimited number of licanse points.",
            "default": true
          },
          "licensePointsUsage": {
            "type": "number",
            "description": "Number of license points used by a reseller.",
            "format": "double",
            "readOnly": true
          },
          "isCreatingNewCompaniesToPulseEnabled": {
            "type": "boolean",
            "description": "Indicates whether a reseller can add new companies to VCSP Pulse.",
            "readOnly": true
          }
        },
        "description": "",
        "readOnly": true
      },
      "ResellerSiteResource": {
        "required": [
          "siteUid"
        ],
        "type": "object",
        "properties": {
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid"
          },
          "tenantsQuota": {
            "maximum": 99999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of companies that a reseller can manage on a site.",
            "format": "int32",
            "default": 20,
            "nullable": true
          },
          "usedTenantsQuota": {
            "type": "integer",
            "description": "Number of companies that a reseller manages on a site",
            "format": "int32",
            "readOnly": true
          },
          "isTenantsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a reseller has unlimited quota for managed companies.",
            "default": false
          }
        },
        "description": "",
        "readOnly": true,
        "example": {
          "siteUid": "38AB1C08-B0DA-4D76-8995-5011DBE96E18",
          "tenantsQuota": 20,
          "isTenantsQuotaUnlimited": false
        }
      },
      "ResellerSiteBackupResource": {
        "required": [
          "repositoryUid",
          "resourceFriendlyName"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a cloud backup resource.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a cloud backup repository.",
            "format": "uuid"
          },
          "resourceFriendlyName": {
            "type": "string",
            "description": "Cloud repository friendly name configured for a reseller."
          },
          "storageQuota": {
            "type": "integer",
            "description": "Amount of space allocated to a reseller, in bytes.",
            "format": "int64",
            "nullable": true
          },
          "isStorageQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the amount of space allocated to a reseller is unlimited.",
            "default": true
          },
          "serversQuota": {
            "type": "integer",
            "description": "Number of servers that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isServersQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of servers that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          },
          "workstationsQuota": {
            "type": "integer",
            "description": "Number of workstations that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isWorkstationsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of workstations that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          },
          "vmsQuota": {
            "type": "integer",
            "description": "Number of VMs that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isVmsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of VMs that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          }
        },
        "description": "",
        "readOnly": true
      },
      "ResellerSiteBackupResourceInput": {
        "required": [
          "repositoryUid",
          "resourceFriendlyName"
        ],
        "type": "object",
        "properties": {
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a cloud backup repository.",
            "format": "uuid"
          },
          "resourceFriendlyName": {
            "type": "string",
            "description": "Cloud repository friendly name configured for a reseller."
          },
          "storageQuota": {
            "type": "integer",
            "description": "Amount of space allocated to a reseller, in bytes.",
            "format": "int64",
            "nullable": true
          },
          "isStorageQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the amount of space allocated to a reseller is unlimited.",
            "default": true
          },
          "serversQuota": {
            "type": "integer",
            "description": "Number of servers that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isServersQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of servers that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          },
          "workstationsQuota": {
            "type": "integer",
            "description": "Number of workstations that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isWorkstationsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of workstations that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          },
          "vmsQuota": {
            "type": "integer",
            "description": "Number of VMs that a reseller can store on a cloud backup repository.",
            "format": "int32",
            "nullable": true
          },
          "isVmsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the number of VMs that a reseller can store on a cloud backup repository is unlimited.",
            "default": true
          }
        },
        "description": ""
      },
      "ResellerSiteBackupResourceUsage": {
        "type": "object",
        "properties": {
          "backupResourceUid": {
            "type": "string",
            "description": "UID assigned to a cloud backup resource.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "storageQuota": {
            "type": "integer",
            "description": "Amount of space allocated to a reseller, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "usedStorageQuota": {
            "type": "integer",
            "description": "Amount of space consumed by all companies of a reseller, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "archiveTierUsage": {
            "type": "integer",
            "description": "Amount of archive tier space consumed by all companies of a reseller, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "capacityTierUsage": {
            "type": "integer",
            "description": "Amount of capacity tier space consumed by all company backups excluding backup copies, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "perfomanceTierUsage": {
            "type": "integer",
            "description": "Amount of performance tier space consumed by all companies of a reseller, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "serverBackups": {
            "type": "integer",
            "description": "Number of server backups that a reseller stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          },
          "workstationBackups": {
            "type": "integer",
            "description": "Number of workstation backups that a reseller stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          },
          "vmBackups": {
            "type": "integer",
            "description": "Number of VM backups that a reseller stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ResellerSiteReplicationResource": {
        "required": [
          "hardwarePlanUid"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a cloud replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid"
          },
          "tenantsPerPlanQuota": {
            "type": "integer",
            "description": "Maximum number of companies that a reseller can subscribe to a hardware plan.",
            "format": "int32",
            "nullable": true
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "",
        "readOnly": true
      },
      "ResellerSiteReplicationResourceInput": {
        "required": [
          "hardwarePlanUid"
        ],
        "type": "object",
        "properties": {
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid"
          },
          "tenantsPerPlanQuota": {
            "type": "integer",
            "description": "Maximum number of companies that a reseller can subscribe to a hardware plan.",
            "format": "int32",
            "nullable": true
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": ""
      },
      "ResellerSiteReplicationResourceUsage": {
        "type": "object",
        "properties": {
          "replicationResourceUid": {
            "type": "string",
            "description": "UID assigned to a cloud replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "readOnly": true
          },
          "tenantsPerPlanUsage": {
            "type": "integer",
            "description": "Number of companies that are subscribe to a hardware plan.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ResellerSiteVcdReplicationResource": {
        "required": [
          "vcdOrganizationUid"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a reseller VMware Cloud Director replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "vcdOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization whose resources are allocated to a reseller.",
            "format": "uuid"
          }
        },
        "readOnly": true
      },
      "ResellerSiteVcdReplicationResourceInput": {
        "required": [
          "vcdOrganizationUid"
        ],
        "type": "object",
        "properties": {
          "vcdOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization whose resources are allocated to a reseller.",
            "format": "uuid"
          }
        }
      },
      "ResellerInput": {
        "required": [
          "organizationInput",
          "quota",
          "ownerCredentials"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Description of a reseller.",
            "nullable": true
          },
          "proPartnerId": {
            "type": "string",
            "description": "ProPartner Portal ID assigned to a reseller.",
            "nullable": true
          },
          "organizationInput": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrganizationInput"
              }
            ],
            "description": "Reseller organization settings."
          },
          "quota": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResellerQuota"
              }
            ],
            "description": "Service quota configured for a reseller."
          },
          "ownerCredentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OwnerCredentials"
              }
            ],
            "description": "User credentials configured for Service Provider Global Administrator."
          },
          "permissions": {
            "$ref": "#/components/schemas/ResellerPermissionsNullable"
          }
        }
      },
      "Provider": {
        "required": [
          "instanceUid"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a service provider.",
            "format": "uuid"
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForOrganizationChildren"
          }
        },
        "readOnly": true
      },
      "Company": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a company.\n> Can be changed using the `PatchOrganization` operation.\n",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "Disabled",
              "Expired",
              "Creating",
              "Deleting",
              "Deleted",
              "SiteResourceCreationFailed",
              "SiteResourceCreating",
              "SiteResourceUpdating",
              "SiteResourceUpdateFailed"
            ],
            "type": "string",
            "description": "Status of a service provider. You can set the `Active` or `Disabled` value using the PATCH method.",
            "default": "Active",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CompanyStatus"
            }
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller that manages the company.",
            "format": "uuid",
            "nullable": true
          },
          "subscriptionPlanUid": {
            "type": "string",
            "description": "UID assigned to a company subscription plan.",
            "format": "uuid",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "REST"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "OrganizationPermission"
              }
            },
            "description": "Array of the Veeam Service Provider Console components that a company can access.",
            "readOnly": true
          },
          "IsAlarmDetectEnabled": {
            "type": "boolean",
            "description": "Indicates whether a company must receive notifications about alarms that were triggered for this company.",
            "default": false
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForOrganizationChildren"
          }
        },
        "readOnly": true
      },
      "EmbeddedForOrganizationChildren": {
        "type": "object",
        "properties": {
          "organization": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Organization"
              }
            ],
            "description": "Resource representation of an organization.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Resource representation of the related organization entity.",
        "nullable": true,
        "readOnly": true
      },
      "CompanyInput": {
        "required": [
          "organizationInput"
        ],
        "type": "object",
        "properties": {
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller that manages the company.",
            "format": "uuid",
            "nullable": true
          },
          "organizationInput": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OrganizationInput"
              }
            ],
            "description": "Company properties."
          },
          "subscriptionPlanUid": {
            "type": "string",
            "description": "UID assigned to a company subscription plan.",
            "format": "uuid",
            "nullable": true
          },
          "permissions": {
            "$ref": "#/components/schemas/CompanyPermissionsNullable"
          },
          "IsAlarmDetectEnabled": {
            "type": "boolean",
            "description": "Defines whether a company must receive notifications about alarms that were triggered for this company.",
            "default": false
          }
        }
      },
      "ResellerPermissions": {
        "type": "array",
        "items": {
          "enum": [
            "Unknown",
            "REST"
          ],
          "type": "string",
          "x-extensible-enum": true,
          "x-ms-enum": {
            "name": "OrganizationPermission"
          }
        },
        "description": "Array of the Veeam Service Provider Console components that a reseller can access.",
        "readOnly": true
      },
      "ResellerPermissionsNullable": {
        "type": "array",
        "items": {
          "enum": [
            "Unknown",
            "REST"
          ],
          "type": "string",
          "x-extensible-enum": true,
          "x-ms-enum": {
            "name": "OrganizationPermission"
          }
        },
        "description": "Array of the Veeam Service Provider Console components that a reseller can access.",
        "nullable": true
      },
      "CompanyPermissions": {
        "type": "array",
        "items": {
          "enum": [
            "Unknown",
            "REST"
          ],
          "type": "string",
          "x-extensible-enum": true,
          "x-ms-enum": {
            "name": "OrganizationPermission"
          }
        },
        "description": "Array of the Veeam Service Provider Console components that a company can access.",
        "readOnly": true
      },
      "CompanyPermissionsNullable": {
        "type": "array",
        "items": {
          "enum": [
            "Unknown",
            "REST"
          ],
          "type": "string",
          "x-extensible-enum": true,
          "x-ms-enum": {
            "name": "OrganizationPermission"
          }
        },
        "description": "Array of the Veeam Service Provider Console components that a company can access.",
        "nullable": true
      },
      "CompanySiteResource": {
        "required": [
          "siteUid",
          "ownerCredentials"
        ],
        "type": "object",
        "properties": {
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid"
          },
          "cloudTenantType": {
            "enum": [
              "Unknown",
              "General",
              "VCD"
            ],
            "type": "string",
            "description": "Tenant type in Veeam Cloud Connect.",
            "default": "General",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudTenantType"
            }
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "cloudTenantUid": {
            "type": "string",
            "description": "UID assigned to a company tenant.",
            "format": "uuid",
            "readOnly": true
          },
          "vCloudOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization.",
            "format": "uuid",
            "nullable": true
          },
          "lastActive": {
            "type": "string",
            "description": "The last time when a tenant was active.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "leaseExpirationEnabled": {
            "type": "boolean",
            "description": "Indicates whether a company account must be disabled automatically.",
            "default": false
          },
          "leaseExpirationDate": {
            "type": "string",
            "description": "Date and time when a company account must be disabled.",
            "format": "date-time",
            "nullable": true
          },
          "ownerCredentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/OwnerCredentials"
              }
            ],
            "description": "Company owner credentials or username of a tenant account configured for a VMware Cloud Director organization."
          },
          "description": {
            "type": "string",
            "description": "Company description.",
            "nullable": true
          },
          "throttlingEnabled": {
            "type": "boolean",
            "description": "Indicates whether incoming network traffic that will be accepted from a company is limited.",
            "default": false
          },
          "throttlingValue": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum incoming network traffic bandwidth that will be accepted from a company.",
            "format": "int32",
            "default": 1
          },
          "throttlingUnit": {
            "enum": [
              "MbitPerSec",
              "KbytePerSec",
              "MbytePerSec"
            ],
            "type": "string",
            "description": "Measurement units for incoming network traffic accepted from a company.",
            "default": "MbytePerSec",
            "x-ms-enum": {
              "name": "SpeedUnit"
            }
          },
          "maxConcurrentTask": {
            "maximum": 10000,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum number of concurrent tasks available to a company.",
            "format": "int32",
            "default": 1
          },
          "backupProtectionEnabled": {
            "type": "boolean",
            "description": "Indicates whether deleted backup file protection is enabled.",
            "default": false
          },
          "backupProtectionPeriodDays": {
            "maximum": 99,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days during which deleted backup files must be kept in the recycle bin on the Veeam Cloud Connect server.",
            "format": "int32",
            "default": 7
          },
          "gatewaySelectionType": {
            "enum": [
              "Unknown",
              "StandaloneGateways",
              "GatewayPool"
            ],
            "type": "string",
            "description": "Type of cloud gateway selection.",
            "default": "StandaloneGateways",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "GatewaySelectionType"
            }
          },
          "gatewayPoolsUids": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Collection of UIDs assigned to gateway pools that are allocated to a company. If the collection is empty, company will automatically use a standalone gateway.",
            "nullable": true
          },
          "isGatewayFailoverEnabled": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to fail over to a cloud gateway that is not added to a selected cloud gateway pool.",
            "default": false
          }
        },
        "readOnly": true
      },
      "CompanySiteTrafficResource": {
        "type": "object",
        "properties": {
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "dataTransferOutQuota": {
            "maximum": 1073740750258176,
            "minimum": 1073741824,
            "type": "integer",
            "description": "Maximum amount of data transfer out traffic available to a company, in bytes.\n> Minimum value is equal to 1 GB. <br>\n> If quota is unlimited, the property value is 0.'\n",
            "format": "int64",
            "nullable": true
          },
          "isDataTransferOutQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether the amount of data transfer out traffic available to a company is unlimited.",
            "default": true
          }
        },
        "readOnly": true
      },
      "CompanySiteBackupResource": {
        "required": [
          "repositoryUid",
          "cloudRepositoryName",
          "storageQuota"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a site backup resource allocated to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a cloud repository.",
            "format": "uuid"
          },
          "cloudRepositoryName": {
            "type": "string",
            "description": "Name of a cloud backup repository."
          },
          "storageQuota": {
            "minimum": 1073741824,
            "type": "integer",
            "description": "Amount of space allocated to a company on a cloud repository, in bytes.",
            "format": "int64"
          },
          "serversQuota": {
            "type": "integer",
            "description": "Maximum number of Veeam backup agents in the Server mode that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isServersQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of Veeam backup agents in the Server mode on a cloud repository.",
            "default": true
          },
          "workstationsQuota": {
            "type": "integer",
            "description": "Maximum number of Veeam backup agents in the Workstation mode that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isWorkstationsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of Veeam backup agents in the Workstation mode on a cloud repository.",
            "default": true
          },
          "vmsQuota": {
            "type": "integer",
            "description": "Maximum number of VMs that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isVmsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of VMs on a cloud repository.",
            "default": true
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether the repository is used by default.",
            "default": false
          }
        },
        "readOnly": true
      },
      "CompanySiteBackupResourceInput": {
        "required": [
          "repositoryUid",
          "cloudRepositoryName",
          "storageQuota"
        ],
        "type": "object",
        "properties": {
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a cloud repository.",
            "format": "uuid"
          },
          "cloudRepositoryName": {
            "type": "string",
            "description": "Name of a cloud backup repository."
          },
          "storageQuota": {
            "minimum": 1073741824,
            "type": "integer",
            "description": "Amount of space allocated to a company on a cloud repository, in bytes.",
            "format": "int64"
          },
          "serversQuota": {
            "type": "integer",
            "description": "Maximum number of Veeam backup agents in the Server mode that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isServersQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of Veeam backup agents in the Server mode on a cloud repository.",
            "default": true
          },
          "workstationsQuota": {
            "type": "integer",
            "description": "Maximum number of Veeam backup agents in the Workstation mode that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isWorkstationsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of Veeam backup agents in the Workstation mode on a cloud repository.",
            "default": true
          },
          "vmsQuota": {
            "type": "integer",
            "description": "Maximum number of VMs that a company is allowed to store on a cloud repository.",
            "format": "int32",
            "nullable": true
          },
          "isVmsQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a company is allowed to store an unlimited number of VMs on a cloud repository.",
            "default": true
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Defines whether a cloud repository is set by default.",
            "default": false
          }
        },
        "description": ""
      },
      "CompanySiteBackupResourceUsage": {
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "backupResourceUid": {
            "type": "string",
            "description": "UID assigned to a cloud backup resource.",
            "format": "uuid",
            "readOnly": true
          },
          "storageQuota": {
            "type": "integer",
            "description": "Amount of space allocated to a company, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "usedStorageQuota": {
            "type": "integer",
            "description": "Amount of space consumed by a company, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "archiveTierUsage": {
            "type": "integer",
            "description": "Amount of archive tier space consumed by a company, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "capacityTierUsage": {
            "type": "integer",
            "description": "Amount of capacity tier space consumed by all company backups excluding backup copies, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "perfomanceTierUsage": {
            "type": "integer",
            "description": "Amount of performance tier space consumed by a company, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "serverBackups": {
            "type": "integer",
            "description": "Number of server backups that a company stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          },
          "workstationBackups": {
            "type": "integer",
            "description": "Number of workstation backups that a company stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          },
          "vmBackups": {
            "type": "integer",
            "description": "Number of VM backups that a company stores on a cloud repository.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "CompanySiteReplicationResourceInput": {
        "type": "object",
        "properties": {
          "hardwarePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySiteReplicationResourceHardwarePlan"
            },
            "description": "Array of hardware plans.",
            "x-veeam-empty-array-by-default": true
          },
          "isFailoverCapabilitiesEnabled": {
            "type": "boolean",
            "description": "Indicates whether performing failover is available to a company.",
            "default": false
          },
          "isPublicAllocationEnabled": {
            "type": "boolean",
            "description": "Indicates whether public IP addresses are allocated to a company.",
            "default": false,
            "nullable": true
          },
          "numberOfPublicIps": {
            "minimum": 0,
            "type": "integer",
            "description": "Number of allocated public IP addresses.",
            "format": "int32",
            "default": 0,
            "nullable": true
          }
        }
      },
      "CompanySiteReplicationResourceHardwarePlan": {
        "required": [
          "hardwarePlanUid"
        ],
        "type": "object",
        "properties": {
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid"
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "CompanySiteReplicationResource": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a cloud replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "hardwarePlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySiteReplicationResourceHardwarePlan"
            },
            "description": "Array of hardware plans.",
            "x-veeam-empty-array-by-default": true
          },
          "isFailoverCapabilitiesEnabled": {
            "type": "boolean",
            "description": "Indicates whether performing failover is available to a company.",
            "default": false
          },
          "isPublicAllocationEnabled": {
            "type": "boolean",
            "description": "Indicates whether public IP addresses are allocated to a company.",
            "default": false
          },
          "numberOfPublicIps": {
            "type": "integer",
            "description": "Number of allocated public IP addresses.",
            "format": "int32",
            "default": 0
          }
        },
        "readOnly": true
      },
      "CompanySiteReplicationResourceUsage": {
        "type": "object",
        "properties": {
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "vCPUsConsumed": {
            "type": "integer",
            "description": "Number of replicated VMs vCPUs.",
            "format": "int32",
            "readOnly": true
          },
          "memoryUsage": {
            "type": "integer",
            "description": "Amount of RAM consumed by company replicas, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "storageUsage": {
            "type": "integer",
            "description": "Amount of cloud storage space consumed by company replicas, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "hostsCoresCount": {
            "type": "integer",
            "description": "Number of physical cores in cloud hosts.",
            "format": "int32",
            "readOnly": true
          },
          "numberOfVms": {
            "type": "integer",
            "description": "Number of replicated VMs.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "CompanySiteReplicationResourceNetworkAppliance": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a network extension appliance.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "Name of a network extension appliance."
          },
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a host on which network extension appliance is deployed.",
            "nullable": true,
            "readOnly": true
          },
          "rootHostName": {
            "type": "string",
            "description": "Name of a root host on which network extension appliance is deployed.",
            "nullable": true,
            "readOnly": true
          },
          "externalNetworkName": {
            "type": "string",
            "description": "Name of an external production network.",
            "readOnly": true
          },
          "tcpIpSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NetworkApplianceTcpIpSettings"
              }
            ],
            "description": "IP addressing settings for the configured network extension appliance.",
            "x-veeam-create-by-default": true
          }
        },
        "readOnly": true
      },
      "NetworkApplianceTcpIpSettings": {
        "type": "object",
        "properties": {
          "dhcpEnabled": {
            "type": "boolean",
            "description": "Indicates whether IP address is automatically assigned to network extension appliance by a DHCP server.",
            "default": true
          },
          "ipAddress": {
            "pattern": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$",
            "type": "string",
            "description": "IP address of a network extension appliance.\n> The `null` value indicates that IP address is automatically assigned by a DHCP server.\n",
            "nullable": true
          },
          "subnetMask": {
            "pattern": "^(((255\\.){3}(255|254|252|248|240|224|192|128+))|((255\\.){2}(255|254|252|248|240|224|192|128|0+)\\.0)|((255\\.)(255|254|252|248|240|224|192|128|0+)(\\.0+){2})|((255|254|252|248|240|224|192|128|0+)(\\.0+){3}))$",
            "type": "string",
            "description": "Subnet mask of a network extension appliance.\n> The `null` value indicates that IP address is automatically assigned by a DHCP server.\n",
            "nullable": true
          },
          "defaultGateway": {
            "pattern": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$",
            "type": "string",
            "description": "Default gateway of a network extension appliance.\n> The `null` value indicates that IP address is automatically assigned by a DHCP server.        \n",
            "nullable": true
          }
        }
      },
      "CompanySiteReplicationResourceVcdNetworkAppliance": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a network extension appliance.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "Name of a network extension appliance."
          },
          "dataCenterUid": {
            "type": "string",
            "description": "UID assigned to an organization VDC.",
            "format": "uuid",
            "readOnly": true
          },
          "dataCenterName": {
            "type": "string",
            "description": "Name of an organization VDC.",
            "nullable": true,
            "readOnly": true
          },
          "tcpIpSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NetworkApplianceTcpIpSettings"
              }
            ],
            "description": "IP addressing settings for the configured network extension appliance.",
            "x-veeam-create-by-default": true
          }
        },
        "readOnly": true
      },
      "CompanySiteVcdReplicationResource": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "dataCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceDataCenter"
            },
            "description": "Array of data centers",
            "x-veeam-empty-array-by-default": true
          },
          "isFailoverCapabilitiesEnabled": {
            "type": "boolean",
            "description": "Indicates whether performing failover is available to a company.",
            "default": false
          }
        },
        "readOnly": true
      },
      "CompanySiteVcdReplicationResourceInput": {
        "type": "object",
        "properties": {
          "dataCenters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CompanySiteVcdReplicationResourceDataCenter"
            },
            "description": "Array of organization VDCs.",
            "x-veeam-empty-array-by-default": true
          },
          "isFailoverCapabilitiesEnabled": {
            "type": "boolean",
            "description": "Indicates whether performing failover is available to a company.",
            "default": false
          }
        },
        "description": ""
      },
      "CompanySiteVcdReplicationResourceDataCenter": {
        "required": [
          "dataCenterUid"
        ],
        "type": "object",
        "properties": {
          "dataCenterUid": {
            "type": "string",
            "description": "UID assigned to an organization VDC.",
            "format": "uuid"
          },
          "isWanAccelerationEnabled": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "default": false
          },
          "wanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "nullable": true
          }
        },
        "description": "",
        "readOnly": true
      },
      "CompanySiteVcdReplicationResourceUsage": {
        "type": "object",
        "properties": {
          "dataCenterUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director replication resource.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "cpuCountConsumed": {
            "type": "integer",
            "description": "Number of replicated VMs CPUs.",
            "format": "int32",
            "readOnly": true
          },
          "memoryUsage": {
            "type": "integer",
            "description": "Amount of RAM consumed by company replicas, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "storageUsage": {
            "type": "integer",
            "description": "Amount of space consumed by company replicas, in bytes.",
            "format": "int64",
            "readOnly": true
          }
        }
      },
      "OrganizationLocation": {
        "required": [
          "name",
          "quotaGb"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a location in Veeam Service Provider Console.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 512,
            "minLength": 1,
            "type": "string",
            "description": "Name of a location."
          },
          "quotaGb": {
            "maximum": 2147483647,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of storage space allocated to a location, in gigabytes.",
            "format": "int32"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether a location is default.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "4D9F193C-E3AC-48F5-B6DF-1AC31ECE8C6D",
          "organizationUid": "0466D829-22AC-4539-926D-25FBA2F5F989",
          "name": "Toronto",
          "quotaGb": 3,
          "isDefault": false
        }
      },
      "OrgContainer": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"]+$",
            "type": "string",
            "description": "Name of an organization."
          },
          "type": {
            "enum": [
              "Unknown",
              "DefaultCompanies",
              "DefaultResellers",
              "Custom"
            ],
            "type": "string",
            "description": "Type of an organization container.",
            "default": "Custom",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "OrgContainerType"
            }
          },
          "childrenOrganizations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to organizations in a container.",
            "nullable": true
          },
          "childrenContainers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to child organization containers.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "OrgContainerInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"]+$",
            "type": "string",
            "description": "Name of a container."
          },
          "childrenOrganizations": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to organizations that must be included in a container.",
            "nullable": true
          },
          "childrenContainers": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to child organization containers.",
            "nullable": true
          }
        }
      },
      "Organization": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"]+$",
            "type": "string",
            "description": "Name of an organization."
          },
          "alias": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\d\\!\\#\\$\\%\\&\\(\\)\\-\\.\\^\\\"\\_\\{\\}\\~\\'\\ \\`]+$",
            "type": "string",
            "description": "Alias of an organization.",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Company",
              "Provider",
              "Reseller"
            ],
            "type": "string",
            "description": "Type of an organization.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "OrganizationType"
            }
          },
          "taxId": {
            "maxLength": 100,
            "type": "string",
            "description": "Organization Tax ID.",
            "nullable": true
          },
          "email": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(\")?(?:[^\\.\"])(?:(?:[\\.])?(?:[\\w\\-!#$%&'*+\\/=?\\^_`{|}~]))*\\1@(\\w[\\-\\w]*\\.){1,5}([A-Za-z]){2,6}$",
            "type": "string",
            "description": "Contact email address.",
            "nullable": true
          },
          "phone": {
            "maxLength": 128,
            "type": "string",
            "description": "Telephone number of a primary contact of an organization.",
            "nullable": true
          },
          "country": {
            "minimum": 1,
            "type": "integer",
            "description": "System ID assigned to an organization country of residence.",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "minimum": 1,
            "type": "integer",
            "description": "System ID assigned to a USA state where an organization is located.",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "type": "string",
            "description": "City where an organization is located.",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "type": "string",
            "description": "Street where an organization is located.",
            "nullable": true
          },
          "notes": {
            "maxLength": 512,
            "type": "string",
            "description": " Additional information about an organization.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 128,
            "type": "string",
            "description": "Postal code.",
            "nullable": true
          },
          "website": {
            "maxLength": 128,
            "type": "string",
            "description": "Organization website.",
            "nullable": true
          },
          "companyId": {
            "maxLength": 128,
            "type": "string",
            "description": "ID of an organization used for 3rd party applications.",
            "nullable": true
          }
        },
        "description": "",
        "readOnly": true
      },
      "OrganizationInput": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"]+$",
            "type": "string",
            "description": "Name of an organization."
          },
          "alias": {
            "maxLength": 32,
            "minLength": 1,
            "pattern": "^[a-zA-Z\\d\\!\\#\\$\\%\\&\\(\\)\\-\\.\\^\\\"\\_\\{\\}\\~\\'\\ \\`]+$",
            "type": "string",
            "description": "Alias of an organization.",
            "nullable": true
          },
          "taxId": {
            "maxLength": 100,
            "type": "string",
            "description": "Organization Tax ID.",
            "nullable": true
          },
          "email": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^(\")?(?:[^\\.\"])(?:(?:[\\.])?(?:[\\w\\-!#$%&'*+\\/=?\\^_`{|}~]))*\\1@(\\w[\\-\\w]*\\.){1,5}([A-Za-z]){2,6}$",
            "type": "string",
            "description": "Contact email address.",
            "nullable": true
          },
          "phone": {
            "maxLength": 128,
            "type": "string",
            "description": "Telephone number of a primary contact of an organization.",
            "nullable": true
          },
          "country": {
            "minimum": 1,
            "type": "integer",
            "description": "System ID assigned to an organization country of residence.",
            "format": "int32",
            "nullable": true
          },
          "state": {
            "minimum": 1,
            "type": "integer",
            "description": "System ID assigned to a USA state where an organization is located.",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "maxLength": 128,
            "type": "string",
            "description": "City where an organization is located.",
            "nullable": true
          },
          "street": {
            "maxLength": 128,
            "type": "string",
            "description": "Street where an organization is located.",
            "nullable": true
          },
          "notes": {
            "maxLength": 512,
            "type": "string",
            "description": "Additional information about an organization.",
            "nullable": true
          },
          "zipCode": {
            "maxLength": 128,
            "type": "string",
            "description": "Postal code.",
            "nullable": true
          },
          "website": {
            "maxLength": 128,
            "type": "string",
            "description": "Organization website.",
            "nullable": true
          },
          "companyId": {
            "maxLength": 128,
            "type": "string",
            "description": "ID of an organization used for 3rd party applications.",
            "nullable": true
          }
        },
        "description": ""
      },
      "UnverifiedAgent": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a management agent.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization to which a management agent belongs.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a computer on which a management agent is deployed.",
            "nullable": true,
            "readOnly": true
          },
          "registrationTime": {
            "type": "string",
            "description": "Time when a management agent was registered.",
            "format": "date-time",
            "readOnly": true
          },
          "tag": {
            "type": "string",
            "description": "Additional information.",
            "nullable": true
          },
          "rejectReason": {
            "type": "string",
            "description": "Reason for management agent being unverified.",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "CloudConnect",
              "Client",
              "Hosted"
            ],
            "type": "string",
            "description": "Role of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentType"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Accepted",
              "Inaccessible",
              "Pending",
              "Rejected",
              "Applying"
            ],
            "type": "string",
            "description": "Status of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UnverifiedAgentStatus"
            }
          },
          "statusMessage": {
            "type": "string",
            "description": "Management agent status message.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "ManagementAgent": {
        "required": [
          "locationUid"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a management agent.",
            "format": "uuid",
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a location to which a management agent belongs.",
            "format": "uuid"
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization to which a management agent belongs.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a computer on which a management agent is deployed.",
            "nullable": true,
            "readOnly": true
          },
          "lastHeartbeatTime": {
            "type": "string",
            "description": "Date and time when a management agent on a computer sent the latest heartbeat.",
            "format": "date-time",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of a management agent deployed on a computer.",
            "readOnly": true
          },
          "discoveryTime": {
            "type": "string",
            "description": "Date and time when a computer was discovered.",
            "format": "date-time",
            "readOnly": true
          },
          "tag": {
            "maxLength": 128,
            "type": "string",
            "description": "Additional information.",
            "nullable": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Inaccessible",
              "Warning",
              "Updating",
              "Error",
              "Restarting",
              "Installation",
              "FailedToUpdate"
            ],
            "type": "string",
            "description": "Status of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentStatus"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "CloudConnect",
              "Client",
              "Hosted"
            ],
            "type": "string",
            "description": "Role of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentType"
            }
          },
          "computerInfo": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputerInfo"
              }
            ],
            "description": "Information about a computer on which a management agent is deployed.",
            "nullable": true,
            "readOnly": true
          },
          "connectionStatus": {
            "enum": [
              "Unknown",
              "Online",
              "Inaccessible",
              "Rejected"
            ],
            "type": "string",
            "description": "Connection status of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentConnectionStatus"
            }
          },
          "isRebootRequired": {
            "type": "boolean",
            "description": "Indicates whether computer reboot is required.",
            "readOnly": true
          },
          "connectionAccount": {
            "type": "string",
            "description": "Company owner user name that is used to connect a management agent to a cloud gateway.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "versionStatus": {
            "enum": [
              "Unknown",
              "UpToDate",
              "OutOfDate",
              "PatchAvailable"
            ],
            "type": "string",
            "description": "Status of a management agent version.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentVersionStatus"
            }
          },
          "role": {
            "enum": [
              "Unknown",
              "Master",
              "Client"
            ],
            "type": "string",
            "description": "Role of a management agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ManagementAgentRole"
            }
          }
        },
        "readOnly": true
      },
      "CloudAgent": {
        "required": [
          "siteName",
          "description"
        ],
        "type": "object",
        "properties": {
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Cloud Connect server on which a management agent is installed.",
            "format": "uuid",
            "readOnly": true
          },
          "siteName": {
            "type": "string",
            "description": "Name of a site."
          },
          "description": {
            "type": "string",
            "description": "Description of a site.",
            "nullable": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "description": "Information about a Veeam Cloud Connect server on which a management agent is deployed.",
        "readOnly": true
      },
      "ComputerInfo": {
        "type": "object",
        "properties": {
          "uniqueUid": {
            "type": "string",
            "description": "UID assigned to a computer.",
            "format": "uuid",
            "readOnly": true
          },
          "biosUuid": {
            "type": "string",
            "description": "UUID in Win32_ComputerSystem WMI class.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a computer.",
            "readOnly": true
          },
          "fqdn": {
            "type": "string",
            "description": "FQDN of a computer.",
            "readOnly": true
          },
          "guestOs": {
            "type": "string",
            "description": "Operating system installed on a computer.",
            "readOnly": true
          },
          "guestOsType": {
            "enum": [
              "Unknown",
              "Workstation",
              "DomainController",
              "Server",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Type of a computer operating system.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "OsType"
            }
          },
          "guestOsVersion": {
            "type": "string",
            "description": "Version of a computer operating system.",
            "readOnly": true
          },
          "guestOsSku": {
            "type": "integer",
            "description": "SKU of a computer operating system.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "platformType": {
            "enum": [
              "Unknown",
              "Windows",
              "HyperV",
              "Linux",
              "Mac",
              "vSphere",
              "Azure",
              "Amazon",
              "Other"
            ],
            "type": "string",
            "description": "Type of a computer platform.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PlatformType"
            }
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Computer IP addresses.",
            "readOnly": true
          },
          "macAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Computer MAC addresses.",
            "readOnly": true
          },
          "applications": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "OtherApp",
                "MicrosoftExchangeServer",
                "MicrosoftSqlServer",
                "MicrosoftActiveDirectory",
                "MicrosoftSharePoint",
                "Oracle",
                "MySQL",
                "PostgreSQL",
                "MongoDB",
                "ApacheServer"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "Application"
              }
            },
            "description": "Array of applications installed on a computer.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Information about a computer on which a management agent is deployed."
      },
      "BackupServer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a Veeam Backup & Replication server.",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization to which a management agent belongs.",
            "format": "uuid",
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server location.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent installed on a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of Veeam Backup & Replication installed on a server.",
            "readOnly": true
          },
          "displayVersion": {
            "type": "string",
            "description": "Version of Veeam Backup & Replication with additional information on installed patch version.",
            "readOnly": true
          },
          "installationUid": {
            "type": "string",
            "description": "UID assigned to Veeam Backup & Replication installation.",
            "readOnly": true
          },
          "backupServerRoleType": {
            "enum": [
              "Unknown",
              "CloudConnect",
              "Client",
              "Hosted"
            ],
            "type": "string",
            "description": "Role of a Veeam Backup & Replication server.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerRoleType"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Inaccessible"
            ],
            "type": "string",
            "description": "Backup server status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerStatus"
            }
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "name": "VBR",
          "managementAgentUid": "8BDD0D87-D160-40B5-88D3-E77A6F912AF6",
          "version": "9.5.4.1000",
          "installationUid": "C42C94E9-DB8A-4CF4-AF57-911EFA7FEE87"
        }
      },
      "BackupFailoverPlan": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a failover plan.",
            "format": "uuid",
            "readOnly": true
          },
          "originalUid": {
            "type": "string",
            "description": "UID assigned to a failover plan by Veeam Backup & Replication.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server on which a failover plan is configured.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a failover plan.",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud",
              "Tenant"
            ],
            "type": "string",
            "description": "Type of a failover plan.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "FailoverPlanType"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Ready",
              "InProgress",
              "InUndoProgress",
              "Success",
              "Failed",
              "Completed",
              "UndoFailed"
            ],
            "type": "string",
            "description": "Status of a failover plan.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "FailoverPlanState"
            }
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant for which a failover plan is configured.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "objectsCount": {
            "type": "integer",
            "description": "Number of objects in a job.",
            "format": "int32",
            "readOnly": true
          },
          "preFailoverScriptEnabled": {
            "type": "boolean",
            "description": "Indicates whether a custom script must be executed before a failover plan.",
            "nullable": true,
            "readOnly": true
          },
          "preFailoverCommand": {
            "type": "string",
            "description": "Path to a script file that is executed before a failover.\n> Property modification is performed asynchronously and cannot be tracked.\n",
            "nullable": true
          },
          "postFailoverCommand": {
            "type": "string",
            "description": "Path to a script file that is executed after a failover.\n> Property modification is performed asynchronously and cannot be tracked.\n",
            "nullable": true
          },
          "postFailoverScriptEnabled": {
            "type": "boolean",
            "description": "Indicates whether a custom script must be executed after a failover plan.",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "27a8baf5-179e-4eae-81d5-772aa2331562",
          "name": "Media servers Failover to Columbus",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "type": "Local",
          "objectsCount": 5,
          "status": "InProgress",
          "tenantUid": "ABC97BD3-4AE9-4841-8152-8FF5CC703678",
          "preFailoverCommand": "",
          "postFailoverCommand": ""
        }
      },
      "BackupFailoverPlanObject": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VM included in a failover plan.",
            "format": "uuid",
            "readOnly": true
          },
          "planUid": {
            "type": "string",
            "description": "UID assigned to a failover plan.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VM included in a failover plan.",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a host running the VM.",
            "readOnly": true
          },
          "folderName": {
            "type": "string",
            "description": "Name of a folder that contains replicas.",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Path to a folder that contains replicas.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "Veeam Backup & Replication server on which a failover plan is configured.",
            "format": "uuid",
            "readOnly": true
          },
          "restoreSession": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupFailoverPlanRestoreSession"
              }
            ],
            "description": "Information about a failover session. Can be obtained only from a server with Veeam Backup & Replication version 11 or later.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BackupFailoverPlanRestoreSession": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a protected VM.",
            "format": "uuid",
            "readOnly": true
          },
          "backupStatus": {
            "enum": [
              "Unknown",
              "Running",
              "Success",
              "Warning",
              "Failed"
            ],
            "type": "string",
            "description": "Status of a failover session.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupFailoverPlanRestoreSessionBackupStatus"
            }
          },
          "restorePointUid": {
            "type": "string",
            "description": "UID assigned to a replication restore point.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "restorePointDateTime": {
            "type": "string",
            "description": "Date and time of the replication restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "startDateTime": {
            "type": "string",
            "description": "Failover session start date and time.",
            "format": "date-time",
            "readOnly": true
          },
          "endDateTime": {
            "type": "string",
            "description": "Failover session end date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BackupHardwarePlan": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a hardware plan.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server on which a hardware plan is configured.",
            "format": "uuid",
            "readOnly": true
          },
          "cpuQuota": {
            "type": "integer",
            "description": "Maximum CPU resources that VM replicas can utilize, in MHz.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isCpuQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether CPU resources that VM replicas can utilize are unlimited.",
            "readOnly": true
          },
          "memoryQuota": {
            "type": "integer",
            "description": "Maximum RAM resources that VM replicas can utilize, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isMemoryQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether RAM resources that VM replicas can utilize are unlimited.",
            "readOnly": true
          },
          "networkWithInternetQuota": {
            "type": "integer",
            "description": "Number of IP networks with internet access that are available to tenant VM replicas.",
            "format": "int32",
            "readOnly": true
          },
          "networkWithoutInternetQuota": {
            "type": "integer",
            "description": "Number of IP networks without internet access that are available to tenant VM replicas.",
            "format": "int32",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "8db62bf7-581b-437b-b640-76212ff40b3a",
          "name": "Silver Hardware Plan",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "CpuQuota": 7770,
          "MemoryQuota": 7368000,
          "NetworkQuota": 3
        }
      },
      "BackupHardwarePlanStorage": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan storage.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Friendly name of a hardware plan storage.",
            "readOnly": true
          },
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "readOnly": true
          },
          "quota": {
            "type": "integer",
            "description": "Amount of disk space provided to a tenant.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "CloudTenant": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Cloud Connect tenant.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a tenant account.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of a tenant account.",
            "nullable": true,
            "readOnly": true
          },
          "hashedPassword": {
            "type": "string",
            "description": "Password of a tenant account.",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "General",
              "VCD"
            ],
            "type": "string",
            "description": "Type of a tenant account.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudTenantType"
            }
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Cloud Connect server.",
            "format": "uuid",
            "readOnly": true
          },
          "lastActive": {
            "type": "string",
            "description": "The last time when a tenant was active.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "gatewaySelectionType": {
            "enum": [
              "Unknown",
              "StandaloneGateways",
              "GatewayPool"
            ],
            "type": "string",
            "description": "Type of gateway selection.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudTenantGatewaySelectionType"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether a tenant account is enabled.",
            "readOnly": true
          },
          "isLeaseExpirationEnabled": {
            "type": "boolean",
            "description": "Indicates whether a tenant account must be disabled automatically.",
            "readOnly": true
          },
          "leaseExpirationDate": {
            "type": "string",
            "description": "Date and time when a company account must be disabled.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isBackupProtectionEnabled": {
            "type": "boolean",
            "description": "Indicates whether deleted backup file protection is enabled.",
            "readOnly": true
          },
          "backupProtectionPeriod": {
            "type": "integer",
            "description": "Number of days during which deleted backup files must be kept in the recycle bin on the Veeam Cloud Connect server.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "isGatewayFailoverEnabled": {
            "type": "boolean",
            "description": "Indicates whether a tenant is allowed to fail over to a cloud gateway that is not added to a selected cloud gateway pool.",
            "readOnly": true
          },
          "gatewayPoolsUids": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Collection of UIDs assigned to gateway pools that are allocated to a company.\n> If the collection is empty, company will automatically use a standalone gateway.\n",
            "nullable": true,
            "readOnly": true
          },
          "isThrottlingEnabled": {
            "type": "boolean",
            "description": "Indicates whether incoming network traffic that will be accepted from a tenant is limited.",
            "readOnly": true
          },
          "throttlingValue": {
            "type": "integer",
            "description": "Maximum incoming network traffic bandwidth that will be accepted from a tenant.\n> If throttling is disabled, the property value is `null`.\n",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "throttlingUnit": {
            "enum": [
              "MbitPerSec",
              "KbytePerSec",
              "MbytePerSec"
            ],
            "type": "string",
            "description": "Measurement units for incoming network traffic accepted from a company.\n> If throttling is disabled, the property value is `null`.\n",
            "nullable": true,
            "readOnly": true,
            "x-ms-enum": {
              "name": "SpeedUnit"
            }
          },
          "maxConcurrentTask": {
            "type": "integer",
            "description": "Maximum number of concurrent tasks available to a tenant.",
            "format": "int32",
            "readOnly": true
          },
          "isBackupResourcesEnabled": {
            "type": "boolean",
            "description": "Indicates whether cloud backup resources are allocated to a tenant.",
            "readOnly": true
          },
          "isNativeReplicationResourcesEnabled": {
            "type": "boolean",
            "description": "Indicates whether cloud replication resources are allocated to a tenant.",
            "readOnly": true
          },
          "isVcdReplicationResourcesEnabled": {
            "type": "boolean",
            "description": "Indicates whether organization VDCs are allocated to a tenant as cloud hosts.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "0000568E-F90F-4702-8151-CBE3CE2A8C10",
          "name": "Tenant01",
          "description": "Created by Veeam Service Provider Console at 01.01.2019",
          "hashedPassword": "5E884898DA28047151D0E56F8DC6292773603D0D6AABBDD62A11EF721D1542D8",
          "type": "General",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "gatewaySelectionType": "StandaloneGateways",
          "isEnabled": true,
          "isLeaseExpirationEnabled": true,
          "leaseExpirationDate": "1985-04-12T23:20:50.5200000+00:00",
          "isBackupProtectionEnabled": true,
          "backupProtectionPeriod": 14,
          "isGatewayFailoverEnabled": true,
          "isThrottlingEnabled": true,
          "throttlingValue": 4,
          "throttlingUnit": "MbytePerSec",
          "maxConcurrentTask": 7,
          "isBackupResourcesEnabled": true,
          "isNativeReplicationResourcesEnabled": true,
          "isVcdReplicationResourcesEnabled": true
        }
      },
      "CloudSubTenant": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a subtenant account.",
            "format": "uuid",
            "readOnly": true
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant that manages a subtenant account.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Username of a subtenant account.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of a subtenant account.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Cloud Connect server.",
            "format": "uuid",
            "readOnly": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether a subtenant account is enabled.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "1111568E-F90F-4702-8151-CBE3CE2A8C10",
          "tenantUid": "0000568E-F90F-4702-8151-CBE3CE2A8C10",
          "name": "SubTenant01",
          "description": "SubTenant X for Agent X",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "isEnabled": true
        }
      },
      "BackupProxy": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup proxy.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a backup proxy.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of a backup proxy service.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "isOutOfDate": {
            "type": "boolean",
            "description": "Indicates whether a backup proxy service is outdated.",
            "readOnly": true
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Indicates whether a backup proxy is disabled.",
            "readOnly": true
          },
          "hostUid": {
            "type": "string",
            "description": "UID assigned to a server that performs a role of a backup proxy.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Computer name of a server that performs a role of a backup proxy.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Backup proxy status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupProxyStatus"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "vSphere",
              "HyperV",
              "HyperVOffhost",
              "File"
            ],
            "type": "string",
            "description": "Type of a backup proxy.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupProxyType"
            }
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "6062568E-F90F-4702-8151-CBE3CE2A8C10",
          "name": "BACKUPPRX01",
          "version": "9.5.4.2000",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "isOutOfDate": false,
          "isDisabled": false,
          "status": "Healthy",
          "type": "vSphere"
        }
      },
      "CloudGateway": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a cloud gateway.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a cloud gateway.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "gatewayPoolUid": {
            "type": "string",
            "description": "UID assigned to a cloud gateway pool that includes the cloud gateway.",
            "format": "uuid",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "description": "Internal port that is listening to external connections.",
            "format": "int32",
            "readOnly": true
          },
          "externalPort": {
            "type": "integer",
            "description": "Port for external connections.",
            "format": "int32",
            "readOnly": true
          },
          "externalIp": {
            "type": "string",
            "description": "IP address of a network interface card on a cloud gateway.",
            "readOnly": true
          },
          "isOutOfDate": {
            "type": "boolean",
            "description": "Indicates whether a cloud gateway service is outdated.",
            "readOnly": true
          },
          "hostUid": {
            "type": "string",
            "description": "UID assigned to a server that performs a role of a cloud gateway.",
            "format": "uuid",
            "readOnly": true
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Indicates whether a cloud gateway is disabled.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Status of a cloud gateway.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudGatewayStatus"
            }
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "81536849-36C5-4044-9DC5-D1393062ADA8",
          "name": "BACKUPCGW01",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "port": 10001,
          "isOutOfDate": false,
          "isDisabled": false,
          "status": "Healthy",
          "externalPort": 666,
          "externalIp": "10.17.26.1"
        }
      },
      "CloudGatewayPool": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a cloud gateway pool.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a cloud gateway pool.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "numberOfGateways": {
            "type": "integer",
            "description": "Number of cloud gateways added to a cloud gateway pool.",
            "format": "int32",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "8B7AC327-3D08-4F51-9D36-ECA703D4565A",
          "name": "BACKUPCGPOOLW01",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB"
        }
      },
      "IdentityProvider": {
        "required": [
          "name",
          "displayName",
          "template",
          "type"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 32,
            "minLength": 5,
            "pattern": "^[\\._a-zA-Z0-9]+$",
            "type": "string",
            "description": "Name of an identity provider."
          },
          "displayName": {
            "maxLength": 56,
            "minLength": 2,
            "pattern": "^[^\\<\\>\\\"\\'\\%\\;\\(\\)\\&\\^\\+\\|]+$",
            "type": "string",
            "description": "Display name of an identity provider."
          },
          "template": {
            "$ref": "#/components/schemas/IdentityProviderTemplate"
          },
          "type": {
            "$ref": "#/components/schemas/IdentityProviderType"
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether an identity provider is enabled.",
            "default": true
          }
        },
        "example": {
          "name": "adfs",
          "displayName": "Active Directory Federation Services",
          "template": "ADFS",
          "type": "SAML2",
          "organizationUid": "0242e3ca-1cc2-4d90-8285-0e7a9b375418",
          "enabled": true
        }
      },
      "IdentityProviderType": {
        "enum": [
          "Unknown",
          "SAML2"
        ],
        "type": "string",
        "readOnly": true,
        "x-extensible-enum": true,
        "x-ms-enum": {
          "name": "IdentityProviderType"
        }
      },
      "IdentityProviderTemplate": {
        "enum": [
          "Unknown",
          "Keycloak",
          "ADFS",
          "Okta",
          "Custom"
        ],
        "type": "string",
        "default": "Custom",
        "x-extensible-enum": true,
        "x-ms-enum": {
          "name": "IdentityProviderTemplates"
        }
      },
      "IdentityProviderSettings": {
        "required": [
          "configuration",
          "displayName",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 32,
            "minLength": 5,
            "pattern": "^[\\._a-zA-Z0-9]+$",
            "type": "string",
            "description": "Name of an identity provider."
          },
          "displayName": {
            "maxLength": 56,
            "minLength": 2,
            "pattern": "^[^\\<\\>\\\"\\'\\%\\;\\(\\)\\&\\^\\+\\|]+$",
            "type": "string",
            "description": "Display name of an identity provider."
          },
          "template": {
            "$ref": "#/components/schemas/IdentityProviderTemplate"
          },
          "type": {
            "$ref": "#/components/schemas/IdentityProviderType"
          },
          "configurationValidationSucceeded": {
            "type": "boolean",
            "description": "Indicates whether an identity provider successfully passed validation procedure.\n> If the value is `false`, an identity provider is not functional. \n",
            "readOnly": true
          },
          "errorMessage": {
            "type": "string",
            "description": "Error message.\n> If identity provider validation fails, the property value is not `null`.\n",
            "nullable": true,
            "readOnly": true
          },
          "configuration": {
            "minLength": 1,
            "type": "string",
            "description": "Identity provider type configuration.\n> For the `SAML` identity provider type use the [Sustainsys.Saml2](https://saml2.sustainsys.com/en/stable/configuration.html#sustainsys-saml2-section) configuration.\n"
          },
          "rulesCount": {
            "type": "integer",
            "description": "Number of mapping rules configured for a service provider.",
            "format": "int32",
            "readOnly": true
          },
          "configurationCompleted": {
            "type": "boolean",
            "description": "Indicates whether the identity provider configuration is completed.\n>If configuration is not completed, an identity provider is not available on the authorization screen of the Veeam Service Provider Console web interface.\n>You can complete configuration by modifying this property using the PATCH operation.\n>If another identity provider is already enabled for an organization, this value cannot be modified.\n",
            "default": false
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether an identity provider is enabled.",
            "default": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "name": "myadfs",
          "displayName": "Active Directory Federation Services",
          "template": "ADFS",
          "type": "SAML2",
          "configurationValidationSucceeded": true,
          "errorMessage": null,
          "configuration": "<identityProvider>\n  <saml2 entityId=\"http://vac.myserver.com/Saml2/myadfs/\" returnUrl=\"http://vac.myserver.com/Saml2/myadfs/\">\n    <federations>\n      <add metadataLocation=\"https://adfs.mydomain.com/federationmetadata/2007-06/federationmetadata.xml\"\n       allowUnsolicitedAuthnResponse=\"true\" />\n    </federations>\n  </saml2>\n</identityProvider>\n",
          "rulesCount": 1,
          "configurationCompleted": true,
          "enabled": true
        }
      },
      "IdentityProviderRoleMappingRule": {
        "required": [
          "name",
          "role",
          "attributeMappingRules",
          "organizationMappingSourceClaimType"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a mapping rule.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string",
            "description": "Name of a mapping rule. Each mapping rule configured for a single identity provider must have a unique name."
          },
          "providerName": {
            "type": "string",
            "description": "Name of an identity provider.",
            "readOnly": true
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Mapping rule description.",
            "nullable": true
          },
          "role": {
            "enum": [
              "Unknown",
              "PortalAdministrator",
              "PortalOperator",
              "PortalReadonlyOperator",
              "CompanyLocationUser",
              "CompanyLocationAdministrator",
              "CompanyOwner",
              "CompanyAdministrator",
              "CompanyInvoiceAuditor",
              "ResellerOwner",
              "ResellerOperator",
              "ResellerUser",
              "ResellerInvoiceAuditor",
              "ResellerAdministrator"
            ],
            "type": "string",
            "description": "User role.",
            "x-ms-enum": {
              "name": "SsoRoles"
            },
            "x-extensible-enum": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether a mapping rule is enabled.",
            "default": true
          },
          "managedCompaniesUids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to companies managed by a user.\n>Required for the `PortalOperator`, `PortalReadonlyOperator`, `ResellerOperator`, `ResellerUser` \nand `ResellerAdministrator` user roles.\n",
            "nullable": true
          },
          "manageAllCompanies": {
            "type": "boolean",
            "description": "Indicates whether a user must manage all available companies. Overrides values of the `managedCompaniesUids` property.",
            "default": true
          },
          "organizationMappingSourceClaimType": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Organization mapping claim type containing organization alias"
          },
          "locationsMappingSourceClaimType": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Location mapping claim containing user locations in the following format: `Location1;Location2`.\n>This property can be specified for the `CompanyLocationUser`, `CompanyLocationAdministrator` and `CompanySubtenant` user roles. \nOtherwise a user is assigned to the first available company location.\n",
            "nullable": true
          },
          "additionalMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderClaimMatchRule"
            },
            "description": "Array of additional mappings required for rule selection.",
            "nullable": true
          },
          "attributeMappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdentityProviderAttributeMapping"
            },
            "description": "Array of mapping claims attributed to user parameters.",
            "nullable": true
          },
          "_embedded": {
            "properties": {
              "providerInfo": {
                "type": "object",
                "allOf": [
                  {
                    "$ref": "#/components/schemas/IdentityProvider"
                  }
                ],
                "description": "Resource representation of an identity provider.",
                "nullable": true,
                "readOnly": true
              }
            },
            "description": "Resource representation of the related identity provider entity.",
            "nullable": true
          }
        },
        "readOnly": true,
        "example": {
          "name": "Portal operators",
          "desciption": "Portal operators from ADFS",
          "role": "PortalOperator",
          "managedCompaniesUids": [
            "ab452a99-51bf-4a40-a1c4-df01506f56a3",
            "d8ba8d10-f2fb-4592-8c41-184d0e1b03f1"
          ],
          "organizationMappingSourceClaimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/ComanyNameAndAlias",
          "additionalMappings": [
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/emailaddress",
              "operator": "Contains",
              "value": "@mycompany.com",
              "matchCase": false
            }
          ],
          "attributeMappings": [
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/firstName",
              "allowAliases": true,
              "attribute": "FirstName"
            },
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/lastName",
              "allowAliases": true,
              "attribute": "LastName"
            },
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name",
              "allowAliases": true,
              "attribute": "Name"
            },
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/address",
              "allowAliases": true,
              "attribute": "Address"
            },
            {
              "claimType": "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/phone",
              "allowAliases": true,
              "attribute": "Phone"
            }
          ],
          "providerInfo": {
            "name": "adfs",
            "displayName": "Active Directory Federation Services",
            "template": "ADFS",
            "type": "SAML2",
            "organizationUid": "0242e3ca-1cc2-4d90-8285-0e7a9b375418",
            "enabled": true
          }
        }
      },
      "IdentityProviderClaimMatchRule": {
        "required": [
          "claimType",
          "matchCase",
          "operator",
          "value"
        ],
        "type": "object",
        "properties": {
          "claimType": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Mapping claim type."
          },
          "operator": {
            "enum": [
              "Unknown",
              "Equals",
              "NotEquals",
              "Contains",
              "NotContains",
              "MatchRegex"
            ],
            "type": "string",
            "description": "Logical operator.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "IdPClaimMappingOperators"
            }
          },
          "value": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Mapping claim value."
          },
          "matchCase": {
            "type": "boolean",
            "description": "Indicates whether value comparison must be case sensitive."
          }
        }
      },
      "IdentityProviderAttributeMapping": {
        "required": [
          "attribute",
          "claimType"
        ],
        "type": "object",
        "properties": {
          "claimType": {
            "maxLength": 2048,
            "minLength": 1,
            "type": "string",
            "description": "Mapping claim type."
          },
          "allowAliases": {
            "type": "boolean",
            "description": "Indicates whether mapping claim name can be identified automatically.",
            "default": true
          },
          "attribute": {
            "enum": [
              "Unknown",
              "FirstName",
              "LastName",
              "Name",
              "Address",
              "Phone"
            ],
            "type": "string",
            "description": "User parameter to which a claim type is mapped.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "IdPMappingUserAttributes"
            }
          },
          "defaultValue": {
            "maxLength": 2048,
            "type": "string",
            "description": "Default attribute value.",
            "nullable": true
          }
        }
      },
      "SiteWanAcceleratorResource": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a WAN accelerator.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "447AC327-3D08-4F51-9D36-ECA703D4565A",
          "name": "BACKUPWANACC01",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB"
        }
      },
      "BackupRepository": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup repository.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a backup repository.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "parentRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a scale-out backup repository which includes the backup repository as an extent.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "perVMBackupFiles": {
            "type": "boolean",
            "description": "Indicates whether the per-VM backup job option is enabled in the backup repository settings. VM backup files option in the repository settings is enabled. Displays if the per-VM backup job option is enabled or not in the backup repository settings.",
            "nullable": true,
            "readOnly": true
          },
          "capacity": {
            "type": "integer",
            "description": "Total disk space of backup repository, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isCapacityAvailable": {
            "type": "boolean",
            "description": "Indicates whether information about total disk space is available.",
            "readOnly": true
          },
          "freeSpace": {
            "type": "integer",
            "description": "Free disk space of backup repository, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isFreeSpaceAvailable": {
            "type": "boolean",
            "description": "Indicates whether a backup repository has free space.",
            "readOnly": true
          },
          "usedSpace": {
            "type": "integer",
            "description": "Amount of used space on a backup repository, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isUsedSpaceAvailable": {
            "type": "boolean",
            "description": "Indicates whether information about used space is available.",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Share",
              "Cloud",
              "ScaleOut",
              "MicrosoftAzureBlobStorage",
              "AmazonS3",
              "AmazonS3Compatible",
              "AmazonS3External",
              "AzureExternal",
              "DellEmcDataDomain",
              "HpeStoreOnce",
              "QuantumDxi",
              "IbmCloudObjectStorage",
              "NFS",
              "ExaGrid",
              "MicrosoftAzureArchive",
              "MicrosoftAzureDataBox",
              "GoogleCloud",
              "Infinidat",
              "Fujitsu",
              "AmazonS3Glacier",
              "S3Compatible"
            ],
            "type": "string",
            "description": "Type of a backup repository.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupRepositoryType"
            }
          },
          "cloudRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a backup repository if it is used as a cloud repository.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Path to the folder where backup files are stored.",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a computer that performs a role of a backup repository.",
            "readOnly": true
          },
          "hostUid": {
            "type": "string",
            "description": "UID assigned to a computer that performs a role of a backup repository.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "isOutOfDate": {
            "type": "boolean",
            "description": "Indicates whether a backup repository service is outdated.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Status of a backup repository.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupRepositoryStatus"
            }
          },
          "isCloud": {
            "type": "boolean",
            "description": "Indicates whether a backup repository is used as a cloud repository.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "85C41EAE-A598-49C5-B92C-9E5138D170EC",
          "name": "BACKUPREPOSITORY01",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB"
        }
      },
      "BackupWanAccelerator": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a WAN accelerator.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a WAN accelerator.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of a WAN accelerator service.",
            "readOnly": true
          },
          "hostUid": {
            "type": "string",
            "description": "UID assigned to a computer that performs a role of a WAN accelerator.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Name of a computer that performs a role of a WAN accelerator.",
            "readOnly": true
          },
          "isOutOfDate": {
            "type": "boolean",
            "description": "Indicates whether a WAN accelerator service is outdated.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "WAN accelerator status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupWanAcceleratorStatus"
            }
          },
          "isCloud": {
            "type": "boolean",
            "description": "Indicates whether a WAN accelerator is used in the Veeam Cloud Connect infrastructure.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "7eced22b-5e67-45e1-bc00-37e399903bed",
          "name": "BACKUPWAN01",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB"
        }
      },
      "BackupServerAgentJob": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an agent backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "totalJobsCount": {
            "type": "integer",
            "description": "Number of job sessions.",
            "format": "int32",
            "readOnly": true
          },
          "successJobsCount": {
            "type": "integer",
            "description": "Number of successful job sessions.",
            "format": "int32",
            "readOnly": true
          },
          "destination": {
            "type": "string",
            "description": "Location of backup files.",
            "readOnly": true
          },
          "source": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerAgentJobSource"
              }
            ],
            "description": "Backup scope settings.",
            "nullable": true,
            "readOnly": true
          },
          "jobMode": {
            "enum": [
              "Unknown",
              "ManagedByBackupServer",
              "ManagedByAgent"
            ],
            "type": "string",
            "description": "Status of the latest job session",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobMode"
            }
          },
          "osType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Type of a protected computer operating system.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobOsType"
            }
          },
          "licenseType": {
            "enum": [
              "Unknown",
              "Server",
              "Workstation",
              "Limited"
            ],
            "type": "string",
            "description": "License type of a backup job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobLicenseType"
            }
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerAgentJobSource": {
        "type": "object",
        "properties": {
          "backupMode": {
            "enum": [
              "Unknown",
              "EntireComputer",
              "Volume",
              "File"
            ],
            "type": "string",
            "description": "Backup mode.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobBackupMode"
            }
          },
          "backupUserFolders": {
            "type": "boolean",
            "description": "Indicates whether a backup job protects individual folders.",
            "readOnly": true
          },
          "backupOperatingSystem": {
            "type": "boolean",
            "description": "Indicates whether agent operating system is included in a backup scope.",
            "readOnly": true
          },
          "fileSystemItems": {
            "type": "object",
            "properties": {
              "volumes": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of drive letters in the following format: `C:\\`",
                "readOnly": true
              },
              "filesAndFolders": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Array of protected files and folders.",
                "readOnly": true
              }
            },
            "description": "Files and folders of an agent computer are included in a backup scope.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BackupServerAgentJobObject": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "agentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "computer": {
            "type": "string",
            "description": "Computer name of a Veeam backup agent.",
            "nullable": true,
            "readOnly": true
          },
          "backupStatus": {
            "enum": [
              "Unknown",
              "None",
              "Success",
              "Warning",
              "Failed",
              "Running"
            ],
            "type": "string",
            "description": "Status of a job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobObjectStatus"
            }
          },
          "lastRun": {
            "type": "string",
            "description": "Date and time when the latest job session started.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastEndTime": {
            "type": "string",
            "description": "Date and time when the latest job session ended.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastDuration": {
            "type": "integer",
            "description": "Duration of the latest job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "restorePointsCount": {
            "type": "integer",
            "description": "Number of restore points available in the backup chain.",
            "format": "int32",
            "readOnly": true
          },
          "osType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Type of a protected computer operating system.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerAgentJobOsType"
            }
          },
          "failureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup job fails.\n> Every line break is represented by the `\\r\\n` control characters.\n",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "BackupServerJob": {
        "required": [
          "status",
          "isEnabled"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job configured on a client Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a job configured on a client Veeam Backup & Replication server.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a client Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server location.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "None",
              "Idle",
              "Success",
              "Warning",
              "Failed",
              "Running",
              "Starting",
              "Stopping",
              "Enabling",
              "Disabling",
              "WaitingTape",
              "WaitingRepository"
            ],
            "type": "string",
            "description": "Status of the latest job session.\n> Can be changed to Running or Stopping using the PATCH endpoint.\n",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobStatus"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "BackupVm",
              "ReplicationVM",
              "CopyVm",
              "CopyFile",
              "FileToTape",
              "BackupToTape",
              "BackupCopy",
              "ImmediateBackupCopy",
              "SqlLogBackup",
              "OracleLogBackup",
              "SureBackup",
              "AgentPolicy",
              "AgentBackupJob",
              "BackupFile",
              "BackupFileCopy",
              "AzureBackupJob",
              "AwsBackupJob",
              "AhvStorageSnapshotJob"
            ],
            "type": "string",
            "description": "Type of a job configured on a client Veeam Backup & Replication server.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobType"
            }
          },
          "lastRun": {
            "type": "string",
            "description": "Date and time when the latest job session started.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastEndTime": {
            "type": "string",
            "description": "Date and time when the latest job session ended.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastDuration": {
            "type": "integer",
            "description": "Duration of the latest job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "processingRate": {
            "type": "number",
            "description": "Rate at which VM data was processed during the latest job session",
            "format": "float",
            "nullable": true,
            "readOnly": true
          },
          "avgDuration": {
            "type": "integer",
            "description": "Average time a job session takes to complete, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "transferredData": {
            "type": "integer",
            "description": "Total amount of data that was transferred to target during the latest job session, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "bottleneck": {
            "enum": [
              "Unknown",
              "Network",
              "None",
              "Proxy",
              "Source",
              "SourceWanAccelerator",
              "Target",
              "TargetWanAccelerator"
            ],
            "type": "string",
            "description": "Bottleneck in the process of transferring the data from source to target.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobBottleneckType"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether a job schedule is enabled. \n> Can be changed using the PATCH endpoint.\n"
          },
          "scheduleType": {
            "enum": [
              "Unknown",
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically",
              "Continuously",
              "BackupWindow",
              "Chained"
            ],
            "type": "string",
            "description": "Type of a schedule configured for a job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobScheduleType"
            }
          },
          "failureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup job fails. \n> Every line break is represented by the `\\r\\n` control characters.\n",
            "nullable": true,
            "readOnly": true
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a target backup location.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobTargetType"
            }
          },
          "destination": {
            "type": "string",
            "description": "Name of a target backup location.",
            "nullable": true,
            "readOnly": true
          },
          "retentionLimit": {
            "type": "integer",
            "description": "Number of retention policy units.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "retentionLimitType": {
            "enum": [
              "Unknown",
              "Days",
              "RestorePoints"
            ],
            "type": "string",
            "description": "Type of retention policy units.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "RetentionLimitType"
            }
          },
          "isGfsOptionEnabled": {
            "type": "boolean",
            "description": "Indicates whether the GFS retention is enabled.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "EDEB5975-B409-49B5-8ECE-FFFECB13494F",
          "name": "Web server Backup to Cloud",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "status": "Success",
          "type": "BackupVm",
          "lastRun": "2016-11-01T10:35:28.0000000-07:00",
          "endTime": "2016-11-01T10:40:56.0000000-07:00",
          "duration": 328,
          "processingRate": 17,
          "avgDuration": 328,
          "transferredData": 1052,
          "bottleneck": "Source",
          "isEnabled": true,
          "scheduleType": "Periodically",
          "retentionLimit": 14,
          "retentionLimitType": "RestorePoints",
          "isGfsOptionEnabled": true
        }
      },
      "EmbeddedForBackupServerJobChildren": {
        "type": "object",
        "properties": {
          "backupServerJob": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerJob"
              }
            ],
            "description": "Resource representation of a job.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Resource representation of the related Veeam Backup & Replication server job entity.",
        "nullable": true,
        "readOnly": true
      },
      "BackupServerFileShareJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a file share backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target backup repository.",
            "format": "uuid",
            "readOnly": true
          },
          "archiveRepositoryUid": {
            "type": "string",
            "description": "UID assigned to an archive repository.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "retention": {
            "type": "integer",
            "description": "Duration of file retention.",
            "format": "int32",
            "readOnly": true
          },
          "retentionUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Months",
              "Years"
            ],
            "type": "string",
            "description": "Measurement units of file retention duration.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "TimeMeasureUnit"
            }
          },
          "isArchiveRetentionEnabled": {
            "type": "boolean",
            "description": "Indicates whether long-term file retention is enabled.",
            "readOnly": true
          },
          "archiveRetention": {
            "type": "integer",
            "description": "Duration of long-term file retention.",
            "format": "int32",
            "readOnly": true
          },
          "archiveRetentionUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Months",
              "Years"
            ],
            "type": "string",
            "description": "Measurement units of long-term file retention duration.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "TimeMeasureUnit"
            }
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerFileShareJobObject": {
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a file share backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "fileServerUid": {
            "type": "string",
            "description": "UID assigned to a file share server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a file share.",
            "readOnly": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupServerFileJobObjectSource"
            },
            "description": "Processed files and folders.",
            "readOnly": true
          },
          "lastSession": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerFileShareJobObjectLastSession"
              }
            ],
            "description": "Information about the latest job session.",
            "readOnly": true
          }
        }
      },
      "BackupServerFileShareCopyJobObject": {
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "fileServerUid": {
            "type": "string",
            "description": "UID assigned to a file share server.",
            "format": "uuid",
            "readOnly": true
          },
          "path": {
            "type": "string",
            "description": "Path to a location of protected data.",
            "readOnly": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupServerFileJobObjectSource"
            },
            "description": "Processed files and folders.",
            "readOnly": true
          },
          "lastSession": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerJobObjectLastSession"
              }
            ],
            "description": "Information about the latest job session.",
            "readOnly": true
          }
        }
      },
      "BackupServerFileJobObjectSource": {
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to a location of protected data.",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "File",
              "Directory"
            ],
            "type": "string",
            "description": "Type of protected object.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerFileJobObjectType"
            }
          },
          "inclusionMasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names and name masks of files that must be included into a backup scope.",
            "readOnly": true
          },
          "exclusionMasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names and name masks of files that must be excluded from a backup scope.",
            "readOnly": true
          }
        }
      },
      "BackupServerFileTapeJobObject": {
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Host name of a server, on which protected files and folders reside.",
            "readOnly": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupServerFileTapeJobObjectSource"
            },
            "description": "Array of protected files and folders.",
            "readOnly": true
          },
          "lastSession": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerJobObjectLastSession"
              }
            ],
            "description": "Resource representation of the latest job session.",
            "readOnly": true
          }
        }
      },
      "BackupServerFileTapeJobObjectSource": {
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to a location where protected files and folders reside.",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "File",
              "Directory"
            ],
            "type": "string",
            "description": "Type of a protected unit.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerFileJobObjectType"
            }
          }
        }
      },
      "BackupServerFileShareJobObjectLastSession": {
        "properties": {
          "backupStatus": {
            "enum": [
              "Unknown",
              "Running",
              "Success",
              "Warning",
              "Failed"
            ],
            "type": "string",
            "description": "Status of a job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobObjectLastSessionBackupStatus"
            }
          },
          "sourceFilesCount": {
            "type": "integer",
            "description": "Total number of files in all sources.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "changedFilesCount": {
            "type": "integer",
            "description": "Number of processed files.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "skippedFilesCount": {
            "type": "integer",
            "description": "Number of skipped files.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "backedUpFilesCount": {
            "type": "integer",
            "description": "Number of backed up files.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "transferredSize": {
            "type": "integer",
            "description": "Total size of backed up file share data, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Total size of all source files, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "duration": {
            "type": "integer",
            "description": "Time taken to complete the latest job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Message that is displayed after a job session finishes.",
            "readOnly": true
          }
        }
      },
      "BackupServerJobObjectLastSession": {
        "properties": {
          "backupStatus": {
            "enum": [
              "Unknown",
              "Running",
              "Success",
              "Warning",
              "Failed"
            ],
            "type": "string",
            "description": "Status of the latest job session.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerJobObjectLastSessionBackupStatus"
            }
          },
          "totalBackedSize": {
            "type": "integer",
            "description": "Size of backup files, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of processed data, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "duration": {
            "type": "integer",
            "description": "Time taken to complete the latest job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "messages": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of job session messages.",
            "readOnly": true
          }
        }
      },
      "BackupServerBackupCopyJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target repository.",
            "format": "uuid",
            "readOnly": true
          },
          "targetWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a target WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "sourceWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a source WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "weeklyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of weeks during which the weekly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "monthlyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of months during which the monthly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "yearlyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of years during which the yearly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "retentionPolicyType": {
            "enum": [
              "Unknown",
              "None",
              "Simple",
              "GFS"
            ],
            "type": "string",
            "description": "Type of a retention policy of a backup copy job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerBackupCopyJobRetentionPolicyType"
            }
          },
          "isRpoOptionsEnabled": {
            "type": "boolean",
            "description": "Indicates whether a warning is enabled in case backup copy job fails to complete within the specified RPO interval.",
            "readOnly": true
          },
          "rpoOptionsValue": {
            "type": "integer",
            "description": "Desired RPO interval value.",
            "format": "int32",
            "readOnly": true
          },
          "rpoOptionsUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Months",
              "Years"
            ],
            "type": "string",
            "description": "Measurement units of a desired RPO interval value.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "TimeMeasureUnit"
            }
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerImmediateBackupCopyJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target backup repository.",
            "format": "uuid",
            "readOnly": true
          },
          "targetWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a target WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "sourceWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a source WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "weeklyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of weeks during which the weekly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "monthlyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of months during which the monthly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "yearlyRestorePointsToKeep": {
            "type": "integer",
            "description": "Number of years during which the yearly backup must be stored on the target repository.",
            "format": "int32",
            "readOnly": true
          },
          "retentionPolicyType": {
            "enum": [
              "Unknown",
              "None",
              "Simple",
              "GFS"
            ],
            "type": "string",
            "description": "Type of a retention policy of a backup copy job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerBackupCopyJobRetentionPolicyType"
            }
          },
          "isRpoOptionsEnabled": {
            "type": "boolean",
            "description": "Indicates whether a warning is enabled in case backup copy job fails to complete within the specified RPO interval.",
            "readOnly": true
          },
          "rpoOptionsValue": {
            "type": "integer",
            "description": "Desired RPO interval value.",
            "format": "int32",
            "readOnly": true
          },
          "rpoOptionsUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Months",
              "Years"
            ],
            "type": "string",
            "description": "Measurement units of a desired RPO interval value.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "TimeMeasureUnit"
            }
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerFileShareCopyJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "sourceFileShareJobUid": {
            "type": "string",
            "description": "UID assigned to a source file share job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target backup repository.",
            "format": "uuid",
            "readOnly": true
          },
          "retention": {
            "type": "integer",
            "description": "Duration of backup file retention.",
            "format": "int32",
            "readOnly": true
          },
          "retentionUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Months",
              "Years"
            ],
            "type": "string",
            "description": "Measurement units of backup file retention duration.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "TimeMeasureUnit"
            }
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerFileCopyJob": {
        "required": [
          "instanceUid"
        ],
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetHostUid": {
            "type": "string",
            "description": "UID assigned to a target host.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "targetPath": {
            "type": "string",
            "description": "Path to a location on a target repository where copied files reside.",
            "nullable": true,
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of a job source, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerVmCopyJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target repository.",
            "format": "uuid",
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerBackupTapeJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "fullMediaPoolUid": {
            "type": "string",
            "description": "UID assigned to a media pool for full backups.",
            "format": "uuid",
            "readOnly": true
          },
          "incrementalMediaPoolUid": {
            "type": "string",
            "description": "UID assigned to a media pool for full backups.",
            "format": "uuid",
            "readOnly": true
          },
          "isGfsEnabled": {
            "type": "boolean",
            "description": "Indicates whether a job runs by GFS scheme.",
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerJobLinkedJobObject": {
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a tape job.",
            "format": "uuid",
            "readOnly": true
          },
          "linkedJobUid": {
            "type": "string",
            "description": "UID assigned to a backup job processed by a tape job.",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "BackupServerJobLinkedRepositoryObject": {
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a tape job.",
            "format": "uuid",
            "readOnly": true
          },
          "linkedRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a backup repository processed by a tape job.",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "BackupServerFileTapeJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a tape job.",
            "format": "uuid",
            "readOnly": true
          },
          "fullMediaPoolUid": {
            "type": "string",
            "description": "UID assigned to a media pool for full backups.",
            "format": "uuid",
            "readOnly": true
          },
          "incrementalMediaPoolUid": {
            "type": "string",
            "description": "UID assigned to a media pool for increment backups.",
            "format": "uuid",
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerBackupVmJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "targetRepositoryUid": {
            "type": "string",
            "description": "UID assigned to a target repository.",
            "format": "uuid",
            "readOnly": true
          },
          "protectedVmCount": {
            "type": "integer",
            "description": "Number of VMs included in a job.",
            "format": "int32",
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerReplicationVmJob": {
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a replication job.",
            "format": "uuid",
            "readOnly": true
          },
          "protectedVmCount": {
            "type": "integer",
            "description": "Number of VMs included in a job.",
            "format": "int32",
            "readOnly": true
          },
          "isCloudJob": {
            "type": "boolean",
            "description": "Indicates whether VM replicas are created on a cloud host.",
            "readOnly": true
          },
          "cloudHostUid": {
            "type": "string",
            "description": "UID assigned to a cloud host.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "targetHostUid": {
            "type": "string",
            "description": "UID assigned to a target host for VM replicas.",
            "format": "uuid",
            "readOnly": true
          },
          "sourceWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a source WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "targetWanAcceleratorUid": {
            "type": "string",
            "description": "UID assigned to a target WAN accelerator.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "throughWanAccelerators": {
            "type": "boolean",
            "description": "Indicates whether WAN acceleration is enabled.",
            "readOnly": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForBackupServerJobChildren"
          }
        },
        "readOnly": true
      },
      "BackupServerVmJobObject": {
        "type": "object",
        "properties": {
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a job.",
            "format": "uuid",
            "readOnly": true
          },
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a protected VM.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VM.",
            "readOnly": true
          },
          "platform": {
            "enum": [
              "Unknown",
              "vSphere",
              "HyperV",
              "Vcd"
            ],
            "type": "string",
            "description": "VM platform.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerVmJobObjectPlatform"
            }
          },
          "hierarchyRef": {
            "type": "string",
            "description": "Reference ID of a VM.",
            "readOnly": true
          },
          "isExcluded": {
            "type": "boolean",
            "description": "Indicates whether the VM is excluded from a job.",
            "readOnly": true
          },
          "lastSession": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServerJobObjectLastSession"
              }
            ],
            "description": "Information about the latest job session.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "VcdServer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director server.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VMware Cloud Director server.",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "EDEB5975-B409-49B5-8ECE-FFFECB13494F",
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "name": "Organization XOrg"
        }
      },
      "VcdOrganization": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VMware Cloud Director organization.",
            "readOnly": true
          },
          "vcdServerUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director server.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "EDEB5975-B409-49B5-8ECE-FFFECB13494F",
          "name": "Organization XOrg",
          "vcdServerUid": "F3E3815E-938F-482F-B3E5-2B7B5190932C"
        }
      },
      "VcdOrganizationDataCenter": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an organization VDC.",
            "format": "uuid",
            "readOnly": true
          },
          "vcdOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization.",
            "format": "uuid",
            "readOnly": true
          },
          "vcdServerUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director server.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of an organization VDC.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "VcdOrganizationUser": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization user.",
            "readOnly": true
          },
          "vcdOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VMware Cloud Director organization user.",
            "readOnly": true
          }
        }
      },
      "SubscriptionPlan": {
        "required": [
          "name",
          "currency",
          "taxType",
          "taxPercent",
          "discountPercent"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a subscription plan.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Name of a subscription plan."
          },
          "organizationUid": {
            "type": "string",
            "description": "Name of an organization whose user created a subscription plan.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Predefined",
              "Provider",
              "Reseller"
            ],
            "type": "string",
            "description": "Type of subscription plan.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "SubscriptionPlanType"
            }
          },
          "description": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Description of a subscription plan.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency chosen for a subscription plan."
          },
          "taxType": {
            "enum": [
              "Unknown",
              "VAT",
              "GST",
              "SalesTax"
            ],
            "type": "string",
            "description": "Tax type specified for a subscription plan.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "SubscriptionPlanTaxType"
            }
          },
          "taxPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Tax amount, in percent.",
            "format": "double"
          },
          "discountPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Discount amount, in percent.",
            "format": "double"
          },
          "managedBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanManagedBackup"
              }
            ],
            "description": "Charge rates for managed backup services.",
            "x-veeam-create-by-default": true
          },
          "cloudReplication": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanCloudReplication"
              }
            ],
            "description": "Charge rates for resources consumed by cloud VM replicas.",
            "x-veeam-create-by-default": true
          },
          "fileShareBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanFileShareBackup"
              }
            ],
            "description": "Charge rates for managed file share backup services.",
            "x-veeam-create-by-default": true
          },
          "cloudBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanCloudBackup"
              }
            ],
            "description": "Charge rates for storing backups in cloud repositories.",
            "x-veeam-create-by-default": true
          }
        },
        "readOnly": true
      },
      "SubscriptionPlanManagedBackup": {
        "type": "object",
        "properties": {
          "managedServicePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Flat charge rate for provided services, per month.",
            "format": "double",
            "default": 0
          },
          "managedVmPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for a managed VM, per month.",
            "format": "double",
            "default": 0
          },
          "managedCloudVmPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for a managed cloud VM, per month.",
            "format": "double",
            "default": 0
          },
          "managedWorkstationPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for a managed workstation agent, per month.",
            "format": "double",
            "default": 0
          },
          "managedServerAgentPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for a managed server agent, per month.",
            "format": "double",
            "default": 0
          },
          "freeManagedVms": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Number of VMs that are managed for free.",
            "format": "int32",
            "default": 0
          },
          "freeManagedCloudVms": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Number of cloud VMs that are managed for free.",
            "format": "int32",
            "default": 0
          },
          "freeManagedWorkstations": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Number of workstations that are managed for free.",
            "format": "int32",
            "default": 0
          },
          "freeManagedServerAgents": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Number of server agents that are managed for free.",
            "format": "int32",
            "default": 0
          },
          "windowsServerOsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Extra charge rate for Microsoft Windows servers.",
            "format": "double",
            "default": 0
          },
          "windowsClientOsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Extra charge rate for Microsoft Windows workstations.",
            "format": "double",
            "default": 0
          },
          "linuxOsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Extra charge rate for Linux computers.",
            "format": "double",
            "default": 0
          },
          "macOsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Extra charge rate for Mac OS computers.",
            "format": "double",
            "default": 0
          }
        }
      },
      "SubscriptionPlanFileShareBackup": {
        "type": "object",
        "properties": {
          "fileShareBackupUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of backup repository space consumed by file share backups.",
            "format": "double",
            "default": 0
          },
          "fileShareBackupUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of backup repository space consumed by file share backups.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "freeFileShareBackupUsedSpace": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of backup repository space that can be consumed by file share backups for free.",
            "format": "int32",
            "nullable": true
          },
          "freeFileShareBackupUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of backup repository space that can be consumed by file share backups for free.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "fileShareArchiveUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of archive repository space consumed by file share backups.",
            "format": "double",
            "default": 0
          },
          "fileShareArchiveUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of archive repository space consumed by file share backups.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "freeFileShareArchiveUsedSpace": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of archive repository space that can be consumed by file share backups for free.",
            "format": "int32",
            "nullable": true
          },
          "freeFileShareArchiveUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of archive repository space that can be consumed by file share backups for free.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "sourceAmountOfDataPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of source data.",
            "format": "double",
            "default": 0
          },
          "sourceAmountOfDataUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of source data.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "freeSourceAmountOfData": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of source data that is processed for free.",
            "format": "int32",
            "nullable": true
          },
          "freeSourceAmountOfDataUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of source data that is processed for free.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          }
        }
      },
      "SubscriptionPlanCloudReplication": {
        "type": "object",
        "properties": {
          "replicatedVmPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one VM replica registered on a cloud host, per month.",
            "format": "double",
            "default": 0
          },
          "cloudStorageConsumedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of cloud storage space consumed by VM replica files.",
            "format": "double",
            "default": 0
          },
          "cloudStorageConsumedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of cloud storage space consumed by VM replica files.",
            "default": "TB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "freeCloudStorageConsumedSpace": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of cloud storage space that can be consumed by VM replicas for free.",
            "format": "int32",
            "nullable": true
          },
          "freeCloudStorageConsumedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of cloud storage space that can be consumed by VM replicas for free.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "computeResourcesPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for a CPU and memory resources usage by a VM on a cloud host.",
            "format": "double",
            "default": 0
          },
          "computeResourcesUnits": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Weeks",
              "Months"
            ],
            "type": "string",
            "description": "Measurement units of time period of CPU and memory resources usage by a VM on a cloud host",
            "default": "Hours",
            "x-ms-enum": {
              "name": "SubscriptionPlanTimeMeasure"
            }
          },
          "freeComputeResources": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of time during which VM replicas can consume compute resources on a cloud host for free.",
            "format": "int64",
            "default": 0
          },
          "freeComputeResourcesUnits": {
            "enum": [
              "Minutes",
              "Hours",
              "Days",
              "Weeks",
              "Months"
            ],
            "type": "string",
            "description": "Measurement units of time during which VM replicas can consume compute resources on a cloud host for free.",
            "default": "Minutes",
            "x-ms-enum": {
              "name": "SubscriptionPlanTimeMeasure"
            }
          },
          "replicationDataTransferOutPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of VM replica data downloaded from cloud storage.",
            "format": "double",
            "default": 0
          },
          "replicationDataTransferOutUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of VM replica data downloaded from cloud storage.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          }
        }
      },
      "SubscriptionPlanCloudBackup": {
        "type": "object",
        "properties": {
          "vmCloudBackupsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for storing one VM in backup on a cloud repository, per month.",
            "format": "double",
            "default": 0
          },
          "serverCloudBackupsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for storing backup data of one server computer on a cloud repository, per month.",
            "format": "double",
            "default": 0
          },
          "workstationCloudBackupsPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for storing backup data for one workstation computer on a cloud repository, per month.",
            "format": "double",
            "default": 0
          },
          "cloudRepositorySpaceUsageAlgorithm": {
            "enum": [
              "Allocated",
              "Consumed",
              "Granular"
            ],
            "type": "string",
            "description": "Type of charge rate for storage space on a cloud repository.",
            "default": "Consumed",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceUsageAlgorithm"
            }
          },
          "cloudRepositoryAllocatedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of allocated storage space on a cloud repository.",
            "format": "double",
            "default": 0
          },
          "cloudRepositoryAllocatedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of allocated storage space on a cloud repository.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "cloudRepositoryConsumedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of consumed storage space on a cloud repository.",
            "format": "double",
            "default": 0
          },
          "cloudRepositoryConsumedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of consumed storage space on a cloud repository.",
            "default": "TB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "freeCloudRepositoryConsumedSpace": {
            "maximum": 2096128,
            "minimum": 0,
            "type": "integer",
            "description": "Amount of storage space that can be consumed by backup files for free.",
            "format": "int32",
            "nullable": true
          },
          "freeCloudRepositoryConsumedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of storage space that can be consumed by backup files for free.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "backupDataTransferOutPrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of data downloaded from a cloud repository",
            "format": "double",
            "default": 0
          },
          "backupDataTransferOutUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of data downloaded from a cloud repository.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "insiderProtectionUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for cloud repository space that is consumed by deleted backup files.",
            "format": "double",
            "default": 0
          },
          "insiderProtectionUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units for cloud repository space that is consumed by deleted backup files.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "performanceTierUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of consumed performance tier space.",
            "format": "double",
            "default": 0
          },
          "performanceTierUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of consumed performance tier space.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "capacityTierUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of consumed capacity tier space.",
            "format": "double",
            "default": 0
          },
          "capacityTierUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of consumed capacity tier space.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          },
          "archiveTierUsedSpacePrice": {
            "maximum": 1000000,
            "minimum": 0,
            "type": "number",
            "description": "Charge rate for one GB or TB of consumed archive tier space.",
            "format": "double",
            "default": 0
          },
          "archiveTierUsedSpaceUnits": {
            "enum": [
              "GB",
              "TB"
            ],
            "type": "string",
            "description": "Measurement units of consumed archive tier space.",
            "default": "GB",
            "x-ms-enum": {
              "name": "SubscriptionPlanSpaceMeasure"
            }
          }
        }
      },
      "SubscriptionPlanInput": {
        "required": [
          "name",
          "currency",
          "taxType",
          "taxPercent",
          "discountPercent"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Name of a subscription plan."
          },
          "description": {
            "maxLength": 512,
            "minLength": 0,
            "type": "string",
            "description": "Description of a subscription plan.",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency chosen for a subscription plan."
          },
          "taxType": {
            "enum": [
              "Unknown",
              "VAT",
              "GST",
              "SalesTax"
            ],
            "type": "string",
            "description": "Tax type specified for a subscription plan.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "SubscriptionPlanTaxType"
            }
          },
          "taxPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Tax amount, in percent.",
            "format": "double"
          },
          "discountPercent": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "description": "Discount amount, in percent.",
            "format": "double"
          },
          "managedBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanManagedBackup"
              }
            ],
            "description": "Charge rates for managed backup services.",
            "x-veeam-create-by-default": true
          },
          "cloudReplication": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanCloudReplication"
              }
            ],
            "description": "Charge rates for resources consumed by cloud VM replicas.",
            "x-veeam-create-by-default": true
          },
          "fileShareBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanFileShareBackup"
              }
            ],
            "description": "Charge rates for managed file share backup services.",
            "x-veeam-create-by-default": true
          },
          "cloudBackup": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SubscriptionPlanCloudBackup"
              }
            ],
            "description": "Charge rates for storing backups in cloud repositories.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "Certificate": {
        "required": [
          "issuedTo",
          "issuedBy",
          "expirationDate",
          "friendlyName",
          "thumbprint",
          "serialNumber"
        ],
        "type": "object",
        "properties": {
          "issuedTo": {
            "type": "string",
            "description": "Subject of a certificate."
          },
          "issuedBy": {
            "type": "string",
            "description": "Certificate issuer."
          },
          "friendlyName": {
            "type": "string",
            "description": "Certificate friendly name."
          },
          "thumbprint": {
            "type": "string",
            "description": "Thumbprint."
          },
          "serialNumber": {
            "type": "string",
            "description": "Certificate serial number."
          },
          "expirationDate": {
            "type": "string",
            "description": "Certificate expiration date.",
            "format": "date-time"
          }
        },
        "readOnly": true
      },
      "InstallCertificate": {
        "required": [
          "thumbprint"
        ],
        "type": "object",
        "properties": {
          "thumbprint": {
            "type": "string",
            "description": "Certificate thumbprint in the Certificate Store."
          }
        }
      },
      "BackupServerLicense": {
        "required": [
          "autoUpdateEnabled"
        ],
        "type": "object",
        "properties": {
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a backup server.",
            "format": "uuid",
            "readOnly": true
          },
          "autoUpdateEnabled": {
            "type": "boolean",
            "description": "Indicates whether license updates automatically."
          },
          "edition": {
            "type": "string",
            "description": "License edition.",
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Monitoring status.",
            "nullable": true,
            "readOnly": true
          },
          "packages": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "None",
                "Starter",
                "Essentials",
                "Backup",
                "ONE",
                "Suite",
                "Orchestrator"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "VeeamLicensePackage"
              }
            },
            "description": "Product packages.",
            "readOnly": true
          },
          "company": {
            "type": "string",
            "description": "Name of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "contactPerson": {
            "type": "string",
            "description": "[Legacy] Name of a contact person in an organization to which the license is issued.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "License expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Support expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "licenseIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "License IDs.",
            "readOnly": true
          },
          "supportIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "License IDs required to contact Veeam Support.",
            "readOnly": true
          },
          "sectionTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Socket",
                "Instance",
                "All"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "LicenseSectionType"
              }
            },
            "description": "Type of licensed units.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Valid",
              "Warning",
              "Error",
              "Expired",
              "Unlicensed"
            ],
            "type": "string",
            "description": "Current status of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseStatus"
            }
          },
          "cloudConnect": {
            "enum": [
              "Unknown",
              "No",
              "Yes",
              "Enterprise"
            ],
            "type": "string",
            "description": "Indicates whether Veeam Cloud Connect is included in a license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseCloudConnect"
            }
          },
          "sockets": {
            "type": "number",
            "description": "Number of licensed sockets.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "usedSockets": {
            "type": "number",
            "description": "Number of used sockets.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "capacity": {
            "type": "number",
            "description": "Available protected capacity for NAS backup.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "usedCapacity": {
            "type": "number",
            "description": "Consumed capacity for NAS backup.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "units": {
            "type": "number",
            "description": "Number of available license units.",
            "format": "double",
            "readOnly": true
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of used license units.",
            "format": "double",
            "readOnly": true
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "Type of license units.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Community",
              "Rental",
              "Subscription",
              "Evaluation",
              "NFR",
              "Perpetual"
            ],
            "type": "string",
            "description": "Type of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseType"
            }
          }
        },
        "readOnly": true,
        "example": {
          "backupServerUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "autoupdateEnabled": false,
          "contactPerson": "John Smith",
          "edition": "Enterprise Plus",
          "company": "Veeam",
          "email": "John.Smith@veeam.com",
          "units": 1000,
          "unitType": "Instances",
          "usedUnits": 100,
          "status": "Valid",
          "cloudConnect": "Yes",
          "autoUpdateEnabled": true,
          "packages": [
            "Suite"
          ],
          "type": "Rental",
          "supportIds": [
            "987412365"
          ],
          "licenseIds": [
            "514c45eb-9543-4799-8003-1e59385b774c"
          ],
          "expirationDate": "2018-10-24T14:00:00.0000000-07:00",
          "supportExpirationDate": "2018-10-24T14:00:00.0000000-07:00"
        }
      },
      "SiteLicense": {
        "required": [
          "autoUpdateEnabled"
        ],
        "type": "object",
        "properties": {
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid",
            "readOnly": true
          },
          "autoUpdateEnabled": {
            "type": "boolean",
            "description": "Indicates whether a license updates automatically."
          },
          "edition": {
            "type": "string",
            "description": "License edition.",
            "readOnly": true
          },
          "monitoring": {
            "type": "boolean",
            "description": "Indicates if monitoring is enabled for a Veeam Cloud Connect server.",
            "nullable": true,
            "readOnly": true
          },
          "packages": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "None",
                "Starter",
                "Essentials",
                "Backup",
                "ONE",
                "Suite",
                "Orchestrator"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "VeeamLicensePackage"
              }
            },
            "description": "Product packages.",
            "readOnly": true
          },
          "company": {
            "type": "string",
            "description": "Name of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "contactPerson": {
            "type": "string",
            "description": "[Legacy] Name of a contact person in an organization to which a license is issued.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "License expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Support expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "licenseIds": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "License IDs.",
            "readOnly": true
          },
          "supportIds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "License IDs required to contact Veeam Support.",
            "readOnly": true
          },
          "sectionTypes": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Socket",
                "Instance",
                "All"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "LicenseSectionType"
              }
            },
            "description": "Types of licensed units.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Valid",
              "Warning",
              "Error",
              "Expired"
            ],
            "type": "string",
            "description": "Current status of a license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseStatus"
            }
          },
          "cloudConnect": {
            "enum": [
              "Unknown",
              "No",
              "Yes",
              "Enterprise"
            ],
            "type": "string",
            "description": "Indicates whether a license includes Veeam Cloud Connect.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseCloudConnect"
            }
          },
          "units": {
            "type": "number",
            "description": "Number of available license units.",
            "format": "double",
            "readOnly": true
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of used license units.",
            "format": "double",
            "readOnly": true
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "Type of license units.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Community",
              "Rental",
              "Subscription",
              "Evaluation",
              "NFR",
              "Perpetual"
            ],
            "type": "string",
            "description": "Type of a license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseType"
            }
          }
        },
        "readOnly": true,
        "example": {
          "siteUid": "DF997BD3-4AE9-4841-8152-8FF5CC703EAB",
          "autoupdateEnabled": false,
          "contactPerson": "John Smith",
          "edition": "Enterprise Plus",
          "company": "Veeam",
          "email": "John.Smith@veeam.com",
          "units": 1000,
          "unitType": "Instances",
          "usedUnits": 100,
          "status": "Valid",
          "cloudConnect": "Yes",
          "autoUpdateEnabled": true,
          "packages": [
            "Suite"
          ],
          "type": "Rental",
          "supportIds": [
            "987412365"
          ],
          "licenseIds": [
            "514c45eb-9543-4799-8003-1e59385b774c"
          ],
          "expirationDate": "2018-10-24T14:00:00.0000000-07:00",
          "supportExpirationDate": "2018-10-24T14:00:00.0000000-07:00"
        }
      },
      "ConsoleLicense": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string",
            "description": "License ID.",
            "readOnly": true
          },
          "edition": {
            "type": "string",
            "description": "License edition.",
            "readOnly": true
          },
          "package": {
            "enum": [
              "Unknown",
              "None",
              "Starter",
              "Essentials",
              "Backup",
              "ONE",
              "Suite",
              "Orchestrator"
            ],
            "type": "string",
            "description": "Product packages.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicensePackage"
            }
          },
          "licenseeCompany": {
            "type": "string",
            "description": "Name of an organization to which a license is issued.",
            "readOnly": true
          },
          "licenseeEmail": {
            "type": "string",
            "description": "Email address of a contact person in an organization.",
            "readOnly": true
          },
          "licenseeAdministratorEmail": {
            "type": "string",
            "description": "Email address of a license administrator in a company.",
            "readOnly": true
          },
          "contactPerson": {
            "type": "string",
            "description": "[Legacy] Name of a contact person in an organization to which the license is issued.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "License expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Support expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportId": {
            "type": "string",
            "description": "Support ID required for contacting Veeam Support.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Valid",
              "Warning",
              "Error",
              "Expired"
            ],
            "type": "string",
            "description": "Current status of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseStatus"
            }
          },
          "statusMessage": {
            "type": "string",
            "description": "Description of a license status.",
            "readOnly": true
          },
          "cloudConnect": {
            "enum": [
              "Unknown",
              "No",
              "Yes",
              "Enterprise"
            ],
            "type": "string",
            "description": "Indicates whether a license includes Veeam Cloud Connect.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseCloudConnect"
            },
            "x-extensible-enum": true
          },
          "instances": {
            "type": "number",
            "description": "Total number of available instances.",
            "format": "double",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Community",
              "Rental",
              "Subscription",
              "Evaluation",
              "NFR",
              "Perpetual"
            ],
            "type": "string",
            "description": "Type of a license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseType"
            }
          },
          "lastUpdateDate": {
            "type": "string",
            "description": "Date and time when license was last updated.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastUpdateMessage": {
            "type": "string",
            "description": "Message to the last license update.",
            "readOnly": true
          },
          "lastUpdateStatus": {
            "enum": [
              "Unknown",
              "Success",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Status of the last license update.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseUpdateStatus"
            }
          }
        },
        "readOnly": true,
        "example": {
          "licenseId": "514c45eb-9543-4799-8003-1e59385b774c",
          "contactPerson": "John Smith",
          "edition": "Enterprise Plus",
          "package": "Suite",
          "licenseeCompany": "Veeam",
          "licenseeEmail": "John.Smith@veeam.com",
          "licenseeAdministratorEmail": "Adam.Jang@veeam.com",
          "instances": 1000,
          "status": "Valid",
          "type": "Rental",
          "cloudConnect": "Yes",
          "supportId": "987412365",
          "expirationDate": "2018-10-24T14:00:00.0000000-07:00",
          "supportExpirationDate": "2018-10-24T14:00:00.0000000-07:00",
          "lastUpdateDate": "2019-10-24T14:00:00.0000000-07:00",
          "lastUpdateMessage": "",
          "lastUpdateState": "Unknown"
        }
      },
      "ConsoleLicenseUsage": {
        "type": "object",
        "properties": {
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double",
            "readOnly": true
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32",
            "readOnly": true
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double",
            "readOnly": true
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32",
            "readOnly": true
          },
          "licensedUnits": {
            "type": "number",
            "description": "Total number of available license units.",
            "format": "double",
            "readOnly": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsoleLicenseSummaryCounter"
            },
            "description": "Counters for each type of licensed objects.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "BackupPolicy": {
        "required": [
          "name",
          "operationMode",
          "accessMode"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup policy.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization to whose agents a backup policy is assigned.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Backup policy name. Pattern is '^[^$()%]+$' for Windows policy and '^[^~\"#%&*:<>?/\\\\{|}.'`]+$' for Linux and Mac policies."
          },
          "description": {
            "maxLength": 512,
            "type": "string",
            "description": "Backup policy description.",
            "nullable": true
          },
          "configId": {
            "type": "string",
            "description": "System ID assigned to a backup policy configuration.",
            "format": "uuid",
            "readOnly": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "mode": {
            "enum": [
              "Unknown",
              "Workstation",
              "Server"
            ],
            "type": "string",
            "description": "Backup job operation mode.\n> Property is deprecated. We recommend to use the `operationMode` property.\n",
            "readOnly": true,
            "deprecated": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupJobOperationMode"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "Predefined",
              "Provider",
              "Reseller",
              "Client"
            ],
            "type": "string",
            "description": "Backup policy type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupPolicyType"
            }
          },
          "accessMode": {
            "$ref": "#/components/schemas/BackupPolicyAccessMode"
          },
          "systemType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Type of guest OS on a managed computer.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupPolicySystemType"
            }
          },
          "createdBy": {
            "type": "string",
            "description": "Name of a company, reseller or service provider that created a backup policy.",
            "readOnly": true
          },
          "modifiedDate": {
            "type": "string",
            "description": "Date and time when settings of a backup policy were last modified.",
            "format": "date-time",
            "readOnly": true
          },
          "companiesCount": {
            "type": "integer",
            "description": "Number of companies to whose Veeam backup agents a policy is assigned.",
            "format": "int32",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "D80427DD-3F62-4AF3-A206-98ABC24C87E5",
          "organizationUid": "A41427DD-3F62-4AF3-A206-98ABC24C87E5",
          "name": "Backup Policy X",
          "configId": "CC221975-B409-49B5-8ECE-FFFECB13494F",
          "description": "Backup Policy X",
          "mode": "Server",
          "operationMode": "Server",
          "type": "Provider",
          "accessMode": "Public"
        }
      },
      "BackupJobOperationMode": {
        "enum": [
          "Unknown",
          "Workstation",
          "Server"
        ],
        "type": "string",
        "description": "Backup job operation mode.",
        "x-extensible-enum": true,
        "x-ms-enum": {
          "name": "BackupJobOperationMode"
        }
      },
      "BackupPolicyAccessMode": {
        "enum": [
          "Private",
          "Public"
        ],
        "type": "string",
        "description": "Backup policy access mode.",
        "x-ms-enum": {
          "name": "BackupPolicyAccessMode"
        }
      },
      "BackupPolicyToAssign": {
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to an organization to whose agents a backup policy is assigned.",
            "format": "uuid",
            "readOnly": true
          },
          "backupPolicies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupPolicy"
            },
            "description": "Array of backup policies available to assign.",
            "readOnly": true
          }
        }
      },
      "WindowsCustomJobConfiguration": {
        "required": [
          "name",
          "operationMode",
          "accessMode",
          "jobConfiguration"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^$()%]+$",
            "type": "string",
            "description": "Job name."
          },
          "description": {
            "maxLength": 512,
            "type": "string",
            "description": "Job description.",
            "nullable": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "cloudRepositoryConnectionSettings": {
            "$ref": "#/components/schemas/CloudRepositoryConnectionSettings"
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        },
        "readOnly": true
      },
      "CloudRepositoryConnectionSettings": {
        "required": [
          "backupResourceUid",
          "username"
        ],
        "type": "object",
        "properties": {
          "backupResourceUid": {
            "type": "string",
            "description": "UID assigned to a cloud repository.'",
            "format": "uuid"
          },
          "username": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        },
        "description": "Settings required to connect a cloud repository that is used as a target location for backups.",
        "nullable": true
      },
      "WindowsBackupPolicyInput": {
        "required": [
          "name",
          "operationMode",
          "accessMode",
          "jobConfiguration"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^$()%]+$",
            "type": "string",
            "description": "Backup policy name."
          },
          "description": {
            "maxLength": 512,
            "type": "string",
            "description": "Backup policy description.",
            "nullable": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "accessMode": {
            "$ref": "#/components/schemas/BackupPolicyAccessMode"
          },
          "createSubtenants": {
            "type": "boolean",
            "description": "Defines whether a subtenant must be created for each Veeam Agent for Microsoft Windows. \n> Available if a cloud repository is selected as backup destination.\n",
            "default": true
          },
          "createSubFolders": {
            "type": "boolean",
            "description": "Defines whether a subfolder must be created for each Veeam Agent for Microsoft Windows on the shared folder.\n> Available if a shared folder is selected as backup destination.\n",
            "default": false
          },
          "unlimitedSubtenantQuota": {
            "type": "boolean",
            "description": "Defines whether a subtenant can consume unlimited amount of space on a repository.\n> Available if a cloud repository is selected as backup destination.\n",
            "default": false
          },
          "repositoryQuotaGb": {
            "type": "integer",
            "description": "Maximum amount of space that a subtenant can consume on a repository.\n> If a subtenant can consume unlimited amount of space, the value of this property is ignored. <br>\n> Available if a cloud repository is selected as backup destination.\n",
            "format": "int32",
            "default": 100,
            "nullable": true
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        }
      },
      "WindowsBackupPolicy": {
        "required": [
          "name",
          "operationMode",
          "jobConfiguration"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup policy template.",
            "format": "uuid",
            "readOnly": true
          },
          "createSubtenants": {
            "type": "boolean",
            "description": "Indicates whether a subtenant must be created for each Veeam Agent for Microsoft Windows.",
            "default": true
          },
          "createSubFolders": {
            "type": "boolean",
            "description": "Indicates whether a subfolder must be created for each Veeam backup agent on the shared folder.",
            "default": false
          },
          "unlimitedSubtenantQuota": {
            "type": "boolean",
            "description": "Indicates whether a subtenant can consume unlimited amount of space on a repository.",
            "default": false
          },
          "repositoryQuotaGb": {
            "type": "integer",
            "description": "Maximum amount of space that a subtenant can consume on a repository. \n> If a subtenant can consume unlimited amount of space, the value of this property is ignored.\n",
            "format": "int32",
            "default": 100,
            "nullable": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        },
        "readOnly": true
      },
      "WindowsBackupJobConfiguration": {
        "required": [
          "backupSource",
          "backupTarget"
        ],
        "type": "object",
        "properties": {
          "backupSource": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupSource"
              }
            ],
            "description": "Data included in the backup scope."
          },
          "backupTarget": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupTarget"
              }
            ],
            "description": "Location of the backup files."
          },
          "serverModeSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsServerModeJobSettings"
              }
            ],
            "description": "Settings required for the Server operation mode.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "workstationModeSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsWorkstationModeJobSettings"
              }
            ],
            "description": "Settings required for the Workstation operation mode.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "advancedSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsAdvancedJobSettings"
              }
            ],
            "description": "Advanced job settings.",
            "x-veeam-create-by-default": true
          },
          "gfsRetentionSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsGfsRetentionSettings"
              }
            ],
            "description": "GFS retention policy settings for the backup job.\n> The null value indicates that GFS retention is disabled. <br>\n> Available only to Veeam Agent for Microsoft Windows starting from version 5.0.'\n",
            "nullable": true
          }
        }
      },
      "WindowsAdvancedJobSettings": {
        "type": "object",
        "properties": {
          "backupStorage": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupStorage"
              }
            ],
            "description": "Storage settings for a backup jobs.",
            "x-veeam-create-by-default": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsAdvancedScheduleSettings"
              }
            ],
            "description": "Scheduling settings for a backup chain created with a backup job.",
            "nullable": true
          },
          "maintenanceSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMaintenanceJobSettings"
              }
            ],
            "description": "Maintenance settings for a backup chain created with the backup job.",
            "nullable": true
          }
        }
      },
      "WindowsMaintenanceJobSettings": {
        "type": "object",
        "properties": {
          "backupHealthCheckSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/MonthlyOrWeeklyScheduleSettings"
              }
            ],
            "description": "Scheduling settings for periodic health checks of the latest restore points.\n> The `null` value indicates that health checks are disabled.\n",
            "nullable": true
          },
          "fullBackupFileMaintenanceSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsFullBackupFileMaintenanceSettings"
              }
            ],
            "description": "Full backup file maintenance settings\n> The `null` value indicates that maintenance of full backup files is disabled.\n",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsFullBackupFileMaintenanceSettings": {
        "type": "object",
        "properties": {
          "enableDeletedFilesRetention": {
            "type": "boolean",
            "description": "[For Veeam backup repository and cloud repository targets] Defines whether the deleted backup files must be removed after a specific time period.",
            "default": false
          },
          "removeDeletedItemsDataAfter": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "[For Veeam backup repository and cloud repository targets] Number of days for which the deleted backup files are stored.",
            "format": "int32",
            "default": 30
          },
          "defragmentAndCompactFullBackupFileSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/MonthlyOrWeeklyScheduleSettings"
              }
            ],
            "description": "Settings for periodic compacting of full backup files\n> The `null` value indicates that compacting is disabled.\n",
            "nullable": true
          }
        }
      },
      "WindowsAdvancedScheduleSettings": {
        "type": "object",
        "properties": {
          "syntheticFullOnDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Week days on which creation of synthetic full backups is scheduled\n> The `null` value indicates that periodic creation of synthetic full backups is disabled.\n",
            "nullable": true
          },
          "activeFullSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/MonthlyOrWeeklyScheduleWithDaySettings"
              }
            ],
            "description": "Scheduling settings for periodically created active full backups.\n> The `null` value indicates that periodic creation of active full backups is disabled.\n",
            "nullable": true
          }
        }
      },
      "MonthlyOrWeeklyScheduleSettings": {
        "type": "object",
        "properties": {
          "monthlySettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMonthlyScheduleCalendarSettings"
              }
            ],
            "description": "Scheduling settings for monthly full backup creation.\n> If the `weeklyOnDays` property is also provided, monthly schedule is ignored.'\n",
            "nullable": true
          },
          "weeklyOnDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Scheduling settings for weekly full backup creation.\n> If the `monthlySettings` property is also provided, it is ignored.\n",
            "nullable": true
          }
        }
      },
      "MonthlyOrWeeklyScheduleWithDaySettings": {
        "type": "object",
        "properties": {
          "monthlySettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMonthlyScheduleCalendarWithDaySettings"
              }
            ],
            "description": "Scheduling settings for monthly full backup creation.\n> If the `weeklyOnDays` property is also provided, monthly schedule is ignored.\n",
            "nullable": true
          },
          "weeklyOnDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Scheduling settings for weekly full backup creation.\n> If the `monthlySettings` property is also provided, it is ignored.\n",
            "nullable": true
          }
        }
      },
      "WindowsServerJobScheduleSettings": {
        "type": "object",
        "properties": {
          "scheduleType": {
            "enum": [
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically",
              "Continuously"
            ],
            "type": "string",
            "description": "Type of periodicity.",
            "default": "Daily",
            "x-ms-enum": {
              "name": "WindowsServerJobScheduleType"
            }
          },
          "dailyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDailyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required for a daily running job.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "monthlyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMonthlyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required for a monthly running job.",
            "nullable": true
          },
          "periodicalScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPeriodicalScheduleSettings"
              }
            ],
            "description": "Scheduling settings required to run a job repeatedly throughout a day.",
            "nullable": true
          },
          "continuousScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsContinuousScheduleSettings"
              }
            ],
            "description": "Scheduling settings for a continuously running job.\n> The `null` value indicates that a job can be run at any time.\n",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "retrySettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsServerJobRetrySettings"
              }
            ],
            "description": "Automatic retry settings.",
            "x-veeam-create-by-default": true
          },
          "backupWindow": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobScheduleWindowDay"
            },
            "description": "Time interval within which a job must complete.\n> The `null` value indicates that a job can be run at any time.\n",
            "nullable": true
          }
        }
      },
      "WindowsServerJobRetrySettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether Veeam Agent for Microsoft Windows must attempt to run the backup job again if the job fails.",
            "default": true
          },
          "retryTimes": {
            "maximum": 777,
            "minimum": 1,
            "type": "integer",
            "description": "Number of attempts to run a job.",
            "format": "int32",
            "default": 3
          },
          "waitTimeoutMinutes": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Time interval between attempts to run a job.",
            "format": "int32",
            "default": 10
          }
        }
      },
      "WindowsContinuousScheduleSettings": {
        "properties": {
          "backupWindowSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPeriodicallyScheduleWindowSettings"
              }
            ],
            "description": "Permitted time window for a continuously running job.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsPeriodicalScheduleSettings": {
        "required": [
          "intervalInMinutes"
        ],
        "type": "object",
        "properties": {
          "intervalInMinutes": {
            "maximum": 1440,
            "minimum": 1,
            "type": "integer",
            "description": "Time interval for a periodically running job, in minutes."
          },
          "backupWindowSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPeriodicallyScheduleWindowSettings"
              }
            ],
            "description": "Permitted time window for a periodically running job.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsPeriodicallyScheduleWindowSettings": {
        "type": "object",
        "properties": {
          "scheduleWindow": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobScheduleWindowDay"
            },
            "description": "Permitted time window for a job.\n> By default includes all days and all hours.\n",
            "nullable": true
          },
          "shiftForMinutes": {
            "maximum": 59,
            "minimum": 0,
            "type": "integer",
            "description": "Exact time of the job start within an hour, in minutes.",
            "format": "int32",
            "default": 0
          }
        }
      },
      "JobScheduleWindowDay": {
        "required": [
          "day"
        ],
        "type": "object",
        "properties": {
          "day": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "description": "Days when job runs are permitted.",
            "x-ms-enum": {
              "name": "DaysOfWeek"
            }
          },
          "hours": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maximum": 23,
              "minimum": 0,
              "type": "integer",
              "format": "int32"
            },
            "description": "Hours when job runs are permitted.\n> Empty array indicates that job runs are denied during the whole day.\n",
            "default": [
              0,
              1,
              2,
              3,
              4,
              5,
              6,
              7,
              8,
              9,
              10,
              11,
              12,
              13,
              14,
              15,
              16,
              17,
              18,
              19,
              20,
              21,
              22,
              23
            ]
          }
        }
      },
      "WindowsMonthlyScheduleCalendarWithDaySettings": {
        "required": [
          "monthlyMode"
        ],
        "type": "object",
        "properties": {
          "monthlyMode": {
            "enum": [
              "Unknown",
              "Day",
              "DayOfWeek",
              "LastDayOfMonth"
            ],
            "type": "string",
            "description": "Schedule type.",
            "default": "Day",
            "x-ms-enum": {
              "name": "WindowsMonthlyScheduleCalendarWithDaySettingsMonthlyMode"
            },
            "x-veeam-expandable": true
          },
          "weekDayNumber": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last"
            ],
            "type": "string",
            "description": "Counting number of the week day.\n> Required for the `DaysOfWeek` schedule type.\n",
            "default": "First",
            "nullable": true,
            "x-ms-enum": {
              "name": "WeekDayNumberType"
            }
          },
          "dayOfWeek": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "type": "string",
            "description": "Name of the week day.\n> Required for the `DaysOfWeek` schedule type.\n",
            "default": "Sunday",
            "nullable": true,
            "x-ms-enum": {
              "name": "DaysOfWeek"
            }
          },
          "day": {
            "maximum": 31,
            "minimum": 1,
            "type": "integer",
            "description": "Day of the month. \n> Required for the `Day` schedule type.\n",
            "format": "int32",
            "default": 1,
            "nullable": true
          },
          "months": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "All"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MonthsWithAll"
              }
            },
            "description": "Month.",
            "default": [
              "All"
            ]
          }
        }
      },
      "WindowsMonthlyScheduleCalendarSettings": {
        "required": [
          "weekDayNumber"
        ],
        "type": "object",
        "properties": {
          "weekDayNumber": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last"
            ],
            "type": "string",
            "description": "Counting number of the week day.",
            "x-ms-enum": {
              "name": "WeekDayNumberType"
            }
          },
          "dayOfWeek": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "type": "string",
            "description": "Name of the week day.",
            "default": "Sunday",
            "x-ms-enum": {
              "name": "DaysOfWeek"
            }
          },
          "months": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "All"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MonthsWithAll"
              }
            },
            "description": "Month.",
            "default": [
              "All"
            ]
          }
        }
      },
      "WindowsMonthlyScheduleSettings": {
        "required": [
          "calendarSettings"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Timestamp of a job start.",
            "format": "time-of-day",
            "default": "10:00"
          },
          "calendarSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMonthlyScheduleCalendarWithDaySettings"
              }
            ],
            "description": "Job calendar settings."
          }
        }
      },
      "WindowsDailyScheduleSettings": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Timestamp of a job start.",
            "format": "time-of-day",
            "default": "0:30"
          },
          "dailyMode": {
            "enum": [
              "Everyday",
              "WeekDays",
              "SpecificDays"
            ],
            "type": "string",
            "description": "Type of daily schedule.",
            "default": "Everyday",
            "x-ms-enum": {
              "name": "WindowsDailyScheduleDaysMode"
            }
          },
          "specificDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minItems": 1,
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Name of the week day.\n> Required for the `SpecificDays` type of daily schedule.\n",
            "nullable": true
          }
        }
      },
      "WindowsServerModeJobSettings": {
        "type": "object",
        "properties": {
          "retentionSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsServerJobRetentionSettings"
              }
            ],
            "description": "Retention settings.",
            "x-veeam-create-by-default": true
          },
          "scheduleSetting": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsServerJobScheduleSettings"
              }
            ],
            "description": "Scheduling settings.",
            "x-veeam-create-by-default": true
          },
          "indexingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsIndexingSettings"
              }
            ],
            "description": "Guest OS indexing settings.",
            "nullable": true
          },
          "applicationAwareProcessingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsApplicationAwareProcessingSettings"
              }
            ],
            "description": "Application-aware processing settings.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsApplicationAwareProcessingSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether the application-aware processing is enabled.",
            "default": false
          },
          "transactionLogProcessingMode": {
            "enum": [
              "ProcessTransactionLogsWithJob",
              "PerformCopyOnly"
            ],
            "type": "string",
            "description": "Application-aware processing type.",
            "default": "ProcessTransactionLogsWithJob",
            "x-ms-enum": {
              "name": "WindowsPolicyTransactionLogProcessingMode"
            }
          },
          "sqlServerTransactionLogHandlingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsSqlServerTransactionLogHandlingSettings"
              }
            ],
            "description": "Transaction log handling settings for Microsoft SQL Server.",
            "nullable": true
          },
          "oracleTransactionLogHandlingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsOracleTransactionLogHandlingSettings"
              }
            ],
            "description": "Archived log handling settings for Oracle database.",
            "nullable": true
          },
          "sharePointAccountSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SharePointAccountSettings"
              }
            ],
            "description": "Microsoft SharePoint account settings.",
            "nullable": true
          },
          "scriptSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsJobScriptSettings"
              }
            ],
            "description": "Execution settings for pre-freeze and post-thaw scripts.",
            "nullable": true
          }
        }
      },
      "WindowsJobScriptSettings": {
        "type": "object",
        "properties": {
          "mode": {
            "enum": [
              "Disabled",
              "IgnoreErrors",
              "FailJobOnError"
            ],
            "type": "string",
            "description": "Script processing mode.",
            "default": "Disabled",
            "x-ms-enum": {
              "name": "WindwosJobScriptMode"
            }
          },
          "preFreezeScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsJobScript"
              }
            ],
            "description": "Path to a pre-freeze script file.",
            "nullable": true
          },
          "postThawScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsJobScript"
              }
            ],
            "description": "Path to a post-thaw script file.",
            "nullable": true
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsJobScriptExecutionAccount"
              }
            ],
            "description": "Credentials of a user account with permissions to run scripts.",
            "nullable": true
          }
        }
      },
      "WindowsJobScript": {
        "required": [
          "fileName"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Script file name."
          },
          "content": {
            "minLength": 1,
            "type": "string",
            "description": "Script content in the Base64 format. The property is required and write-only.",
            "format": "byte",
            "nullable": true,
            "writeOnly": true
          }
        }
      },
      "WindowsJobScriptExecutionAccount": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 32767,
            "type": "string",
            "description": "Password.\n> Required only during job or policy initial configuration. <br>\n> For resource modification, the `null` value can be used instead of the previously provided password.\n",
            "format": "password",
            "nullable": true
          }
        }
      },
      "SharePointAccountSettings": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 32767,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "WindowsOracleTransactionLogHandlingSettings": {
        "properties": {
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsOracleAccountSettings"
              }
            ],
            "description": "Credentials of a user account that Veeam Agent for Microsoft Windows must use to connect to the Oracle database.",
            "nullable": true
          },
          "archivedLogsRetentionMode": {
            "enum": [
              "DoNotDeleteArchivedLogs",
              "DeleteLogsOlderThanHours",
              "DeleteLogsOverGb"
            ],
            "type": "string",
            "description": "Archived log processing mode.",
            "default": "DoNotDeleteArchivedLogs",
            "x-ms-enum": {
              "name": "WindowsPolicyOracleArchivedLogsRetentionMode"
            }
          },
          "backupLifeTimeHours": {
            "maximum": 60,
            "minimum": 1,
            "type": "integer",
            "description": "Amount of time after which archived logs must be deleted, in hours. \n> Required for the `DeleteLogsOlderThanHours` archived log processing mode.\n",
            "format": "int32",
            "default": 24
          },
          "backupSizeThresholdGb": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum threshold for archived log file size, in GB.\n> If an archived log file exceeds the limitation, it is deleted. <br>\n> Required for the `DeleteLogsOverGb` archived log processing mode.\n",
            "format": "int32",
            "default": 10
          },
          "backupLogsPeriodically": {
            "type": "boolean",
            "description": "Indicates whether Veeam Agent for Microsoft Windows must back up archive logs.",
            "default": false
          },
          "periodicallyBackupSetting": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPolicyPeriodicallyLogBackupSettings"
              }
            ],
            "description": "Archive log backup settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsPolicyPeriodicallyLogBackupSettings": {
        "properties": {
          "backupLogsEveryMin": {
            "maximum": 480,
            "minimum": 5,
            "type": "integer",
            "description": "Frequency for archived logs backup, in minutes.",
            "format": "int32",
            "default": 15
          },
          "backupRetentionMode": {
            "enum": [
              "UntilBackupIsDeleted",
              "KeepLastDays"
            ],
            "type": "string",
            "description": "Type of a retention policy for archived logs.",
            "default": "UntilBackupIsDeleted",
            "x-ms-enum": {
              "name": "WindowsPolicyMsSqlPeriodicallyLogBackupRetentionMode"
            }
          },
          "keepBackupsOnlyLastDays": {
            "maximum": 60,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days for which archived logs are kept.",
            "format": "int32",
            "default": 15
          }
        }
      },
      "WindowsOracleAccountSettings": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "accountType": {
            "enum": [
              "Oracle",
              "Windows"
            ],
            "type": "string",
            "description": "Type of the account used to access Oracle database.",
            "default": "Windows",
            "x-ms-enum": {
              "name": "OracleAccountType"
            }
          },
          "username": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 32767,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "WindowsSqlServerTransactionLogHandlingSettings": {
        "type": "object",
        "properties": {
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsMsSqlAccountSettings"
              }
            ],
            "description": "Credentials of a user account that Veeam Agent for Microsoft Windows must use to connect to the Microsoft SQL Server.",
            "nullable": true
          },
          "logsProcessingMode": {
            "enum": [
              "TruncateLogs",
              "DoNotTruncateLogs",
              "BackupLogsPeriodically"
            ],
            "type": "string",
            "description": "Transaction log processing mode.",
            "default": "TruncateLogs",
            "x-ms-enum": {
              "name": "WindowsPolicyMsSqlLogProcessingMode"
            }
          },
          "periodicallyBackupSetting": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPolicyPeriodicallyLogBackupSettings"
              }
            ],
            "description": "Settings for periodic transaction log backup.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsMsSqlAccountSettings": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 32767,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "WindowsWorkstationJobPeriodicalScheduleSettings": {
        "type": "object",
        "properties": {
          "dailyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDailyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required for a daily running job.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "shutdownAction": {
            "enum": [
              "SkipBackup",
              "BackupOncePoweredOn"
            ],
            "type": "string",
            "description": "Action that Veeam Agent for Microsoft Windows must perform in case your computer is powered off at the time when the scheduled backup job must start.",
            "default": "SkipBackup",
            "x-ms-enum": {
              "name": "WindowsWorkstationJobShutdownAction"
            }
          },
          "finalizingAction": {
            "enum": [
              "KeepRunning",
              "Sleep",
              "Shutdown",
              "Hibernate"
            ],
            "type": "string",
            "description": "Finalizing action that must be performed after the backup job completes successfully.",
            "default": "KeepRunning",
            "x-ms-enum": {
              "name": "WindowsWorkstationJobFinalizingAction"
            }
          }
        }
      },
      "WindowsWorkstationJobEventTriggerSettings": {
        "type": "object",
        "properties": {
          "backupOnLock": {
            "type": "boolean",
            "description": "Indicates whether a scheduled backup job must start when the user locks the computer.",
            "default": false
          },
          "backupOnLogOff": {
            "type": "boolean",
            "description": "Indicates whether a scheduled backup job must start when the user working with the computer performs a logout operation.",
            "default": false
          },
          "backupOnTargetConnection": {
            "type": "boolean",
            "description": "Indicates whether a scheduled backup job must start when the backup storage becomes available.",
            "default": false
          },
          "ejectTargetOnBackupComplete": {
            "type": "boolean",
            "description": "Indicates whether Veeam Agent for Microsoft Windows must unmount the storage device after the backup job completes successfully.\n> Cannot be enabled if the `backupOnTargetConnection` property has the `false` value.\n",
            "default": false
          },
          "backupNotOften": {
            "maximum": 99,
            "minimum": 1,
            "type": "integer",
            "description": "Minutely, hourly or daily interval between the backup job sessions.",
            "format": "int32",
            "default": 2
          },
          "notOftenTimeUnit": {
            "enum": [
              "Minutes",
              "Hours",
              "Days"
            ],
            "type": "string",
            "description": "Measurement units for interval between the backup job sessions.",
            "default": "Hours",
            "x-ms-enum": {
              "name": "MinutesHoursDays"
            }
          }
        }
      },
      "WindowsWorkstationJobScheduleSettings": {
        "type": "object",
        "properties": {
          "periodicalScheduleEnabled": {
            "type": "boolean",
            "description": "Indicates whether backup must be performed periodically.",
            "default": true
          },
          "periodicalScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsWorkstationJobPeriodicalScheduleSettings"
              }
            ],
            "description": "Scheduling settings for daily backup job launch.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "eventTriggerSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsWorkstationJobEventTriggerSettings"
              }
            ],
            "description": "Settings for events that trigger the backup job launch.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsWorkstationModeJobSettings": {
        "type": "object",
        "properties": {
          "scheduleSetting": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsWorkstationJobScheduleSettings"
              }
            ],
            "description": "Scheduling settings for a backup job.",
            "x-veeam-create-by-default": true
          },
          "retentionSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsWorkstationJobRetentionSettings"
              }
            ],
            "description": "Retention policy settings for a backup job.",
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsIndexingSettings": {
        "required": [
          "indexingType"
        ],
        "type": "object",
        "properties": {
          "indexingType": {
            "enum": [
              "None",
              "Everything",
              "SpecifiedFolders",
              "ExceptSpecifiedFolders"
            ],
            "type": "string",
            "description": "Indexing mode.",
            "x-ms-enum": {
              "name": "WindowsIndexingType"
            }
          },
          "includedFolders": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 32767,
              "minLength": 1,
              "pattern": "^[^<>]+$",
              "type": "string"
            },
            "description": "Array of paths to the indexed folders.\n> Required for the `SpecifiedFolders` indexing mode.\n",
            "nullable": true
          },
          "excludedFolders": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 32767,
              "minLength": 1,
              "pattern": "^[^<>]+$",
              "type": "string"
            },
            "description": "Array of paths to folders that are excluded from the indexing scope.\n> Required for the `ExceptSpecifiedFolders` indexing mode.\n",
            "nullable": true
          }
        }
      },
      "WindowsBackupStorage": {
        "type": "object",
        "properties": {
          "compressionLevel": {
            "enum": [
              "Unknown",
              "NoCompression",
              "Dedupe",
              "Optimal",
              "High",
              "Extreme"
            ],
            "type": "string",
            "description": "Compression level for the backup.",
            "default": "Optimal",
            "x-ms-enum": {
              "name": "WindowsJobCompressionLevel"
            },
            "x-extensible-enum": true
          },
          "storageOptimization": {
            "enum": [
              "Unknown",
              "Local16TbPlusBackup",
              "Local",
              "Lan",
              "Wan"
            ],
            "type": "string",
            "description": "Type of a backup target.",
            "default": "Local",
            "x-ms-enum": {
              "name": "WindowsJobStorageOptimization"
            },
            "x-extensible-enum": true
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Indicates whether encryption is enabled.\n> Encryption cannot be enabled for backup files stored on the Veeam backup repository.\n",
            "default": false
          },
          "password": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Password used for encryption. \n> Required if encryption is enabled.\n",
            "format": "password",
            "nullable": true
          },
          "passwordHint": {
            "maxLength": 32767,
            "type": "string",
            "description": "Hint for the password.\n> Must not consist of the password itself.\n",
            "nullable": true
          }
        }
      },
      "WindowsBackupTarget": {
        "required": [
          "targetType"
        ],
        "type": "object",
        "properties": {
          "targetType": {
            "enum": [
              "Unknown",
              "LocalFolder",
              "SharedFolder",
              "BackupRepository",
              "CloudRepository",
              "OneDrive"
            ],
            "type": "string",
            "description": "Target location for the created backup.\n> To store entire computer backups on the `LocalFolder` target location, you must use an external drive.\n> The `OneDrive` target type cannot be assigned using RESTful API.\n",
            "x-ms-enum": {
              "name": "WindowsBackupTargetType"
            }
          },
          "localPath": {
            "minLength": 1,
            "pattern": "^[a-zA-Z]:(\\\\(?!(aux|con|nul|prn|com[1-9]|lpt[1-9])(\\\\|$))([^<>:\"/\\\\|?*]+))+\\\\?$",
            "type": "string",
            "description": "Path to the folder where backup files must be stored.\n> Required for the `LocalFolder` target location. \n",
            "nullable": true
          },
          "sharedFolder": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsSharedFolderTarget"
              }
            ],
            "description": "Shared folder settings.\n> Required for the `SharedFolder` target location.\n",
            "nullable": true
          },
          "backupRepository": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupRepositoryTarget"
              }
            ],
            "description": "Veeam Backup & Replication repository settings.\n> Required for the `BackupRepository` target location.\n",
            "nullable": true
          },
          "cloudRepository": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsCloudRepositoryTarget"
              }
            ],
            "description": "Cloud repository settings.\n> Optional for the `CloudRepository` target location.\n",
            "nullable": true
          }
        }
      },
      "DiscoveryRuleScheduleSettings": {
        "required": [
          "scheduleType"
        ],
        "type": "object",
        "properties": {
          "scheduleType": {
            "enum": [
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically",
              "Continuously"
            ],
            "type": "string",
            "description": "Schedule type",
            "default": "NotScheduled",
            "x-ms-enum": {
              "name": "DiscoveryRuleScheduleType"
            }
          },
          "timeZone": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/TimeZone"
              }
            ],
            "description": "Time zone settings.",
            "nullable": true
          },
          "dailyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleDailyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required to run discovery daily.",
            "nullable": true
          },
          "monthlyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleMonthlyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required to run discovery monthly.",
            "nullable": true
          },
          "periodicalScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRulePeriodicalScheduleSettings"
              }
            ],
            "description": "Scheduling settings required to run discovery repeatedly throughout a day.",
            "nullable": true
          }
        }
      },
      "DiscoveryRuleDailyScheduleSettings": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time of the day when discovery must run.",
            "format": "time-of-day",
            "default": "0:30"
          },
          "specificDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minItems": 1,
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Week days on which discovery must be performed.\n> Required for the `SpecificDay` schedule type.\n",
            "nullable": true
          }
        }
      },
      "DiscoveryRuleMonthlyScheduleSettings": {
        "required": [
          "time",
          "calendarSettings"
        ],
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Time of the day when discovery must run.",
            "format": "time-of-day"
          },
          "calendarSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleMonthlyScheduleCalendarWithDaySettings"
              }
            ],
            "description": "Discovery calendar settings."
          }
        }
      },
      "DiscoveryRuleMonthlyScheduleCalendarWithDaySettings": {
        "required": [
          "monthlyMode",
          "months"
        ],
        "type": "object",
        "properties": {
          "monthlyMode": {
            "enum": [
              "Unknown",
              "Day",
              "DayOfWeek",
              "LastDayOfMonth"
            ],
            "type": "string",
            "description": "Type of schedule for monthly discovery.",
            "default": "Day",
            "x-ms-enum": {
              "name": "DiscoveryRuleMonthlyScheduleCalendarWithDaySettingsMonthlyMode"
            },
            "x-veeam-expandable": true
          },
          "weekDayNumber": {
            "enum": [
              "First",
              "Second",
              "Third",
              "Fourth",
              "Last"
            ],
            "type": "string",
            "description": "Counting number of the week day.\n> Required for the `DayOfWeek` schedule type.\n",
            "nullable": true,
            "x-ms-enum": {
              "name": "WeekDayNumberType"
            }
          },
          "dayOfWeek": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "type": "string",
            "description": "Week day.\n> Required for the `DayOfWeek` schedule type.\n",
            "nullable": true,
            "x-ms-enum": {
              "name": "DaysOfWeek"
            }
          },
          "day": {
            "maximum": 31,
            "minimum": 1,
            "type": "integer",
            "description": "Day of the month.\n> Required for the `Day` schedule type.\n",
            "format": "int32",
            "nullable": true
          },
          "months": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec",
                "All"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MonthsWithAll"
              }
            },
            "description": "Month."
          }
        }
      },
      "DiscoveryRulePeriodicalScheduleSettings": {
        "required": [
          "interval"
        ],
        "type": "object",
        "properties": {
          "intervalInMinutes": {
            "maximum": 43200,
            "minimum": 1,
            "type": "integer",
            "description": "Time interval for a periodically running discovery, in minutes. Discovery starts at the beginning of an hour after the specified time interval.",
            "default": 60
          }
        }
      },
      "TimeZone": {
        "required": [
          "timeZoneId"
        ],
        "type": "object",
        "properties": {
          "timeZoneId": {
            "type": "string",
            "description": "ID assigned to a time zone."
          },
          "displayName": {
            "type": "string",
            "description": "Time zone name.",
            "nullable": true,
            "readOnly": true
          },
          "utcOffset": {
            "maximum": 720,
            "minimum": -720,
            "type": "integer",
            "description": "UTC offset, in minutes.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WindowsGfsRetentionSettings": {
        "type": "object",
        "properties": {
          "weekly": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsGfsWeeklyRetentionSettings"
              }
            ],
            "description": "GFS retention policy settings for weekly full backups.\nThe `null` value indicates that long-term retention is disabled for weekly full backups.\n",
            "nullable": true
          },
          "monthly": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsGfsMonthlyRetentionSettings"
              }
            ],
            "description": "GFS retention policy settings for monthly full backups.\n> The `null` value indicates that long-term retention is disabled for monthly full backups.\n",
            "nullable": true
          },
          "yearly": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsGfsYearlyRetentionSettings"
              }
            ],
            "description": "GFS retention policy settings for yearly full backups.\n> The `null` value indicates that long-term retention is disabled for yearly full backups.\n",
            "nullable": true
          }
        }
      },
      "WindowsGfsWeeklyRetentionSettings": {
        "required": [
          "keepWeeklyBackupsForWeeks"
        ],
        "type": "object",
        "properties": {
          "keepWeeklyBackupsForWeeks": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of weeks during which restore points must not be modified or deleted.",
            "format": "int32",
            "default": 1
          },
          "useFullBackupFrom": {
            "enum": [
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday",
              "Sunday"
            ],
            "type": "string",
            "description": "Week day when Veeam Backup & Replication must assign the weekly GFS flag to a full restore point.",
            "default": "Sunday",
            "x-ms-enum": {
              "name": "DaysOfWeek"
            }
          }
        }
      },
      "WindowsGfsMonthlyRetentionSettings": {
        "required": [
          "keepMonthlyBackupsForMonths"
        ],
        "type": "object",
        "properties": {
          "keepMonthlyBackupsForMonths": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of months during which restore points must not be modified or deleted.",
            "format": "int32",
            "default": 1
          },
          "useWeeklyFullBackupForTheFollowingWeekOfMonth": {
            "enum": [
              "First",
              "Last"
            ],
            "type": "string",
            "description": "Week when Veeam Backup & Replication must assign the monthly GFS flag to a full restore point.",
            "default": "First",
            "x-ms-enum": {
              "name": "FirstOrLast"
            }
          }
        }
      },
      "WindowsGfsYearlyRetentionSettings": {
        "required": [
          "keepYearlyBackupsForYears"
        ],
        "type": "object",
        "properties": {
          "keepYearlyBackupsForYears": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of years during which restore points must not be modified or deleted.",
            "format": "int32",
            "default": 1
          },
          "useMonthlyFullBackupForTheFollowingMonth": {
            "enum": [
              "Jan",
              "Feb",
              "Mar",
              "Apr",
              "May",
              "Jun",
              "Jul",
              "Aug",
              "Sep",
              "Oct",
              "Nov",
              "Dec"
            ],
            "type": "string",
            "description": "Month when Veeam Backup & Replication must assign the yearly GFS flag to a full restore point.",
            "default": "Jan",
            "x-ms-enum": {
              "name": "Month"
            }
          }
        }
      },
      "WindowsSharedFolderTarget": {
        "required": [
          "path",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "path": {
            "minLength": 1,
            "pattern": "^(\\\\\\\\[^/\\\\\\]\\[\":;|<>+=,?* _]+\\\\[^/\\\\\\]\\[\":;|<>+=,?*]+)((?:\\\\[^\\\\/:*?\"<>|]+)*\\\\?)$",
            "type": "string",
            "description": "UNC name of the network shared folder in which you want to store backup files. The UNC name must start with two back slashes (\\\\)."
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPolicyTargetCredentials"
              }
            ],
            "description": "Credentials of a user account that has access permissions on the shared folder.\n> If no user credentials are specified, backup job uses the Active Directory computer account or account configured in Veeam Agent for Microsoft Windows.'\n"
          },
          "backupCacheSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupCacheSettings"
              }
            ],
            "description": "Local backup cache settings.\n> The `null` value indicates that local backup cache is disabled.\n",
            "nullable": true
          }
        }
      },
      "WindowsPolicyTargetCredentials": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "User name."
          },
          "password": {
            "maxLength": 32767,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "WindowsBackupServerConnectionOptions": {
        "required": [
          "address",
          "remoteRepositoryName"
        ],
        "type": "object",
        "properties": {
          "address": {
            "maxLength": 32767,
            "minLength": 1,
            "pattern": "(^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\_\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-\\_]*[A-Za-z0-9])$)|($(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])^)|(^(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+$)",
            "type": "string",
            "description": "DNS name or IP address of a Veeam Backup & Replication server that manages the target backup repository."
          },
          "port": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Port over which Veeam Agent for Microsoft Windows must communicate with the backup repository.",
            "format": "int32",
            "default": 10001
          },
          "remoteRepositoryName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Name of a backup repository."
          }
        }
      },
      "WindowsBackupRepositoryTarget": {
        "required": [
          "backupServer"
        ],
        "type": "object",
        "properties": {
          "backupServer": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsBackupServerConnectionOptions"
              }
            ],
            "description": "Veeam Backup & Replication server connection settings."
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPolicyTargetCredentials"
              }
            ],
            "description": "Credentials of a user account that has access to the backup repository. \n> If no user credentials are specified, backup job uses the Active Directory computer account.\n",
            "nullable": true
          },
          "backupCacheSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupCacheSettings"
              }
            ],
            "description": "Local backup cache settings.\n> The `null` value indicates that local backup cache is disabled.\n",
            "nullable": true
          }
        }
      },
      "WindowsCloudRepositoryTarget": {
        "type": "object",
        "properties": {
          "backupCacheSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupCacheSettings"
              }
            ],
            "description": "Local backup cache settings.\n> The `null` value indicates that local backup cache is disabled.\n",
            "nullable": true
          }
        }
      },
      "BackupCacheSettings": {
        "required": [
          "location"
        ],
        "type": "object",
        "properties": {
          "location": {
            "maxLength": 233,
            "minLength": 1,
            "pattern": "^[a-zA-Z]:(\\\\(?!(aux|con|nul|prn|com[1-9]|lpt[1-9])(\\\\|$))([^<>:\"/\\\\|?*]+))+\\\\?$",
            "type": "string",
            "description": "Path to the folder in which backup cache files must be stored."
          },
          "maximumSizeGb": {
            "maximum": 65535,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum size of the backup cache, in GB.",
            "format": "int32",
            "default": 10
          }
        }
      },
      "WindowsBackupSource": {
        "required": [
          "backupMode"
        ],
        "type": "object",
        "properties": {
          "backupMode": {
            "enum": [
              "Unknown",
              "EntireComputer",
              "Volume",
              "FilesFolders"
            ],
            "type": "string",
            "description": "Backup mode.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsBackupAgentJobBackupMode"
            }
          },
          "computerLevelOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsComputerLevelBackupSource"
              }
            ],
            "description": "Settings for entire computer backup.",
            "nullable": true
          },
          "volumeLevelOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsVolumeLevelBackupSource"
              }
            ],
            "description": "Settings required for the `Volume` backup mode.",
            "nullable": true
          },
          "fileLevelOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsFileLevelBackupSource"
              }
            ],
            "description": "Settings required for the `FilesFolders` backup mode.",
            "nullable": true
          }
        }
      },
      "WindowsComputerLevelBackupSource": {
        "required": [
          "includeUsbDrives"
        ],
        "type": "object",
        "properties": {
          "includeUsbDrives": {
            "type": "boolean",
            "description": "Indicates whether external USB drives must be included in the backup.\n> USB flash drives are not supported.\n"
          }
        }
      },
      "WindowsVolumeLevelBackupSource": {
        "required": [
          "volumes"
        ],
        "type": "object",
        "properties": {
          "mode": {
            "enum": [
              "Unknown",
              "InclusionMode",
              "ExclusionMode"
            ],
            "type": "string",
            "description": "Filter type.",
            "default": "InclusionMode",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsVolumeLevelBackupSourceMode"
            }
          },
          "backupOperatingSystem": {
            "type": "boolean",
            "description": "Indicates whether agent operating system is included in a backup scope.\n>Available only if the `InclusionMode` filter type is selected.\n",
            "default": false
          },
          "inclusions": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "^[a-zA-Z]:\\\\?$",
              "type": "string"
            },
            "description": "Array of drive letters of volumes that must be included in the backup scope.\n> Drive letters must be specified in the following format: `C:\\`.\n",
            "nullable": true
          },
          "exclusions": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "^[a-zA-Z]:\\\\?$",
              "type": "string"
            },
            "description": "Array of drive letters of volumes that must be excluded from the backup scope.\n> Drive letters must be specified in the following format: `C:\\`.\n",
            "nullable": true
          }
        }
      },
      "WindowsFileLevelBackupSource": {
        "type": "object",
        "properties": {
          "directories": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "(^[a-zA-Z]:\\\\$)|(^[a-zA-Z]:(\\\\(?!(aux|con|nul|prn|com[1-9]|lpt[1-9])(\\\\|$))([^<>:\"/\\\\|?*]+))+\\\\?$)",
              "type": "string"
            },
            "description": "Array of paths to folders containing the files that must be protected.\n> Can be skipped, if the `osfilesIncluded` or `personalFilesIncluded` property has the `true` value.'\n",
            "nullable": true
          },
          "inclusionMasks": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 32767,
              "minLength": 1,
              "pattern": "^[^\\/\\\\]+$",
              "type": "string"
            },
            "description": "Array of file names and/or masks for file types that must be protected.",
            "nullable": true
          },
          "exclusionMasks": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "maxLength": 32767,
              "minLength": 1,
              "pattern": "^[^\\/\\\\]+$",
              "type": "string"
            },
            "description": "Array of file names and/or masks for file types that must not be protected.",
            "nullable": true
          },
          "osfilesIncluded": {
            "type": "boolean",
            "description": "Indicates whether the job must protect the OS data.\n> The `true` value automatically applies the `true` value to the `personalFilesIncluded` property.\n",
            "default": false
          },
          "excludeOneDriveFolders": {
            "type": "boolean",
            "description": "Indicates whether the OneDrive folders must be excluded from the backup scope.",
            "default": false
          },
          "personalFilesIncluded": {
            "type": "boolean",
            "description": "Indicates whether the job must protect the user profile folder including all user settings and data.\n> Has the `true` value if the `osfilesIncluded` property has the `true` value.'\n",
            "default": false
          },
          "personalFilesAdvancedSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsPersonalFilesBackupAdvancedSettings"
              }
            ],
            "description": "Advanced settings for personal files included in the backup scope.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsPersonalFilesBackupAdvancedSettings": {
        "type": "object",
        "properties": {
          "mode": {
            "enum": [
              "Unknown",
              "All",
              "Granular"
            ],
            "type": "string",
            "description": "Type of personal file protection.",
            "default": "All",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsPersonalFilesBackupSourceMode"
            }
          },
          "inclusions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Desktop",
                "Documents",
                "Pictures",
                "Video",
                "Music",
                "Favorites",
                "Downloads",
                "ApplicationData",
                "OtherFilesAndFolders"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "WindowsPersonalFilesInclusions"
              }
            },
            "description": "Profile folders that must be included in the backup scope.",
            "nullable": true
          },
          "exclusions": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "RoamingUsers"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "WindowsPersonalFilesExclusions"
              }
            },
            "description": "Exclusions configured for personal file backup.",
            "nullable": true
          }
        }
      },
      "WindowsWorkstationJobRetentionSettings": {
        "type": "object",
        "properties": {
          "retentionDays": {
            "maximum": 730,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days for which backup files must be stored in the target location. Days without backups are not included.",
            "format": "int32",
            "default": 7
          }
        }
      },
      "WindowsServerJobRetentionSettings": {
        "type": "object",
        "properties": {
          "retentionMode": {
            "enum": [
              "Unknown",
              "Days",
              "RestorePoints"
            ],
            "type": "string",
            "description": "Retention policy type.\n> The `Days` type is available only for Veeam Agent for Microsoft Windows version 5.0 or later. For earlier versions the `RestorePoints` type is used.'\n",
            "default": "RestorePoints",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ServerRetentionMode"
            }
          },
          "retentionCount": {
            "maximum": 730,
            "minimum": 1,
            "type": "integer",
            "description": "Retention policy counter value.",
            "format": "int32",
            "default": 7
          }
        }
      },
      "LinuxBackupPolicy": {
        "required": [
          "jobConfiguration",
          "operationMode"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup policy template.",
            "format": "uuid",
            "readOnly": true
          },
          "createSubtenants": {
            "type": "boolean",
            "description": "Indicates whether a subtenant must be created for each Veeam Agent for Linux.",
            "default": true
          },
          "unlimitedSubtenantQuota": {
            "type": "boolean",
            "description": "Indicates whether a subtenant can consume unlimited amount of space on a repository.",
            "default": false
          },
          "repositoryQuotaGB": {
            "type": "integer",
            "description": "Maximum amount of space that a subtenant can consume on a repository.\n> If a subtenant can consume unlimited amount of space, the value of this property is ignored.'\n",
            "format": "int32",
            "default": 100,
            "nullable": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        },
        "readOnly": true
      },
      "LinuxBackupPolicyInput": {
        "required": [
          "name",
          "mode",
          "accessMode",
          "operationMode",
          "jobConfiguration"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^~\"#%&*:<>?/\\\\{|}.'`$]+$",
            "type": "string",
            "description": "Backup policy name."
          },
          "description": {
            "maxLength": 512,
            "type": "string",
            "description": "Backup policy description.",
            "default": ""
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "accessMode": {
            "$ref": "#/components/schemas/BackupPolicyAccessMode"
          },
          "createSubtenants": {
            "type": "boolean",
            "description": "Defines whether a subtenant must be created for each Veeam Agent for Microsoft Windows.\n> Available if a cloud repository is selected as backup destination.\n",
            "default": true
          },
          "unlimitedSubtenantQuota": {
            "type": "boolean",
            "description": "Defines whether a subtenant can consume unlimited amount of space on a repository.\n> Available if a cloud repository is selected as backup destination.\n",
            "default": false
          },
          "repositoryQuotaGB": {
            "type": "integer",
            "description": "Maximum amount of space that a subtenant can consume on a repository.\n> If a subtenant can consume unlimited amount of space, the value of this property is ignored. <br>\n> Available if a cloud repository is selected as backup destination.\n",
            "format": "int32",
            "default": 100,
            "nullable": true
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        }
      },
      "LinuxBackupJobConfiguration": {
        "required": [
          "backupSource",
          "backupTarget"
        ],
        "type": "object",
        "properties": {
          "backupSource": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupSource"
              }
            ],
            "description": "Data included in the backup scope."
          },
          "backupTarget": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupTarget"
              }
            ],
            "description": "Location of the backup files."
          },
          "backupStorage": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupStorage"
              }
            ],
            "description": "Backup storage settings.",
            "x-veeam-create-by-default": true
          },
          "indexingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxIndexingSettings"
              }
            ],
            "description": "Guest OS indexing settings.",
            "nullable": true
          },
          "scriptSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScriptSettings"
              }
            ],
            "description": "Execution settings for job and snapshot scripts.",
            "nullable": true
          },
          "retentionSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobRetentionSettings"
              }
            ],
            "description": "Retention policy settings for a backup job.",
            "x-veeam-create-by-default": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScheduleSettings"
              }
            ],
            "description": "Scheduling settings for a backup job.",
            "x-veeam-create-by-default": true
          },
          "applicationAwareProcessingSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobApplicationAwareProcessingSettings"
              }
            ],
            "description": "Application-aware processing settings.",
            "nullable": true
          }
        }
      },
      "LinuxCustomJobConfiguration": {
        "required": [
          "name",
          "operationMode",
          "accessMode",
          "jobConfiguration"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^~\"#%&*:<>?/\\\\{|}.'`$]+$",
            "type": "string",
            "description": "Backup job name."
          },
          "description": {
            "maxLength": 512,
            "type": "string",
            "description": "Job description.",
            "nullable": true
          },
          "operationMode": {
            "$ref": "#/components/schemas/BackupJobOperationMode"
          },
          "cloudRepositoryConnectionSettings": {
            "$ref": "#/components/schemas/CloudRepositoryConnectionSettings"
          },
          "jobConfiguration": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupJobConfiguration"
              }
            ],
            "description": "Job configuration."
          }
        },
        "readOnly": true
      },
      "LinuxBackupSource": {
        "required": [
          "backupMode"
        ],
        "type": "object",
        "properties": {
          "backupMode": {
            "enum": [
              "Unknown",
              "EntireComputer",
              "Volume",
              "FilesFolders"
            ],
            "type": "string",
            "description": "Backup mode.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxBackupMode"
            }
          },
          "volumeLevelOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxVolumeLevelBackupSource"
              }
            ],
            "description": "Settings required for the `Volume` backup mode.",
            "nullable": true
          },
          "fileLevelOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxFileLevelBackupSource"
              }
            ],
            "description": "Settings required for the `FilesFolders` backup mode.",
            "nullable": true
          }
        }
      },
      "LinuxVolumeLevelBackupSource": {
        "required": [
          "volumes"
        ],
        "type": "object",
        "properties": {
          "volumes": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxBackupVolumeSourceSettings"
            },
            "description": "Array of source directories."
          }
        }
      },
      "LinuxBackupVolumeSourceSettings": {
        "required": [
          "volumeType",
          "path"
        ],
        "type": "object",
        "properties": {
          "volumeType": {
            "enum": [
              "Device",
              "MountPoint",
              "LVM",
              "BTRFS"
            ],
            "type": "string",
            "description": "Volume type.",
            "x-ms-enum": {
              "name": "LinuxVolumeType"
            }
          },
          "path": {
            "type": "string",
            "description": "Path to a block device or mount point."
          }
        }
      },
      "LinuxFileLevelBackupSource": {
        "required": [
          "directories"
        ],
        "type": "object",
        "properties": {
          "directories": {
            "minItems": 1,
            "type": "array",
            "items": {
              "pattern": "^\\/([A-z0-9-_+]+\\/)*([A-z0-9-_]+)$",
              "type": "string"
            },
            "description": "Array of paths to folders containing the files that must be protected.",
            "nullable": true
          },
          "inclusionMasks": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "^[^/\\\\]+$",
              "type": "string"
            },
            "description": "Array of inclusion masks.\n> Use `*` to represent any amount of letters, and `?` to represent a single letter.\n",
            "nullable": true
          },
          "exclusionMasks": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string"
            },
            "description": "Array of exclusion masks.\n> Use `*` to represent any amount of letters, and `?` to represent a single letter. You can additionally specify path to a folder.\n",
            "nullable": true
          }
        }
      },
      "LinuxBackupTarget": {
        "required": [
          "targetType"
        ],
        "type": "object",
        "properties": {
          "targetType": {
            "enum": [
              "Unknown",
              "LocalFolder",
              "SharedFolder",
              "BackupRepository",
              "CloudRepository"
            ],
            "type": "string",
            "description": "Target location for the created backup.",
            "x-ms-enum": {
              "name": "LinuxBackupTargetType"
            }
          },
          "localPath": {
            "pattern": "^\\/([A-z0-9-_+]+\\/)*([A-z0-9-_]+)$",
            "type": "string",
            "description": "Path to the folder where backup files must be stored.\n> Required for the `LocalFolder` target location.\n",
            "nullable": true
          },
          "sharedFolder": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxSharedFolderTarget"
              }
            ],
            "description": "Shared folder settings.\n> Required for the `SharedFolder` target location.\n",
            "nullable": true
          },
          "backupRepository": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBackupServerSettings"
              }
            ],
            "description": "Veeam Backup & Replication repository settings.\n> Required for the `BackupRepository` target location.'\n",
            "nullable": true
          },
          "enableDeletedFilesRetention": {
            "type": "boolean",
            "description": "Defines whether the deleted backup files must be removed after a specific time period.",
            "default": false
          },
          "removeDeletedItemsDataAfter": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Number of days for which the deleted backup files are stored.",
            "default": 30
          }
        }
      },
      "LinuxBackupStorage": {
        "type": "object",
        "properties": {
          "compressionLevel": {
            "enum": [
              "Unknown",
              "NoCompression",
              "Dedupe",
              "Optimal",
              "High",
              "Extreme"
            ],
            "type": "string",
            "description": "Compression level for the backup.",
            "default": "Optimal",
            "x-ms-enum": {
              "name": "LinuxJobCompressionLevel"
            }
          },
          "blockSize": {
            "enum": [
              "Unknown",
              "Local100TbPlusBackup",
              "Local",
              "Lan",
              "Wan"
            ],
            "type": "string",
            "description": "Type of data block size.",
            "default": "Local",
            "x-ms-enum": {
              "name": "LinuxJobBlockSize"
            }
          },
          "encryptionEnabled": {
            "type": "boolean",
            "description": "Indicates whether encryption is enabled.\n> Encryption cannot be enabled for backup files stored on the Veeam backup repository.\n",
            "default": false
          },
          "password": {
            "maxLength": 256,
            "type": "string",
            "description": "Password used for encryption.\n> Required if encryption is enabled.\n",
            "format": "password",
            "nullable": true
          },
          "passwordHint": {
            "type": "string",
            "description": "Hint for the password.\n> The hint must not consist of the password.\n",
            "nullable": true
          },
          "isSnapshotRequired": {
            "type": "boolean",
            "description": "Indicates whether Veeam Agent for Linux must create a snapshot of a backed-up volume during backup.",
            "default": true
          }
        }
      },
      "LinuxIndexingSettings": {
        "type": "object",
        "properties": {
          "indexingType": {
            "enum": [
              "None",
              "EveryFolders",
              "SpecifiedFolders",
              "ExceptSpecifiedFolders"
            ],
            "type": "string",
            "description": "Indexing mode.",
            "default": "None",
            "x-ms-enum": {
              "name": "LinuxIndexingType"
            }
          },
          "includedFolders": {
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "^[^<>]+$",
              "type": "string"
            },
            "description": "Array of paths to the indexed folders.\n> Required for the `SpecifiedFolders` indexing mode.'\n",
            "nullable": true
          },
          "excludedFolders": {
            "type": "array",
            "items": {
              "minLength": 1,
              "pattern": "^[^<>]+$",
              "type": "string"
            },
            "description": "Array of paths to folders that are excluded from the indexing scope.\n> Required for the `ExceptSpecifiedFolders` indexing mode.\n",
            "nullable": true
          }
        }
      },
      "LinuxJobScriptSettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether script processing is enabled.",
            "default": false
          },
          "preJobScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScript"
              }
            ],
            "description": "Path to a pre-job script.",
            "nullable": true
          },
          "postJobScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScript"
              }
            ],
            "description": "Path to a post-job script.",
            "nullable": true
          },
          "preFreezeScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScript"
              }
            ],
            "description": "Path to a pre-freeze script.",
            "nullable": true
          },
          "postThawScript": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxJobScript"
              }
            ],
            "description": "Path to a post-thaw script.",
            "nullable": true
          }
        }
      },
      "LinuxJobScript": {
        "required": [
          "fileName"
        ],
        "type": "object",
        "properties": {
          "fileName": {
            "maxLength": 255,
            "minLength": 1,
            "type": "string",
            "description": "Script file name."
          },
          "content": {
            "minLength": 1,
            "type": "string",
            "description": "Script content in the Base64 format. The property is write-only.",
            "format": "byte",
            "nullable": true,
            "writeOnly": true
          }
        }
      },
      "LinuxJobRetentionSettings": {
        "type": "object",
        "properties": {
          "restorePointsCount": {
            "maximum": 730,
            "minimum": 1,
            "type": "integer",
            "description": "Number of restore points that must be kept in the target location.",
            "format": "int32",
            "default": 7
          }
        }
      },
      "LinuxJobScheduleSettings": {
        "type": "object",
        "properties": {
          "scheduleType": {
            "enum": [
              "Unknown",
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically"
            ],
            "type": "string",
            "description": "Type of periodicity.",
            "default": "Daily",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxScheduleType"
            }
          },
          "dailyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxDailyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required for a daily running job.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "monthlyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxMonthlyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required for a monthly running job.",
            "nullable": true
          },
          "periodicallyScheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxPeriodicallyScheduleSettings"
              }
            ],
            "description": "Scheduling settings required to run a job repeatedly throughout a day.",
            "nullable": true
          },
          "activeFullSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxActiveFullSettings"
              }
            ],
            "description": "Scheduling settings for periodically created active full backups.\n> The `null` value indicates that periodic creation of active full backups is disabled.'\n",
            "nullable": true
          },
          "retrySettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxScheduleRetrySettings"
              }
            ],
            "description": "Automatic retry settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "LinuxDailyScheduleSettings": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Timestamp of a job start.",
            "format": "time-of-day",
            "default": "0:30"
          },
          "dailyMode": {
            "enum": [
              "Everyday",
              "SpecificDays"
            ],
            "type": "string",
            "description": "Type of daily schedule.",
            "default": "Everyday",
            "x-ms-enum": {
              "name": "LinuxDailyScheduleDaysMode"
            }
          },
          "specificDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "minItems": 1,
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Name of the week day. Required for the SpecificDays type of daily schedule.",
            "nullable": true
          }
        }
      },
      "LinuxMonthlyScheduleSettings": {
        "type": "object",
        "properties": {
          "time": {
            "type": "string",
            "description": "Timestamp of a job start.",
            "format": "time-of-day",
            "default": "10:00"
          },
          "dayOfMonth": {
            "maximum": 31,
            "minimum": 1,
            "type": "integer",
            "description": "Day of the month.",
            "default": 1
          }
        }
      },
      "LinuxPeriodicallyScheduleSettings": {
        "type": "object",
        "properties": {
          "intervalInMinutes": {
            "maximum": 1440,
            "minimum": 1,
            "type": "integer",
            "description": "Time interval for a periodically running job, in minutes.",
            "default": 60
          }
        }
      },
      "LinuxActiveFullSettings": {
        "type": "object",
        "properties": {
          "scheduleType": {
            "enum": [
              "Unknown",
              "NotScheduled",
              "Monthly",
              "Weekly"
            ],
            "type": "string",
            "description": "Type of periodicity.",
            "default": "NotScheduled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxActiveFullSettingsScheduleType"
            }
          },
          "dayOfMonth": {
            "maximum": 31,
            "minimum": 1,
            "type": "integer",
            "description": "Day of the month.",
            "default": 1,
            "nullable": true
          },
          "weeklyOnDays": {
            "minItems": 1,
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "DaysOfWeek"
              }
            },
            "description": "Name of the week day.",
            "nullable": true
          }
        }
      },
      "LinuxScheduleRetrySettings": {
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether Veeam Agent for Linux must attempt to run the backup job again if the job fails.",
            "default": true
          },
          "retryTimes": {
            "maximum": 777,
            "minimum": 1,
            "type": "integer",
            "description": "Number of attempts to run a job.",
            "format": "int32",
            "default": 3,
            "nullable": true
          },
          "waitTimeoutMinutes": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Time interval between attempts to run a job.",
            "format": "int32",
            "default": 10,
            "nullable": true
          }
        }
      },
      "LinuxJobApplicationAwareProcessingSettings": {
        "type": "object",
        "properties": {
          "oracleAapSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxOracleApplicationAwareProcessingSettings"
              }
            ],
            "description": "Archived log handling settings for Oracle database.",
            "nullable": true
          },
          "mySqlAapSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxMySqlApplicationAwareProcessingSettings"
              }
            ],
            "description": "MySQL database processing settings.",
            "nullable": true
          },
          "postgreSqlAapSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxPostgreSqlApplicationAwareProcessingSettings"
              }
            ],
            "description": "PostgreSQL database processing settings.",
            "nullable": true
          }
        }
      },
      "LinuxOracleApplicationAwareProcessingSettings": {
        "type": "object",
        "properties": {
          "processingType": {
            "enum": [
              "DisableProcess",
              "TryProcess",
              "RequireSuccess"
            ],
            "type": "string",
            "description": "Processing type.",
            "default": "DisableProcess",
            "x-ms-enum": {
              "name": "LinuxAapProcessingType"
            }
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBaseCredentials"
              }
            ],
            "description": "Credentials of a user account that Veeam Agent for Linux must use to connect to the Oracle database.",
            "nullable": true
          },
          "truncationConfig": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxOracleArchivedLogsTruncationConfig"
              }
            ],
            "description": "Archived log processing settings.",
            "nullable": true
          },
          "useOracleCredentials": {
            "type": "boolean",
            "description": "Indicates whether the Oracle account credentials must be used.",
            "default": false
          }
        }
      },
      "LinuxOracleArchivedLogsTruncationConfig": {
        "type": "object",
        "properties": {
          "truncationMode": {
            "enum": [
              "TruncateDisabled",
              "TruncateByAge",
              "TruncateBySize"
            ],
            "type": "string",
            "description": "Archived log processing mode.",
            "default": "TruncateDisabled",
            "x-ms-enum": {
              "name": "LinuxOracleArchivedLogsTruncationMode"
            }
          },
          "sizeGB": {
            "maximum": 999,
            "minimum": 1,
            "type": "integer",
            "description": "Maximum threshold for archived log file size, in GB. If an archived log file exceeds the limitation, it is deleted.\n> Required for the `TruncateBySize` archived log processing mode.\n",
            "format": "int64",
            "default": 10,
            "nullable": true
          },
          "lifeTimeHours": {
            "maximum": 60,
            "minimum": 1,
            "type": "integer",
            "description": "Amount of time after which archived logs must be deleted, in hours.\n> Required for the `TruncateByAge` archived log processing mode.\n",
            "format": "int64",
            "default": 24,
            "nullable": true
          }
        }
      },
      "LinuxMySqlApplicationAwareProcessingSettings": {
        "type": "object",
        "properties": {
          "processingType": {
            "enum": [
              "DisableProcess",
              "TryProcess",
              "RequireSuccess"
            ],
            "type": "string",
            "description": "Transaction log processing mode.",
            "default": "DisableProcess",
            "x-ms-enum": {
              "name": "LinuxAapProcessingType"
            }
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBaseCredentials"
              }
            ],
            "description": "Credentials of a user account that Veeam Agent for Linux must use to connect to the MySQL database.",
            "nullable": true
          },
          "authType": {
            "enum": [
              "MySQLPassword",
              "MySQLPasswordFile"
            ],
            "type": "string",
            "description": "Type of credentials format.",
            "default": "MySQLPassword",
            "x-ms-enum": {
              "name": "LinuxMySqlAuthType"
            }
          },
          "passwordFilePath": {
            "type": "string",
            "description": "Path to the password file.",
            "nullable": true
          }
        }
      },
      "LinuxPostgreSqlApplicationAwareProcessingSettings": {
        "type": "object",
        "properties": {
          "processingType": {
            "enum": [
              "DisableProcess",
              "TryProcess",
              "RequireSuccess"
            ],
            "type": "string",
            "description": "PostgreSQL database processing type.",
            "default": "DisableProcess",
            "x-ms-enum": {
              "name": "LinuxAapProcessingType"
            }
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxBaseCredentials"
              }
            ],
            "description": "Credentials of a user account that Veeam Agent for Linux must use to connect to the PostgreSQL database.",
            "nullable": true
          },
          "authType": {
            "enum": [
              "PSQLPassword",
              "PSQLPasswordFile",
              "PSQLPeer"
            ],
            "type": "string",
            "description": "Type of credentials format.",
            "default": "PSQLPassword",
            "x-ms-enum": {
              "name": "LinuxPostgreAuthType"
            }
          }
        }
      },
      "LinuxSharedFolderTarget": {
        "required": [
          "targetType",
          "path"
        ],
        "type": "object",
        "properties": {
          "targetType": {
            "enum": [
              "NFS",
              "SMB"
            ],
            "type": "string",
            "description": "Type of a network shared folder.",
            "default": "NFS",
            "x-ms-enum": {
              "name": "LinuxSharedFolderTargetType"
            }
          },
          "path": {
            "pattern": "^([^/\\\\\\][\":;|<>+=,?* _]+\\/[^/\\\\\\][\":;|<>+=,?*]+)((?:\\/[^\\\\/:*?\"<>|]+)*\\/?)$",
            "type": "string",
            "description": "Path to a network shared folder.'"
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxCommonCredentials"
              }
            ],
            "description": "Credentials of a user account that has access permissions on a shared folder.",
            "nullable": true
          }
        }
      },
      "LinuxBackupServerSettings": {
        "required": [
          "connection",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "connection": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxConnectionSettings"
              }
            ],
            "description": "Settings required to connect a Linux computer to a Veeam Backup & Replication server."
          },
          "remoteRepositoryName": {
            "minLength": 1,
            "type": "string",
            "description": "Name of a backup repository.",
            "nullable": true
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxCommonCredentials"
              }
            ],
            "description": "Credentials of a user account that has access to a backup repository."
          }
        }
      },
      "LinuxConnectionSettings": {
        "required": [
          "serverName"
        ],
        "type": "object",
        "properties": {
          "serverName": {
            "minLength": 1,
            "pattern": "(^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\_\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-\\_]*[A-Za-z0-9])$)|($(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])^)|(^(?:(?:[0-9a-fA-F:]){1,4}(?:(?::(?:[0-9a-fA-F]){1,4}|:)){2,7})+$)",
            "type": "string",
            "description": "DNS name or IP address of a Veeam Backup & Replication server."
          },
          "serverPort": {
            "minimum": 1,
            "type": "integer",
            "description": "Number of a port over which Veeam Agent for Linux must communicate with a Veeam Backup & Replication server.",
            "format": "int32",
            "default": 10006
          }
        }
      },
      "LinuxBaseCredentials": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"!#$%^&(){}]+(?<!\\.)$",
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "LinuxCommonCredentials": {
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"!#$%^&(){}]+(?<!\\.)$",
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          },
          "domain": {
            "maxLength": 256,
            "type": "string",
            "description": "Domain.",
            "nullable": true
          }
        }
      },
      "BackupAgent": {
        "required": [
          "guiMode"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "agentPlatform": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Name of a platform on which Veeam backup agent is deployed.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentPlatform"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Active",
              "NotRunning"
            ],
            "type": "string",
            "description": "Status of a Veeam backup agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentStatus"
            }
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent that is deployed along with Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site on which an organization that owns Veeam backup agents is registered.",
            "format": "uuid",
            "nullable": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization to which Veeam backup agents belong.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a managed computer on which Veeam backup agent is deployed.",
            "readOnly": true
          },
          "operationMode": {
            "enum": [
              "Unknown",
              "UnLicensed",
              "Server",
              "Workstation"
            ],
            "type": "string",
            "description": "Backup job operation mode.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentOperationMode"
            }
          },
          "guiMode": {
            "enum": [
              "Unknown",
              "ReadOnly",
              "Full"
            ],
            "type": "string",
            "description": "Indicates the UI access mode for the Veeam backup agent.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentGuiMode"
            }
          },
          "platform": {
            "enum": [
              "Unknown",
              "Physical",
              "Cloud",
              "Virtual"
            ],
            "type": "string",
            "description": "Computer platform on which Veeam backup agent is deployed.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentPlatformType"
            }
          },
          "version": {
            "type": "string",
            "description": "Version of Veeam backup agent deployed on a managed computer.",
            "readOnly": true
          },
          "activationTime": {
            "type": "string",
            "description": "Date and time when Veeam backup agent was activated.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "managementMode": {
            "enum": [
              "Unknown",
              "UnManaged",
              "ManagedByVBR",
              "ManagedByConsole"
            ],
            "type": "string",
            "description": "Management mode of Veeam backup agent.\n> You can change management mode to `ManagedByConsole` or `UnManaged` using the PATCH endpoint.\n",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentManagedMode"
            }
          },
          "installationType": {
            "enum": [
              "Unknown",
              "Full",
              "Restricted",
              "Broken",
              "Installing",
              "Uninstalling"
            ],
            "type": "string",
            "description": "Type of Veeam backup agent installation procedure.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentInstallationType"
            }
          },
          "totalJobsCount": {
            "type": "integer",
            "description": "Number of all jobs.",
            "format": "int32",
            "readOnly": true
          },
          "runningJobsCount": {
            "type": "integer",
            "description": "Number of running jobs.",
            "format": "int32",
            "readOnly": true
          },
          "successJobsCount": {
            "type": "integer",
            "description": "Number of successful jobs.",
            "format": "int32",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "managementAgentUid": "BB111975-B409-49B5-8ECE-FFFECB13494F",
          "name": "VAW AgentX",
          "operationMode": "Server",
          "guiMode": "ReadOnly",
          "platform": "Cloud"
        }
      },
      "WindowsBackupAgent": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent that is deployed along with Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "cbtDriverStatus": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Installed",
              "Error",
              "Installing",
              "Uninstalling"
            ],
            "type": "string",
            "description": "CBT driver status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentCbtDriverStatus"
            }
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "82b693e8-2d33-40f3-8991-a26e8bd86158",
          "managementAgentUid": "99ea35b0-d23f-41ab-8bb3-2e06555f039b",
          "cbtDriverStatus": "NotInstalled"
        }
      },
      "BackupAgentSettings": {
        "required": [
          "disableScheduledBackups",
          "disableControlPanelNotification",
          "disableBackupOverMeteredConnection",
          "disableScheduleWakeup",
          "throttleBackupActivity",
          "restrictVpnConnections",
          "flrWithoutAdminPrivilegesAllowed"
        ],
        "type": "object",
        "properties": {
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "disableScheduledBackups": {
            "type": "boolean",
            "description": "Indicates whether a Veeam backup agent job schedule is disabled."
          },
          "disableControlPanelNotification": {
            "type": "boolean",
            "description": "Indicates whether Control Panel notifications."
          },
          "disableBackupOverMeteredConnection": {
            "type": "boolean",
            "description": "Indicates whether backup over metered connections is disabled.",
            "default": true
          },
          "disableScheduleWakeup": {
            "type": "boolean",
            "description": "Indicates whether a scheduled wake up timer is disabled."
          },
          "throttleBackupActivity": {
            "type": "boolean",
            "description": "Indicates whether Veeam backup agent throttles backup activities when system is busy.",
            "default": true
          },
          "restrictVpnConnections": {
            "type": "boolean",
            "description": "Indicates whether backup over VPN connections is disabled."
          },
          "limitBandwidthConsumption": {
            "type": "boolean",
            "description": "Indicates whether bandwidth consumption for backup jobs is limited.",
            "default": false
          },
          "bandwidthSpeedLimit": {
            "maximum": 9999,
            "minimum": 1,
            "type": "integer",
            "description": "Value of maximum speed for transferring backed-up data.",
            "format": "int32",
            "nullable": true
          },
          "bandwidthSpeedLimitUnit": {
            "enum": [
              "MbitPerSec",
              "KbytePerSec",
              "MbytePerSec"
            ],
            "type": "string",
            "description": "Measurement units of maximum speed for transferring backed-up data.",
            "nullable": true,
            "x-ms-enum": {
              "name": "SpeedUnit"
            }
          },
          "flrWithoutAdminPrivilegesAllowed": {
            "type": "boolean",
            "description": "Indicates whether file-level restore is available to users that do not have administrative privileges."
          }
        },
        "readOnly": true
      },
      "BackupAgentJob": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a Veeam backup agent job.",
            "nullable": true,
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of a Veeam backup agent job.",
            "nullable": true,
            "readOnly": true
          },
          "configUid": {
            "type": "string",
            "description": "UID assigned to a backup job configuration.",
            "format": "uuid",
            "readOnly": true
          },
          "systemType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Type of guest OS on a managed computer.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobSystemType"
            }
          },
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy assigned to a Veeam backup agent.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "backupPolicyFailureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup policy job fails.\n> Every line break is represented by the `\\r\\n` control characters.\n",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "None",
              "Success",
              "Warning",
              "Failed",
              "Starting",
              "Running",
              "Stopping"
            ],
            "type": "string",
            "description": "Status of the latest job session.\n> Can be changed to `Running` or `Stopping` using the PATCH endpoint.\n",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobStatus"
            }
          },
          "operationMode": {
            "enum": [
              "Unknown",
              "UnLicensed",
              "Server",
              "Workstation"
            ],
            "type": "string",
            "description": "Operation mode of a Veeam backup agent.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentOperationMode"
            }
          },
          "destination": {
            "type": "string",
            "description": "Location where backup files for a Veeam backup agent reside.",
            "nullable": true,
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "lastRun": {
            "type": "string",
            "description": "Date and time when the latest job session started.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastEndTime": {
            "type": "string",
            "description": "Date and time when the latest job session finished.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastDuration": {
            "type": "integer",
            "description": "Duration of the latest backup job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "nextRun": {
            "type": "string",
            "description": "Date and time of the next scheduled backup job session.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "avgDuration": {
            "type": "integer",
            "description": "Average duration of a backup job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "backupMode": {
            "enum": [
              "Unknown",
              "EntireComputer",
              "Volume",
              "File"
            ],
            "type": "string",
            "description": "Type of backup operation mode.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobBackupMode"
            }
          },
          "targetType": {
            "enum": [
              "Unknown",
              "LocalFolder",
              "SharedFolder",
              "BackupRepository",
              "CloudRepository"
            ],
            "type": "string",
            "description": "Type of a location where backup files for a Veeam backup agent reside.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobTargetTypeDetailed"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether a job schedule is enabled.\n> Can be changed using the PATCH endpoint.\n",
            "readOnly": true
          },
          "scheduleType": {
            "enum": [
              "Unknown",
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically",
              "Continuously"
            ],
            "type": "string",
            "description": "Type of schedule configured for the job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobScheduleType"
            }
          },
          "failureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup job fails.",
            "nullable": true,
            "readOnly": true
          },
          "backedUpSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "WindowsBackupAgentJob": {
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Agent for Microsoft Windows job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Agent for Microsoft Windows.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a Veeam Agent for Microsoft Windows job.",
            "nullable": true,
            "readOnly": true
          },
          "configUid": {
            "type": "string",
            "description": "UID assigned to a backup job configuration.",
            "format": "uuid",
            "readOnly": true
          },
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy assigned to a Veeam Agent for Microsoft Windows.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "backupPolicyFailureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup policy job fails.",
            "nullable": true,
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "None",
              "Success",
              "Warning",
              "Failed",
              "Starting",
              "Running",
              "Stopping"
            ],
            "type": "string",
            "description": "Status of the latest job session.\n> Can be changed to `Running` or `Stopping` using the PATCH endpoint.\n",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobStatus"
            }
          },
          "operationMode": {
            "enum": [
              "Unknown",
              "UnLicensed",
              "Server",
              "Workstation"
            ],
            "type": "string",
            "description": "Operation mode of a Veeam Agent for Microsoft Windows.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentOperationMode"
            }
          },
          "destination": {
            "type": "string",
            "description": "Location where backup files for a Veeam Agent for Microsoft Windows reside.",
            "nullable": true,
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "lastRun": {
            "type": "string",
            "description": "Date and time when the latest job session started.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastEndTime": {
            "type": "string",
            "description": "Date and time when the latest job session finished.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastDuration": {
            "type": "integer",
            "description": "Duration of the latest backup job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "nextRun": {
            "type": "string",
            "description": "Date and time of the next scheduled backup job session.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "avgDuration": {
            "type": "integer",
            "description": "Average duration of a backup job session, in seconds.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "backupMode": {
            "enum": [
              "Unknown",
              "EntireComputer",
              "Volume",
              "File"
            ],
            "type": "string",
            "description": "Type of backup operation mode.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobBackupMode"
            }
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a location where backup files for a Veeam Agent for Microsoft Windows reside.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobTargetType"
            }
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether a job schedule is enabled.\n> Can be changed using the PATCH endpoint.\n",
            "readOnly": true
          },
          "scheduleType": {
            "enum": [
              "Unknown",
              "NotScheduled",
              "Daily",
              "Monthly",
              "Periodically",
              "Continuously"
            ],
            "type": "string",
            "description": "Type of schedule configured for the job.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentJobScheduleType"
            }
          },
          "scheduleEvents": {
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "AtLock",
                "AtLogoff",
                "WhenBackupTargetIsConnected"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "BackupAgentJobScheduleEvent"
              }
            },
            "description": "Events that trigger the backup job launch.",
            "readOnly": true
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "Date and time when settings of the backup job were last modified.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "lastModifiedBy": {
            "type": "string",
            "description": "Name of the user who last modified job settings.",
            "nullable": true,
            "readOnly": true
          },
          "failureMessage": {
            "type": "string",
            "description": "Message that is displayed in case a backup job fails.",
            "nullable": true,
            "readOnly": true
          },
          "backedUpSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "freeSpace": {
            "type": "integer",
            "description": "Amount of free space available on the target repository.\n> If the job has never been run, the property value is `null`.\n",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "backupAgentUid": "CCEB5975-B409-49B5-8ECE-FFFECB13494F",
          "name": "VAW job 2 Cloud",
          "configUid": "AF097BD3-4AE9-4841-8152-8FF5CC703EAB",
          "status": "Success",
          "operationMode": "Server",
          "backupMode": "File",
          "destination": "\\\\share\\backup\\test",
          "restorePoints": 4,
          "lastRun": "2018-11-01T10:35:00.0000000+00:00",
          "lastEndTime": "2018-11-01T10:45:00.0000000+00:00",
          "lastDuration": 600,
          "nextRun": "2018-12-01T10:35:00.0000000+00:00",
          "avgDuration": 575,
          "targetType": "Local",
          "isEnabled": true,
          "schedulingType": "Periodically",
          "failureMessage": "",
          "lastModifiedDate": "2018-11-01T10:45:00.0000000+00:00",
          "lastModifiedBy": "someuser",
          "backedUpSize": 12550788
        }
      },
      "LinuxBackupAgent": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent that is deployed along with Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "82b693e8-2d33-40f3-8991-a26e8bd86158",
          "managementAgentUid": "99ea35b0-d23f-41ab-8bb3-2e06555f039b"
        }
      },
      "LinuxBackupAgentJob": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Agent for Linux job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a Veeam backup agent job.",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "MacBackupAgent": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Agent for Mac.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent that is deployed along with Veeam Agent for Mac.",
            "format": "uuid",
            "readOnly": true
          }
        },
        "readOnly": true,
        "example": {
          "instanceUid": "82b693e8-2d33-40f3-8991-a26e8bd86158",
          "managementAgentUid": "99ea35b0-d23f-41ab-8bb3-2e06555f039b"
        }
      },
      "MacBackupAgentJob": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Agent for Mac job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a Veeam backup agent job.",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "SmtpSettings": {
        "required": [
          "serverAddress",
          "timeout",
          "tlsMode"
        ],
        "type": "object",
        "properties": {
          "serverAddress": {
            "type": "string",
            "description": "SMTP server URI containing protocol, host and port."
          },
          "tlsMode": {
            "enum": [
              "auto",
              "none",
              "sslOnConnect",
              "startTls",
              "startTlsWhenAvailable"
            ],
            "type": "string",
            "description": "Type of secure socket comminucation used to connect to an SMTP server.",
            "x-name": "MailServerTlsMode"
          },
          "timeout": {
            "type": "string",
            "description": "Connection timeout.",
            "format": "time"
          },
          "passwordCredential": {
            "required": [
              "userName"
            ],
            "type": "object",
            "properties": {
              "userName": {
                "type": "string",
                "description": "User name.",
                "nullable": true
              },
              "password": {
                "type": "string",
                "description": "Password.",
                "format": "password",
                "nullable": true
              },
              "saslMechanism": {
                "type": "string",
                "description": "SASL mechanism that is used for authentication with the specified username and password.",
                "nullable": true
              }
            },
            "description": "Credentials required to access SMTP server.",
            "nullable": true
          },
          "exclusivelyAcceptedCertificateHash": {
            "type": "string",
            "description": "Server X509 certificate hex-encoded hash in the `<hash-algorithm>:<hash-hex>` format.",
            "nullable": true
          },
          "serverCertificate": {
            "required": [
              "friendlyName",
              "issuerName",
              "notAfter",
              "notBefore",
              "serialNumber",
              "subjectName",
              "hash",
              "signatureAlgorithm",
              "isValid"
            ],
            "type": "object",
            "properties": {
              "friendlyName": {
                "type": "string",
                "description": "Friendly name of a certificate."
              },
              "subjectName": {
                "type": "string",
                "description": "Name of a certificate subject."
              },
              "issuerName": {
                "type": "string",
                "description": "Name of a certificate issuer."
              },
              "notAfter": {
                "type": "string",
                "description": "Expiration date of a certificate.",
                "format": "date"
              },
              "notBefore": {
                "type": "string",
                "description": "Effective date of a certificate.",
                "format": "date"
              },
              "serialNumber": {
                "type": "string",
                "description": "Serial number of a certificate."
              },
              "signatureAlgorithm": {
                "type": "string",
                "description": "Signature algorithm of a certificate."
              },
              "hash": {
                "type": "string",
                "description": "Certificate hex-encoded hash in the `<hash-algorithm>:<hash-hex>` format."
              },
              "isValid": {
                "type": "boolean",
                "description": "Indicates whether a certificate is valid."
              }
            },
            "description": "Server X509 certificate information.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "TestEmailOptions": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address from which test notification message is sent."
          },
          "to": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address to which test notification message is sent."
          }
        }
      },
      "NotificationBillingSettings": {
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address from which notifications are sent.",
            "nullable": true
          },
          "subject": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Text that is displayed as a subject of notification.",
            "default": "[Veeam Service Provider Console] Notification"
          }
        }
      },
      "NotificationDiscoverySettings": {
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address from which notifications are sent.",
            "nullable": true
          },
          "to": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address at which notifications are sent.",
            "nullable": true
          },
          "subject": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Text that is displayed as a subject of notification.",
            "default": "[Veeam Service Provider Console] Notification",
            "nullable": true
          },
          "isDailyNotificationEnabled": {
            "type": "boolean",
            "description": "Indicates whether daily notifications are enabled.",
            "readOnly": true
          },
          "dailyTime": {
            "type": "string",
            "description": "Time at which daily notifications are sent.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "NotificationAlarmsSettings": {
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address from which notifications must be sent.",
            "nullable": true
          },
          "to": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address at which notifications must be sent.",
            "nullable": true
          },
          "dailySubject": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Subject of notification message.",
            "default": "[Veeam Service Provider Console] Notification",
            "nullable": true
          },
          "isDailyNotificationEnabled": {
            "type": "boolean",
            "description": "Indicates whether summary daily notifications is enabled.",
            "readOnly": true
          },
          "dailyTime": {
            "type": "string",
            "description": "Time of the day when summary daily notifications are sent.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "NotificationLicenseSettings": {
        "type": "object",
        "properties": {
          "from": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address from which notifications must be sent.",
            "nullable": true
          },
          "to": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Email address at which notifications must be sent.",
            "nullable": true
          },
          "enabled": {
            "type": "boolean",
            "description": "Indicates whether notifications are enabled.",
            "nullable": true
          }
        }
      },
      "PolicySettings": {
        "type": "object",
        "properties": {
          "mfaPolicyStatus": {
            "enum": [
              "Unknown",
              "Disabled",
              "Enabled",
              "EnabledByInheritance"
            ],
            "type": "string",
            "description": "Organization MFA policy status.",
            "default": "Disabled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "OrganizationMfaPolicyStatus"
            }
          },
          "enforceMfaPolicy": {
            "type": "boolean",
            "description": "Enforce MFA policy for child organizations.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "NotificationSettings": {
        "required": [
          "smtp",
          "billing",
          "discovery",
          "alarms",
          "license"
        ],
        "type": "object",
        "properties": {
          "smtp": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/SmtpSettings"
              }
            ],
            "description": "SMTP server settings."
          },
          "billing": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationBillingSettings"
              }
            ],
            "description": "Billing notification settings."
          },
          "discovery": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationDiscoverySettings"
              }
            ],
            "description": "Settings for notifications about discovery results."
          },
          "alarms": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationAlarmsSettings"
              }
            ],
            "description": "Alarm notification settings."
          },
          "license": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/NotificationLicenseSettings"
              }
            ],
            "description": "License notification settings."
          },
          "level": {
            "enum": [
              "Unknown",
              "disabled",
              "summary",
              "all"
            ],
            "type": "string",
            "description": "Level of notifications.",
            "default": "disabled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "NotificationSettingsLevel"
            }
          },
          "defaultFrom": {
            "maxLength": 1024,
            "minLength": 1,
            "type": "string",
            "description": "Default email address from which notification messages must be sent.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "BrandingSettings": {
        "required": [
          "webUri"
        ],
        "type": "object",
        "properties": {
          "webUri": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^(http|https):\\/\\/[\\w\\d-._~:/?#\\[\\]@!$&'()*+,;=]+$",
            "type": "string",
            "description": "Portal web address."
          },
          "portalColorTheme": {
            "enum": [
              "Unknown",
              "Blue",
              "Green",
              "Yellow",
              "Turquoise"
            ],
            "type": "string",
            "description": "Interface color scheme.",
            "default": "Blue",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BrandingColorTheme"
            }
          }
        },
        "readOnly": true
      },
      "LicenseSettings": {
        "required": [
          "isAutoUpdateEnabled"
        ],
        "type": "object",
        "properties": {
          "isAutoUpdateEnabled": {
            "type": "boolean",
            "description": "Indicates whether license auto update is enabled."
          }
        },
        "readOnly": true
      },
      "DiscoveryRule": {
        "required": [
          "masterAgentUid",
          "name"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a discovery rule"
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a master agent.",
            "format": "uuid"
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a location for which a discovery rule is configured.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company for which a discovery rule is configured.",
            "format": "uuid",
            "readOnly": true
          },
          "systemType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux"
            ],
            "type": "string",
            "description": "Type of guest OS.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "DiscoveryRuleSystemType"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Created",
              "Running",
              "Success",
              "Canceled",
              "Failed",
              "CancellationRequested",
              "CancellationRequestFailed"
            ],
            "type": "string",
            "description": "Current status of a discovery rule.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "DiscoveryRuleStatus"
            }
          },
          "lastRun": {
            "type": "string",
            "description": "Date and time of the latest discovery session.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          },
          "totalComputersCount": {
            "type": "integer",
            "description": "Number of discovered computers.",
            "format": "int32",
            "readOnly": true
          },
          "onlineComputersCount": {
            "type": "integer",
            "description": "Number of online computers.",
            "format": "int32",
            "readOnly": true
          },
          "offlineComputersCount": {
            "type": "integer",
            "description": "Number of offline computers.",
            "format": "int32",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "EmbeddedForDiscoveryRuleChildren": {
        "type": "object",
        "properties": {
          "discoveryRule": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRule"
              }
            ],
            "description": "Resource representation of a discovery rule.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Resource representation of the related discovery rule entity.",
        "nullable": true,
        "readOnly": true
      },
      "EmbeddedForWindowsDiscoveryRuleChildren": {
        "type": "object",
        "properties": {
          "discoveryRule": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRule"
              }
            ],
            "description": "Resource representation of a descovery rule.",
            "nullable": true,
            "readOnly": true
          },
          "windowsDiscoveryRule": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDiscoveryRule"
              }
            ],
            "description": "Resource representation of a Windows discovery rule.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Resource representation of the related Windows discovery rule entity.",
        "nullable": true,
        "readOnly": true
      },
      "EmbeddedForLinuxDiscoveryRuleChildren": {
        "type": "object",
        "properties": {
          "discoveryRule": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRule"
              }
            ],
            "description": "Resource representation of discovery rule.",
            "nullable": true,
            "readOnly": true
          },
          "linuxDiscoveryRule": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxDiscoveryRule"
              }
            ],
            "description": "Resource representation of a Linux discovery rule.",
            "nullable": true,
            "readOnly": true
          }
        },
        "description": "Resource representation of the related Linux discovery rule entity.",
        "nullable": true,
        "readOnly": true
      },
      "WindowsDiscoveryRule": {
        "required": [
          "masterAgentUid",
          "accessAccount"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "method": {
            "enum": [
              "Unknown",
              "NetworkBased",
              "AD",
              "Manual"
            ],
            "type": "string",
            "description": "Discovery method.",
            "default": "NetworkBased",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsDiscoveryRuleMethod"
            }
          },
          "useMasterManagementAgentCredentials": {
            "type": "boolean",
            "description": "Indicates whether Veeam Service Provider Console must use master agent credentials to connect discovered computers.",
            "default": true
          },
          "accessAccount": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleCredentials"
              }
            ],
            "description": "Credentials of an account with Local Administrator permissions on discovered computers."
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "LinuxDiscoveryRule": {
        "required": [
          "masterAgentUid",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "method": {
            "enum": [
              "Unknown",
              "NetworkBased",
              "Manual"
            ],
            "type": "string",
            "description": "Discovery method.",
            "default": "NetworkBased",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxDiscoveryRuleMethod"
            }
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxDiscoveryCredentials"
            },
            "description": "Credentials to connect discovered computers."
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "DiscoveryRuleFilter": {
        "type": "object",
        "properties": {
          "exclusionMask": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of applied exclusion masks. For custom discovery rules this property is ignored.",
            "nullable": true
          },
          "ignoreInaccessibleMachine": {
            "type": "boolean",
            "description": "Indicates whether discovery is performed among accessible computers only.",
            "default": false
          },
          "osTypes": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "WindowsServer",
                "WindowsWorkstation",
                "CentOS",
                "Debian",
                "OracleLinux",
                "Fedora",
                "Ubuntu",
                "OpenSUSE",
                "SLES",
                "RedHat"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "DiscoveryRuleFilterOperationSystemType"
              }
            },
            "description": "Type of operating system.",
            "nullable": true
          },
          "applications": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "OtherApp",
                "MicrosoftExchangeServer",
                "MicrosoftSqlServer",
                "MicrosoftActiveDirectory",
                "MicrosoftSharePoint",
                "Oracle",
                "MySQL",
                "PostgreSQL",
                "MongoDB",
                "ApacheServer"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "DiscoveryRuleFilterApplication"
              }
            },
            "description": "Applications that must run on discovered computers.",
            "nullable": true
          },
          "customApplication": {
            "type": "string",
            "description": "Name of an application required for the `OtherApp` application type.\n> Available only for Linux computers.\n",
            "nullable": true
          },
          "platforms": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "enum": [
                "Unknown",
                "Other",
                "MicrosoftHyperVandVmWareVSpere",
                "Physical",
                "MicrosoftAzure",
                "AmazonWebServices"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "DiscoveryRuleFilterPlatform"
              }
            },
            "description": "Platforms on which discovered computers must run.",
            "nullable": true
          }
        }
      },
      "DiscoveryRuleNetwork": {
        "required": [
          "networkName",
          "firstIp",
          "lastIp"
        ],
        "type": "object",
        "properties": {
          "networkName": {
            "type": "string",
            "description": "Name of a network configured in Veeam Service Provider Console."
          },
          "firstIp": {
            "pattern": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$",
            "type": "string",
            "description": "First IP-address in the range set for discovery."
          },
          "lastIp": {
            "pattern": "^(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)$",
            "type": "string",
            "description": "Last IP-address in the range set for discovery."
          },
          "trustOptions": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/MachinesNetworkTrustOptions"
              }
            ],
            "description": "Trust options for Linux computers in the selected range of IP addresses.",
            "nullable": true
          }
        },
        "example": {
          "networkName": "Production",
          "firstIp": "172.17.53.1",
          "lastIp": "172.17.53.50"
        }
      },
      "MachinesNetworkTrustOptions": {
        "required": [
          "trustOption"
        ],
        "type": "object",
        "properties": {
          "trustOption": {
            "enum": [
              "Unknown",
              "All",
              "KnownList"
            ],
            "type": "string",
            "description": "Type of trusted computer selection.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "NetworkTrustOption"
            }
          },
          "knownHostList": {
            "type": "string",
            "description": "List of trusted computers required for the `KnownList` type of selection.",
            "nullable": true
          }
        }
      },
      "WindowsNetworkBasedDiscoveryRule": {
        "required": [
          "networks"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a network-based discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "networks": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryRuleNetwork"
            },
            "description": "Network settings."
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForWindowsDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "LinuxNetworkBasedDiscoveryRule": {
        "required": [
          "networks"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a network-based discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryRuleNetwork"
            },
            "description": "Network settings."
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForLinuxDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "WindowsNetworkBasedDiscoveryRuleInput": {
        "required": [
          "name",
          "masterAgentUid",
          "networks",
          "accessAccount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Name of a network-based discovery rule."
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a master agent.",
            "format": "uuid"
          },
          "networks": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryRuleNetwork"
            },
            "description": "Range of IP addresses."
          },
          "useMasterManagementAgentCredentials": {
            "type": "boolean",
            "description": "Use credentials specified in the master management agent configuration",
            "default": true
          },
          "accessAccount": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleCredentials"
              }
            ],
            "description": "Credentials of an account with Local Administrator permissions on discovered computers."
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "LinuxNetworkBasedDiscoveryRuleInput": {
        "required": [
          "name",
          "masterAgentUid",
          "networks",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Name of a network-based discovery rule."
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a master agent.",
            "format": "uuid"
          },
          "networks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DiscoveryRuleNetwork"
            },
            "description": "Range of IP addresses."
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxDiscoveryCredentialsInput"
            },
            "description": "Credentials to connect discovered computers."
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsCustomDiscoveryRule": {
        "required": [
          "hosts"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a custom discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "hosts": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IP addresses or DNS names of computers on which Veeam backup agent is deployed."
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForWindowsDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "LinuxCustomDiscoveryRule": {
        "required": [
          "hosts"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a custom discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "hosts": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IP addresses or DNS names of computers on which Veeam backup agent is deployed."
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForLinuxDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "WindowsCustomDiscoveryRuleInput": {
        "required": [
          "name",
          "masterAgentUid",
          "hosts",
          "accessAccount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Name of a discovery rule."
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent.",
            "format": "uuid"
          },
          "hosts": {
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IP addresses or DNS names of computers on which Veeam backup agent is deployed."
          },
          "useMasterManagementAgentCredentials": {
            "type": "boolean",
            "description": "Use credentials specified in the master management agent configuration",
            "default": true
          },
          "accessAccount": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleCredentials"
              }
            ],
            "description": "Credentials of an account with Local Administrator permissions on discovered computers."
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "LinuxCustomDiscoveryRuleInput": {
        "required": [
          "name",
          "masterAgentUid",
          "hosts",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Name of a discovery rule."
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent.",
            "format": "uuid"
          },
          "hosts": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of IP addresses or DNS names of computers on which Veeam Agent for Linux is deployed."
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxDiscoveryCredentialsInput"
            },
            "description": "Credentials to connect discovered computers."
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LinuxDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "WindowsActiveDirectoryBasedDiscoveryRule": {
        "required": [
          "adMethod"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to an Active Directory discovery rule.",
            "format": "uuid",
            "readOnly": true
          },
          "customQuery": {
            "type": "string",
            "description": "LDAP query that returns a list of computers to scan.",
            "nullable": true
          },
          "adMethod": {
            "enum": [
              "Unknown",
              "Search",
              "Query",
              "Custom"
            ],
            "type": "string",
            "description": "Active Directory discovery method.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsDiscoveryRuleAdMethod"
            }
          },
          "skipOfflineComputersDays": {
            "type": "integer",
            "description": "Number of days for which offline computers are skipped from discovery.",
            "format": "int32",
            "nullable": true
          },
          "_embedded": {
            "$ref": "#/components/schemas/EmbeddedForWindowsDiscoveryRuleChildren"
          }
        },
        "readOnly": true
      },
      "WindowsActiveDirectoryBasedDiscoveryRuleInput": {
        "required": [
          "name",
          "masterAgentUid",
          "adMethod",
          "accessAccount"
        ],
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Name of an Active Directory discovery rule."
          },
          "masterAgentUid": {
            "type": "string",
            "description": "UID assigned to a master agent.",
            "format": "uuid"
          },
          "skipOfflineComputersDays": {
            "type": "integer",
            "description": "Number of days for which offline computers are skipped from discovery.",
            "format": "int32",
            "nullable": true
          },
          "customQuery": {
            "type": "string",
            "description": "LDAP query that returns a list of computers to scan.",
            "nullable": true
          },
          "adMethod": {
            "enum": [
              "Unknown",
              "Search",
              "Query",
              "Custom"
            ],
            "type": "string",
            "description": "Active Directory discovery method.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WindowsDiscoveryRuleAdMethod"
            }
          },
          "useMasterManagementAgentCredentials": {
            "type": "boolean",
            "description": "Use credentials specified in the master management agent configuration",
            "default": true
          },
          "accessAccount": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleCredentials"
              }
            ],
            "description": "Credentials of an account with Local Administrator permissions on discovered computers."
          },
          "filter": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleFilter"
              }
            ],
            "description": "Discovery filter.",
            "nullable": true
          },
          "notificationSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleNotificationSettings"
              }
            ],
            "description": "Settings configured for email notifications about discovery results.",
            "nullable": true
          },
          "deploymentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/WindowsDiscoveryRuleDeploymentSettings"
              }
            ],
            "description": "Settings configured for Veeam backup agent deployment.",
            "nullable": true
          },
          "scheduleSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DiscoveryRuleScheduleSettings"
              }
            ],
            "description": "Discovery scheduling settings.",
            "nullable": true,
            "x-veeam-create-by-default": true
          }
        }
      },
      "DiscoveryRuleNotificationSettings": {
        "required": [
          "scheduleType"
        ],
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether notifications about discovery results are enabled.",
            "default": true
          },
          "scheduleType": {
            "enum": [
              "Days",
              "Weeks"
            ],
            "type": "string",
            "description": "Notification frequency.",
            "nullable": true,
            "x-ms-enum": {
              "name": "SchedulePeriod"
            }
          },
          "scheduleTime": {
            "type": "string",
            "description": "Time at which notifications must are sent.",
            "format": "time-of-day",
            "default": "10:00"
          },
          "scheduleDay": {
            "enum": [
              "Sunday",
              "Monday",
              "Tuesday",
              "Wednesday",
              "Thursday",
              "Friday",
              "Saturday"
            ],
            "type": "string",
            "description": "Day at which notifications must are sent.",
            "nullable": true,
            "x-ms-enum": {
              "name": "DayOfWeek"
            }
          },
          "to": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Email address at which notifications must be sent.",
            "nullable": true
          },
          "subject": {
            "maxLength": 128,
            "minLength": 1,
            "pattern": "^[^\\<\\>\\=\\%\\~]+$",
            "type": "string",
            "description": "Subject of a notification message.",
            "nullable": true
          },
          "notifyOnTheFirstRun": {
            "type": "boolean",
            "description": "Indicates whether a notification must be sent on the first ",
            "default": false
          }
        },
        "example": {
          "isEnabled": true,
          "scheduleType": "Days",
          "scheduleTime": "12:30",
          "scheduleDay": "Sunday",
          "to": "administrator@vac.com",
          "subject": "VSPC Discovery Results",
          "notifyOnTheFirstRun": false
        }
      },
      "WindowsDiscoveryRuleDeploymentSettings": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether Veeam backup agent is automatically installed on computers as part of discovery.",
            "default": false
          },
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a discovery rule that must be assigned after Veeam Agent for Microsoft Windows installation.",
            "format": "uuid",
            "nullable": true
          },
          "setReadOnlyAccess": {
            "type": "boolean",
            "description": "Indicates whether the read-only access mode is enabled for Veeam Agent for Microsoft Windows.",
            "default": true
          },
          "backupAgentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupAgentSettings"
              }
            ],
            "description": "Veeam backup agent settings.",
            "nullable": true
          }
        }
      },
      "LinuxDiscoveryRuleDeploymentSettings": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether Veeam backup agent is automatically installed on computers as part of discovery.",
            "default": false
          },
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a discovery rule that must be assigned after installation.",
            "format": "uuid",
            "nullable": true
          },
          "setReadOnlyAccess": {
            "type": "boolean",
            "description": "Indicates whether the read-only access mode is enabled for Veeam Agent for Linux.",
            "default": true
          }
        }
      },
      "DiscoveredComputer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a discovered computer.",
            "format": "uuid",
            "readOnly": true
          },
          "ruleUid": {
            "type": "string",
            "description": "UID assigned to a rule used to discover a computer.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent installed on a discovered computer.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "discoveredTime": {
            "type": "string",
            "description": "Date and time when a computer was discovered.",
            "format": "date-time",
            "readOnly": true
          },
          "backupAgentInstallationStatus": {
            "enum": [
              "Unknown",
              "Installed",
              "NotInstalled"
            ],
            "type": "string",
            "description": "Status of Veeam backup agent installation on a discovered computer.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "InstallationStatus"
            }
          },
          "status": {
            "enum": [
              "Unknown",
              "Online",
              "Offline",
              "Error"
            ],
            "type": "string",
            "description": "Computer connection status.\n> If management agent is not installed on the computer, the connection status does not change after discovery.'\n",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ComputerStatus"
            }
          },
          "backupAgentVersion": {
            "type": "string",
            "description": "Veeam backup agent version.",
            "readOnly": true
          },
          "backupAgentManagementStatus": {
            "enum": [
              "Unknown",
              "UnManaged",
              "ManagedByVBR",
              "ManagedByConsole"
            ],
            "type": "string",
            "description": "Veeam backup agent management status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentManagedMode"
            }
          },
          "info": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ComputerInfo"
              }
            ],
            "description": "Information about a discovered computer.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "AutoDeploymentSettings": {
        "type": "object",
        "properties": {
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization that manages Veeam backup agent auto deployment.",
            "format": "uuid",
            "readOnly": true
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Indicates whether auto deployment is enabled.",
            "default": false
          },
          "windowsBackupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy that must be assigned to a Veeam Agent for Microsoft Windows.",
            "format": "uuid",
            "nullable": true
          },
          "linuxBackupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy that must be assigned to a Veeam Agent for Linux.",
            "format": "uuid",
            "nullable": true
          },
          "macBackupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy that must be assigned to a Veeam Agent for Mac.",
            "format": "uuid",
            "nullable": true
          },
          "isRetryEnabled": {
            "type": "boolean",
            "description": "Indicates whether retry is enabled in case deployment session fails.",
            "default": false
          },
          "retryCount": {
            "type": "integer",
            "description": "Number of allowed retries.",
            "format": "int32",
            "default": 3
          },
          "retryInterval": {
            "type": "integer",
            "description": "Time interval in minutes after which the next deployment attempt starts.",
            "format": "int32",
            "default": 7
          },
          "acceptNewConnections": {
            "type": "boolean",
            "description": "Indicates whether Veeam Service Provider Console accepts connections from new management agents.",
            "default": true
          },
          "installDriver": {
            "type": "boolean",
            "description": "Indicates whether CBT driver is installed during auto deployment.",
            "default": false
          },
          "setReadOnlyAccess": {
            "type": "boolean",
            "description": "Indicates whether the read-only access mode is enabled for Veeam backup agent.",
            "default": true
          },
          "backupAgentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupAgentSettings"
              }
            ],
            "description": "Veeam backup agent settings.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "About": {
        "type": "object",
        "properties": {
          "installationId": {
            "type": "string",
            "description": "UID assigned to a Veeam Service Provider Console unique installation type.",
            "format": "uuid",
            "readOnly": true
          },
          "installationDate": {
            "type": "string",
            "description": "Date of Veeam Service Provider Console installation.",
            "format": "date-time",
            "readOnly": true
          },
          "actualVawVersion": {
            "type": "string",
            "description": "Current version of Veeam Agent for Windows.",
            "nullable": true,
            "readOnly": true
          },
          "actualValVersion": {
            "type": "string",
            "description": "Current version of Veeam Agent for Linux.",
            "nullable": true,
            "readOnly": true
          },
          "actualVamVersion": {
            "type": "string",
            "description": "Current version of Veeam Agent for Mac.",
            "nullable": true,
            "readOnly": true
          },
          "serverVersion": {
            "type": "string",
            "description": "Veeam Service Provider Console Server version.",
            "readOnly": true
          },
          "managementAgentVersion": {
            "type": "string",
            "description": "Management agent version.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "BackupAgentAssignedBackupPolicy": {
        "type": "object",
        "properties": {
          "configUid": {
            "type": "string",
            "description": "UID assigned to a backup policy configuration.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "backupPolicyUid": {
            "type": "string",
            "description": "UID assigned to a backup policy.",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Applying",
              "Applied",
              "Warning",
              "Failed",
              "Removing"
            ],
            "type": "string",
            "description": "Status of the policy assignment.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupAgentAssignedBackupPolicyStatus"
            }
          },
          "isCustom": {
            "type": "boolean",
            "description": "Indicates whether a backup policy is custom.",
            "readOnly": true
          },
          "isOutOfDate": {
            "type": "boolean",
            "description": "Indicates whether a newer revision of a backup policy exists that has not been assigned to an agent.",
            "readOnly": true
          },
          "backupPolicyFailureMessage": {
            "type": "string",
            "description": "Message that is displayed in case backup policy assignment fails.",
            "readOnly": true
          },
          "backupPolicyRevision": {
            "type": "integer",
            "description": "Revision of a backup policy.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          },
          "assignedDate": {
            "type": "string",
            "description": "Date of the policy assignment.\n> If the backup policy is assigned to a Linux or Mac computer, the value of this property is `null`.\n",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "assignedBy": {
            "type": "string",
            "description": "Organization or user who assigned a backup policy.\n> If the backup policy is assigned to a Linux or Mac computer, the value of this property is `null`.\n",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "UserLogin": {
        "required": [
          "id",
          "userUid",
          "identifierInProvider",
          "identityProviderName",
          "description",
          "usage",
          "isReadAccessOnly",
          "status"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "System ID assigned to a user identity.",
            "format": "int64",
            "readOnly": true
          },
          "userUid": {
            "type": "string",
            "description": "UID assigned to a user.",
            "format": "uuid",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "description": "Username.",
            "readOnly": true
          },
          "companyId": {
            "type": "string",
            "description": "UID assigned to a user company.",
            "format": "uuid",
            "readOnly": true
          },
          "companyName": {
            "type": "string",
            "description": "Name of a user company.",
            "readOnly": true
          },
          "identityProviderName": {
            "type": "string",
            "description": "Name of an identity provider that manages user identity.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of a user identity."
          },
          "isReadAccessOnly": {
            "type": "boolean",
            "description": "Indicates whether a user identity has the read-only access.",
            "readOnly": true
          },
          "scopes": {
            "type": "array",
            "items": {
              "enum": [
                "unknown",
                "integration",
                "rest",
                "ui"
              ],
              "type": "string",
              "x-extensible-enum": true,
              "x-ms-enum": {
                "name": "UserLoginScope"
              }
            },
            "description": "Services that are available to the user identity.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "enabled",
              "disabled",
              "disabledDueToUser",
              "disabledDueToCompany",
              "disabledDueToSystem",
              "disabledDueSystemComponentsRestrictions"
            ],
            "type": "string",
            "description": "User identity status.\n> You can change status to `enabled` or `disabled` using the PATCH method.\n",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserLoginStatus"
            }
          },
          "parameters": {
            "type": "string",
            "description": "Parameters of a user identity.",
            "readOnly": true
          },
          "identifierInProvider": {
            "type": "string",
            "description": "Provided identity.",
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Date and time of identity creation.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "readOnly": true,
        "x-veeam-expandable": true
      },
      "RsaKeyPair": {
        "required": [
          "privateKey",
          "publicKey"
        ],
        "type": "object",
        "properties": {
          "privateKey": {
            "type": "string",
            "description": "Private key.",
            "readOnly": true
          },
          "publicKey": {
            "type": "string",
            "description": "Public key.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "TotpSecret": {
        "required": [
          "secret",
          "secretUrl"
        ],
        "type": "object",
        "properties": {
          "secret": {
            "type": "string",
            "description": "TOTP secret encoded in the Base 32 format.",
            "readOnly": true
          },
          "secretUrl": {
            "type": "string",
            "description": "URL encoded secret for authentication applications.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "AsymmetricAlgorithmChallenge": {
        "required": [
          "challenge",
          "expirationTime"
        ],
        "type": "object",
        "properties": {
          "challenge": {
            "type": "string",
            "description": "Decryption challenge.",
            "format": "binary",
            "readOnly": true
          },
          "expirationTime": {
            "type": "string",
            "description": "Date and time when a challenge will expire.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "readOnly": true,
        "deprecated": true
      },
      "OAuth2Result": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "description": "Access token.",
            "nullable": true,
            "readOnly": true
          },
          "token_type": {
            "type": "string",
            "description": "Token type.",
            "nullable": true,
            "readOnly": true
          },
          "refresh_token": {
            "type": "string",
            "description": "Refresh token.",
            "nullable": true,
            "readOnly": true
          },
          "mfa_token": {
            "type": "string",
            "description": "MFA token.",
            "nullable": true,
            "readOnly": true
          },
          "encrypted_code": {
            "type": "string",
            "description": "Encrypted authorization code.",
            "nullable": true,
            "readOnly": true
          },
          "expires_in": {
            "type": "integer",
            "description": "Date and time when an access token will expire.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "OAuth2Error": {
        "type": "object",
        "properties": {
          "error": {
            "enum": [
              "invalid_request",
              "invalid_client",
              "invalid_grant",
              "unauthorized_client",
              "unsupported_grant_type",
              "invalid_scope"
            ],
            "type": "string",
            "description": "Error type.",
            "readOnly": true,
            "x-name": "OAuth2ErrorCode"
          },
          "error_description": {
            "type": "string",
            "description": "Error description.",
            "readOnly": true
          },
          "error_uri": {
            "type": "string",
            "description": "Error URI.",
            "nullable": true,
            "readOnly": true
          }
        },
        "example": {
          "error": "invalid_request",
          "error_description": "Cannot complete login due to incorrect username or password, or no sufficient rights.",
          "error_uri": null
        }
      },
      "AuthenticationResult": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string",
            "description": "Access token.",
            "nullable": true,
            "readOnly": true
          },
          "refreshToken": {
            "type": "string",
            "description": "Refresh token.",
            "nullable": true,
            "readOnly": true
          },
          "mfaToken": {
            "type": "string",
            "description": "Multi-factor authentication token.",
            "nullable": true,
            "readOnly": true
          },
          "expirationTime": {
            "type": "string",
            "description": "Date and time when access token will expire.",
            "format": "date-time",
            "readOnly": true
          }
        },
        "readOnly": true,
        "deprecated": true
      },
      "User": {
        "required": [
          "role",
          "profile"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a user.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to a user organization.",
            "format": "uuid",
            "readOnly": true
          },
          "userName": {
            "type": "string",
            "description": "Username.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Enabled",
              "Disabled"
            ],
            "type": "string",
            "description": "User status.",
            "default": "Enabled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserStatus"
            }
          },
          "mfaPolicyStatus": {
            "enum": [
              "Unknown",
              "Disabled",
              "Enabled",
              "EnabledByInheritance"
            ],
            "type": "string",
            "description": "User MFA policy status.",
            "default": "Disabled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserMfaPolicyStatus"
            }
          },
          "mfaPolicyConfigurationStatus": {
            "enum": [
              "Unknown",
              "NotConfigured",
              "Configured"
            ],
            "type": "string",
            "description": "Status of user MFA policy configuration.",
            "default": "NotConfigured",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserMfaPolicyConfigurationStatus"
            }
          },
          "role": {
            "enum": [
              "Unknown",
              "PortalAdministrator",
              "PortalOperator",
              "PortalReadonlyOperator",
              "SiteAdministrator",
              "CompanyLocationAdministrator",
              "CompanyLocationUser",
              "CompanyOwner",
              "CompanyAdministrator",
              "CompanyInvoiceAuditor",
              "CompanySubtenant",
              "ResellerOwner",
              "ResellerOperator",
              "ResellerUser",
              "ResellerInvoiceAuditor",
              "ResellerAdministrator"
            ],
            "type": "string",
            "description": "User role.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserRole"
            }
          },
          "profile": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfile"
              }
            ],
            "description": "User profile."
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/CredentialsInfo"
              }
            ],
            "description": "User credentials.",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "firstName": {
            "maxLength": 2048,
            "type": "string",
            "description": "User first name.",
            "nullable": true
          },
          "lastName": {
            "maxLength": 2048,
            "type": "string",
            "description": "User last name.",
            "nullable": true
          },
          "title": {
            "enum": [
              "Unknown",
              "Mr",
              "Miss",
              "Mrs",
              "Ms"
            ],
            "type": "string",
            "description": "User title.",
            "default": "Unknown",
            "x-ms-enum": {
              "name": "UserTitle"
            }
          },
          "email": {
            "maxLength": 2048,
            "minLength": 1,
            "pattern": "^(\")?(?:[^\\.\"])(?:(?:[\\.])?(?:[\\w\\-!#$%&'*+\\/=?\\^_`{|}~]))*\\1@(\\w[\\-\\w]*\\.){1,5}([A-Za-z]){2,6}$",
            "type": "string",
            "description": "User email address.",
            "nullable": true
          },
          "address": {
            "maxLength": 2048,
            "type": "string",
            "description": "Address of a user or user organization.",
            "nullable": true
          },
          "phone": {
            "maxLength": 512,
            "type": "string",
            "description": "Telephone number of a user or user organization.",
            "nullable": true
          }
        },
        "example": {
          "firstName": "Mark",
          "lastName": "Brown",
          "title": "Mr",
          "status": "Enabled",
          "email": "mark.brown@delta.com",
          "address": "90 West Broad St Columbus OH 43215",
          "phone": "(524) 745-5371"
        }
      },
      "UserInput": {
        "required": [
          "organizationUid",
          "role",
          "profile",
          "credentials"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a user.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "role": {
            "enum": [
              "Unknown",
              "PortalAdministrator",
              "PortalOperator",
              "PortalReadonlyOperator",
              "SiteAdministrator",
              "CompanyLocationAdministrator",
              "CompanyLocationUser",
              "CompanyOwner",
              "CompanyAdministrator",
              "CompanyInvoiceAuditor",
              "CompanySubtenant",
              "ResellerOwner",
              "ResellerOperator",
              "ResellerUser",
              "ResellerInvoiceAuditor",
              "ResellerAdministrator"
            ],
            "type": "string",
            "description": "User role in Veeam Service Provider Console.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserRole"
            }
          },
          "mfaPolicyStatus": {
            "enum": [
              "Unknown",
              "Disabled",
              "Enabled"
            ],
            "type": "string",
            "description": "User MFA policy status.",
            "default": "Disabled",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "UserMfaPolicyStatus"
            }
          },
          "profile": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserProfile"
              }
            ],
            "description": "User profile."
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/Credentials"
              }
            ],
            "description": "User credentials.",
            "nullable": true
          },
          "backupResource": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserBackupResourceInput"
              }
            ],
            "description": "Backup resource configured for a subtenant account.",
            "nullable": true
          }
        }
      },
      "UserBackupResource": {
        "required": [
          "companySiteBackupResourceUid",
          "resourceFriendlyName"
        ],
        "type": "object",
        "properties": {
          "userUid": {
            "type": "string",
            "description": "UID assigned to a subtenant user in Veeam Service Provider Console.",
            "format": "uuid",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Subtenant user description.",
            "nullable": true
          },
          "subtenantUid": {
            "type": "string",
            "description": "UID assigned to a subtenant user in Veeam Cloud Connect.",
            "format": "uuid",
            "readOnly": true
          },
          "vcdUserId": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization user account.",
            "nullable": true,
            "readOnly": true
          },
          "companySiteBackupResourceUid": {
            "type": "string",
            "description": "UID assigned to a company backup resource.",
            "format": "uuid"
          },
          "resourceFriendlyName": {
            "type": "string",
            "description": "Friendly name of a subtenant backup resource."
          },
          "storageQuota": {
            "minimum": 1073741824,
            "type": "integer",
            "description": "Subtenant quota, in bytes.",
            "format": "int64",
            "nullable": true
          },
          "storageQuotaUsage": {
            "type": "integer",
            "description": "Amount of storage space used by a subtenant, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "isStorageQuotaUnlimited": {
            "type": "boolean",
            "description": "Indicates whether a subtenant has unlimited quota.",
            "default": true
          }
        },
        "readOnly": true
      },
      "UserBackupResourceInput": {
        "required": [
          "companySiteBackupResourceUid",
          "resourceFriendlyName"
        ],
        "type": "object",
        "properties": {
          "companySiteBackupResourceUid": {
            "type": "string",
            "description": "UID assigned to a company site backup resource.",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "description": "Subtenant user description.",
            "nullable": true
          },
          "vcdUserId": {
            "type": "string",
            "description": "UID assigned to a VMware Cloud Director organization user account.",
            "nullable": true
          },
          "resourceFriendlyName": {
            "type": "string",
            "description": "Friendly name of a subtenant backup resource."
          },
          "storageQuota": {
            "minimum": 1073741824,
            "type": "integer",
            "description": "Subtenant quota, in bytes.",
            "format": "int64",
            "nullable": true
          },
          "isStorageQuotaUnlimited": {
            "type": "boolean",
            "description": "Defines whether a subtenant has unlimited quota.",
            "default": true
          }
        }
      },
      "SingleLicenseReport": {
        "type": "object",
        "properties": {
          "reportStatus": {
            "enum": [
              "Unknown",
              "ApprovalRequired",
              "Finalization",
              "Approved"
            ],
            "type": "string",
            "description": "License usage report status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ReportStatus"
            }
          },
          "reportParemeters": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LicenseReportParameters"
              }
            ],
            "description": "Report parameters",
            "readOnly": true
          },
          "reportSummary": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LicenseReportSummary"
              }
            ],
            "description": "Report summary information.",
            "readOnly": true
          },
          "organizationsUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationLicenseUsage"
            },
            "description": "Number of license points used by managed organizations.",
            "readOnly": true
          },
          "notCollectedCloudServers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Veeam Cloud Connect servers from which Veeam Service Provider Console could not collect the license usage data.",
            "readOnly": true
          },
          "usageDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUsageOfLicensesWithSameSupportId"
            },
            "description": "Usage of licenses with the same support ID.",
            "readOnly": true
          },
          "appendices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LicenseReportAppendix"
            },
            "description": "Usage of licenses issued to organizations other than report owner.",
            "readOnly": true
          }
        }
      },
      "LicenseReportAppendix": {
        "type": "object",
        "properties": {
          "licenseCompanyName": {
            "type": "string",
            "description": "Licensee company name.",
            "readOnly": true
          },
          "appendixSummary": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LicenseReportSummary"
              }
            ],
            "description": "Appendix summary information.",
            "readOnly": true
          },
          "organizationsUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationLicenseUsage"
            },
            "description": "Number of license points used by managed organizations.",
            "readOnly": true
          },
          "notCollectedCloudServers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of Veeam Cloud Connect servers from which Veeam Service Provider Console could not collect the license usage data.",
            "readOnly": true
          },
          "clonedCloudServers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of cloned Veeam Cloud Connect servers.",
            "readOnly": true
          },
          "usageDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationUsageOfLicensesWithSameSupportId"
            },
            "description": "Detailed information about license usage.",
            "readOnly": true
          }
        }
      },
      "OrganizationUsageOfLicensesWithSameSupportId": {
        "type": "object",
        "properties": {
          "organizationName": {
            "type": "string",
            "description": "Organization name.",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.\n> For resellers the property value is `null`.\n",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "supportId": {
            "type": "string",
            "description": "License support ID.",
            "nullable": true,
            "readOnly": true
          },
          "notCollectedClientServers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of client servers from which Veeam Service Provider Console could not collect the license usage data.",
            "readOnly": true
          },
          "clonedClientServers": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of cloned client servers.",
            "readOnly": true
          },
          "usageByLicenseAndProduct": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductLicenseUsage"
            },
            "description": "License usage for each license and product.",
            "readOnly": true
          }
        }
      },
      "ProductLicenseUsage": {
        "type": "object",
        "properties": {
          "licenseId": {
            "type": "string",
            "description": "License ID.",
            "nullable": true,
            "readOnly": true
          },
          "productType": {
            "enum": [
              "Unknown",
              "EnterpriseManager",
              "BackupAndReplication",
              "CloudConnect",
              "VSPC",
              "VONE",
              "VBM365"
            ],
            "type": "string",
            "description": "Product type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ProductType"
            }
          },
          "licenseEdition": {
            "type": "string",
            "description": "License edition.",
            "nullable": true,
            "readOnly": true
          },
          "usedPoints": {
            "type": "number",
            "description": "Number of license points used by an organization.",
            "format": "double",
            "readOnly": true
          },
          "workloadUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkloadLicenseUsage"
            },
            "description": "License usage for each workload type.",
            "readOnly": true
          }
        }
      },
      "OrganizationLicenseUsage": {
        "type": "object",
        "properties": {
          "organizationType": {
            "enum": [
              "Unknown",
              "Company",
              "Reseller"
            ],
            "type": "string",
            "description": "Organization type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "OrganizationLicenseUsageType"
            }
          },
          "organizationName": {
            "type": "string",
            "description": "Organization name.",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.\n> For resellers the property value is `null`.\n",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "usedPoints": {
            "type": "number",
            "description": "Number of license points used by an organization.",
            "format": "double",
            "readOnly": true
          }
        }
      },
      "LicenseReportSummary": {
        "required": [
          "totalPoints",
          "productsUsage"
        ],
        "type": "object",
        "properties": {
          "totalPoints": {
            "type": "number",
            "description": "Number of report owner license points used by managed organizations.",
            "format": "double"
          },
          "productsUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TotalProductLicenseUsage"
            },
            "description": "License usage for each product."
          }
        }
      },
      "TotalProductLicenseUsage": {
        "type": "object",
        "properties": {
          "productType": {
            "enum": [
              "Unknown",
              "EnterpriseManager",
              "BackupAndReplication",
              "CloudConnect",
              "VSPC",
              "VONE",
              "VBM365"
            ],
            "type": "string",
            "description": "Product type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ProductType"
            }
          },
          "totalPoints": {
            "type": "number",
            "description": "Number of used license points.",
            "format": "double",
            "readOnly": true
          },
          "licenseEdition": {
            "type": "string",
            "description": "License edition.",
            "readOnly": true
          },
          "workloadUsage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkloadLicenseUsage"
            },
            "description": "License usage for each workload type.",
            "readOnly": true
          }
        }
      },
      "WorkloadLicenseUsage": {
        "type": "object",
        "properties": {
          "workloadType": {
            "enum": [
              "Unknown",
              "VBR_VM",
              "VBR_Cloud_VM",
              "VAC_Workstation_Agent",
              "VAC_Server_Agent",
              "VBR_Workstation_Agent",
              "VBR_Server_Agent",
              "VBR_Application_Plugins",
              "VBR_NAS_Backup",
              "CC_VM_Backup",
              "CC_Workstation_Backup",
              "CC_Server_Backup",
              "CC_VM_Replica",
              "VONE_VM",
              "VONE_Cloud_VM",
              "VONE_Workstation_Agent",
              "VONE_Server_Agent",
              "VONE_Nas_Backup",
              "VBM365_User"
            ],
            "type": "string",
            "description": "Workload type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "WorkloadType"
            }
          },
          "initialCount": {
            "type": "integer",
            "description": "Number of managed agents.",
            "format": "int32",
            "readOnly": true
          },
          "reportedCount": {
            "type": "integer",
            "description": "Number of managed agents after report finalization.",
            "format": "int32",
            "readOnly": true
          },
          "newCount": {
            "type": "integer",
            "description": "Number of managed agents that were activated within the current calendar month.",
            "format": "int32",
            "readOnly": true
          },
          "weight": {
            "type": "number",
            "description": "Number of points a single workload uses.",
            "format": "double",
            "readOnly": true
          },
          "usedPoints": {
            "type": "number",
            "description": "Number of points used by all managed agents of the same type.",
            "format": "double",
            "readOnly": true
          }
        }
      },
      "LicenseReportParameters": {
        "required": [
          "reportId",
          "organizationName",
          "organizationUid",
          "licenseCompanyName",
          "generationDate",
          "reportInterval"
        ],
        "type": "object",
        "properties": {
          "reportId": {
            "type": "integer",
            "description": "Report ID.",
            "format": "int32"
          },
          "organizationName": {
            "type": "string",
            "description": "Name of a report owner organization."
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to a report owner organization.",
            "format": "uuid"
          },
          "licenseCompanyName": {
            "type": "string",
            "description": "Name of a licensee organization."
          },
          "generationDate": {
            "type": "string",
            "description": "Date of report generation.",
            "format": "date"
          },
          "reportInterval": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/LicenseReportInterval"
              }
            ],
            "description": "Reporting interval."
          }
        }
      },
      "LicenseReportInterval": {
        "required": [
          "startOfInterval",
          "endOfInterval"
        ],
        "type": "object",
        "properties": {
          "startOfInterval": {
            "type": "string",
            "description": "Start date of reporting interval.",
            "format": "date"
          },
          "endOfInterval": {
            "type": "string",
            "description": "End date of reporting interval.",
            "format": "date"
          }
        }
      },
      "SingleLicenseReportSettings": {
        "required": [
          "autoApprove",
          "sendReports"
        ],
        "type": "object",
        "properties": {
          "autoApprove": {
            "type": "boolean",
            "description": "Indicates whether reports are approved automatically."
          }
        },
        "readOnly": true
      },
      "LicenseReportFinalizationStatus": {
        "required": [
          "reportApprovalStatus",
          "message"
        ],
        "type": "object",
        "properties": {
          "reportApprovalStatus": {
            "enum": [
              "Unknown",
              "NotApproved",
              "Approved",
              "Finalized",
              "Finalization",
              "NotApprovable"
            ],
            "type": "string",
            "description": "Report finalization status.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LicenseUsageReportApprovalStatus"
            }
          },
          "message": {
            "type": "string",
            "description": "Message."
          }
        },
        "readOnly": true
      },
      "CloudLicenseCounter": {
        "required": [
          "type",
          "unitType",
          "rentalUnits",
          "newUnits",
          "usedUnits",
          "rentalCount",
          "newCount",
          "usedCount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "CC_Server_Backup",
              "CC_Workstation_Backup",
              "CC_VM_Backup",
              "CC_VM_Replica"
            ],
            "type": "string",
            "description": "License type.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "rentalUnits": {
            "type": "number",
            "description": "Number of units with rental licenses installed.",
            "format": "double"
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double"
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double"
          },
          "rentalCount": {
            "type": "integer",
            "description": "Number of objects with rental licenses installed.",
            "format": "int32"
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32"
          }
        }
      },
      "CompanyCloudLicenseUsage": {
        "required": [
          "companyUid",
          "tenantUid",
          "counters"
        ],
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid"
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.",
            "format": "uuid",
            "nullable": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "SiteCloudLicenseUsage": {
        "required": [
          "installationId",
          "siteUid",
          "counters",
          "licenseId"
        ],
        "type": "object",
        "properties": {
          "installationId": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication installation.",
            "format": "uuid"
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a site.",
            "format": "uuid"
          },
          "licenseId": {
            "type": "string",
            "description": "ID assigned to a license."
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CloudLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "CompanyBackupServerLicenseUsage": {
        "required": [
          "companyUid",
          "tenantUid",
          "counters"
        ],
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid"
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.",
            "format": "uuid",
            "nullable": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "BackupServerLicenseUsage": {
        "required": [
          "backupServerUid",
          "installationId",
          "counters"
        ],
        "type": "object",
        "properties": {
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid"
          },
          "installationId": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication installation.",
            "format": "uuid"
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BackupServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "BackupServerLicenseCounter": {
        "required": [
          "type",
          "unitType",
          "newUnits",
          "usedUnits",
          "newCount",
          "usedCount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "VBR_vSphere_VM",
              "VBR_HyperV_VM",
              "VBR_AHV_VM",
              "VBR_NAS_Backup",
              "VBR_Cloud_VM",
              "VBR_Application_Plugins",
              "VBR_Server_Agent",
              "VBR_Workstation_Agent",
              "VBR_RHV_VM"
            ],
            "type": "string",
            "description": "License type.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "BackupServerLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double"
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double"
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32"
          }
        }
      },
      "VOneServerLicense": {
        "required": [
          "autoUpdateEnabled"
        ],
        "type": "object",
        "properties": {
          "vOneServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE server.",
            "format": "uuid",
            "readOnly": true
          },
          "autoUpdateEnabled": {
            "type": "boolean",
            "description": "Indicates whether license updates automatically."
          },
          "company": {
            "type": "string",
            "description": "Name of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "License expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Support expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "licenseId": {
            "type": "string",
            "description": "License ID.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "supportId": {
            "type": "string",
            "description": "License ID required to contact Veeam Support.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Valid",
              "Warning",
              "Error",
              "Expired",
              "Unlicensed"
            ],
            "type": "string",
            "description": "Current status of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseStatus"
            }
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message.",
            "readOnly": true
          },
          "sockets": {
            "type": "number",
            "description": "Number of licensed sockets.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "usedSockets": {
            "type": "number",
            "description": "Number of used sockets.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "units": {
            "type": "number",
            "description": "Number of available license units.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of used license units.",
            "format": "double",
            "nullable": true,
            "readOnly": true
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "Type of license units.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "type": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Community",
              "Rental",
              "Subscription",
              "Evaluation",
              "NFR",
              "Perpetual"
            ],
            "type": "string",
            "description": "Type of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseType"
            }
          }
        },
        "readOnly": true
      },
      "CompanyVOneServerLicenseUsage": {
        "required": [
          "companyUid",
          "tenantUid",
          "counters"
        ],
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid"
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.",
            "format": "uuid",
            "nullable": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VOneServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "VOneServerLicenseUsage": {
        "required": [
          "vOneServerUid",
          "installationId",
          "counters"
        ],
        "type": "object",
        "properties": {
          "vOneServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE server.",
            "format": "uuid"
          },
          "installationId": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE installation.",
            "format": "uuid"
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VOneServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "VOneServerLicenseCounter": {
        "required": [
          "type",
          "unitType",
          "newUnits",
          "usedUnits",
          "newCount",
          "usedCount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "FileShare",
              "VM",
              "CloudVM",
              "ServerAgent",
              "WorkstationAgent"
            ],
            "type": "string",
            "description": "License type.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VOneServerLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double"
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double"
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32"
          }
        }
      },
      "Vbm365ServerLicense": {
        "required": [
          "autoUpdateEnabled"
        ],
        "type": "object",
        "properties": {
          "vbm365ServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 server.",
            "format": "uuid",
            "readOnly": true
          },
          "autoUpdateEnabled": {
            "type": "boolean",
            "description": "Indicates whether license updates automatically."
          },
          "company": {
            "type": "string",
            "description": "Name of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "email": {
            "type": "string",
            "description": "Email address of an organization to which a licensed server belongs.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "License expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "supportExpirationDate": {
            "type": "string",
            "description": "Support expiration date and time.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "licenseId": {
            "type": "string",
            "description": "License ID.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "supportId": {
            "type": "string",
            "description": "License ID required to contact Veeam Support.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Valid",
              "Warning",
              "Error",
              "Expired",
              "Unlicensed"
            ],
            "type": "string",
            "description": "Current status of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseStatus"
            }
          },
          "licensedUsers": {
            "type": "integer",
            "description": "Number of licensed users.",
            "format": "int32",
            "readOnly": true
          },
          "protectedUsers": {
            "type": "integer",
            "description": "Number of protected users.",
            "format": "int32",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "NotInstalled",
              "Community",
              "Rental",
              "Subscription",
              "Evaluation",
              "NFR",
              "Perpetual"
            ],
            "type": "string",
            "description": "Type of the license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseType"
            }
          }
        },
        "readOnly": true
      },
      "CompanyVbm365ServerLicenseUsage": {
        "required": [
          "companyUid",
          "tenantUid",
          "counters"
        ],
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid"
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.",
            "format": "uuid",
            "nullable": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vbm365ServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "Vbm365ServerLicenseUsage": {
        "required": [
          "vbm365ServerUid",
          "installationId",
          "counters"
        ],
        "type": "object",
        "properties": {
          "vbm365ServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 server.",
            "format": "uuid"
          },
          "installationId": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 installation.",
            "format": "uuid"
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Vbm365ServerLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "Vbm365ServerLicenseCounter": {
        "required": [
          "type",
          "unitType",
          "newUnits",
          "usedUnits",
          "newCount",
          "usedCount"
        ],
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "User"
            ],
            "type": "string",
            "description": "License type.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "Vbm365ServerLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double"
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double"
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32"
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32"
          }
        }
      },
      "ConsoleLicenseSummaryCounter": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "VAC_Server_Agent",
              "VAC_Workstation_Agent"
            ],
            "type": "string",
            "description": "License type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double",
            "readOnly": true
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double",
            "readOnly": true
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32",
            "readOnly": true
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "ConsoleLicenseCounter": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "Unknown",
              "VAC_Server_Agent",
              "VAC_Workstation_Agent"
            ],
            "type": "string",
            "description": "License type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ConsoleLicenseCounterType"
            }
          },
          "unitType": {
            "enum": [
              "Unknown",
              "Instances",
              "Points"
            ],
            "type": "string",
            "description": "License unit type",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VeeamLicenseUnitsType"
            }
          },
          "usedUnits": {
            "type": "number",
            "description": "Number of units that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "double",
            "readOnly": true
          },
          "usedCount": {
            "type": "integer",
            "description": "Number of objects that have licenses assigned and are fully managed by Veeam Service Provider Console.",
            "format": "int32",
            "readOnly": true
          },
          "newUnits": {
            "type": "number",
            "description": "Number of units that were activated within the current calendar month.",
            "format": "double",
            "readOnly": true
          },
          "newCount": {
            "type": "integer",
            "description": "Number of objects that were activated within the current calendar month.",
            "format": "int32",
            "readOnly": true
          }
        }
      },
      "CompanyConsoleLicenseUsage": {
        "required": [
          "companyUid",
          "tenantUid",
          "counters"
        ],
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid"
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant.",
            "format": "uuid",
            "nullable": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsoleLicenseCounter"
            },
            "description": "License usage counters."
          }
        },
        "readOnly": true
      },
      "ResponseError": {
        "required": [
          "type",
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message.\n> Every line break is represented by the `\\r\\n` control characters.\n"
          },
          "type": {
            "enum": [
              "unspecified",
              "transport",
              "logical",
              "retryableLogical",
              "security"
            ],
            "type": "string",
            "description": "Error type.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ErrorType"
            }
          },
          "code": {
            "type": "integer",
            "description": "Error code.",
            "format": "int32"
          }
        },
        "readOnly": true,
        "x-veeam-expandable": true
      },
      "ResponseMetadata": {
        "type": "object",
        "properties": {
          "pagingInfo": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/PagingInformation"
              }
            ],
            "description": "Paging information.",
            "nullable": true
          }
        },
        "nullable": true,
        "readOnly": true
      },
      "PagingInformation": {
        "required": [
          "total",
          "count",
          "offset"
        ],
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Number of total resources.",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Number of resources on the current page.",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "description": "Number of resources that are skipped.",
            "format": "int32"
          }
        },
        "description": "Pagination data."
      },
      "EmptyResponse": {
        "required": [
          "errors"
        ],
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseError"
            },
            "readOnly": true
          },
          "data": {
            "type": "object",
            "readOnly": true
          },
          "meta": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/ResponseMetadata"
              }
            ],
            "readOnly": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseError"
            },
            "readOnly": true
          }
        },
        "example": {
          "errors": [
            {
              "message": "The property at path 'mfaPolicyConfigurationStatus' could not be updated.",
              "type": "logical",
              "code": 1001,
              "failedJsonPatch": {
                "value": "NotConfigured",
                "path": "mfaPolicyConfigurationStatus",
                "op": "replace"
              }
            }
          ]
        }
      },
      "DeploymentConfiguration": {
        "type": "object",
        "properties": {
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy that must be assigned to Veeam backup agent.",
            "format": "uuid",
            "nullable": true
          },
          "allowAutoRebootIfNeeded": {
            "type": "boolean",
            "description": "Indicates whether system reboot is allowed.",
            "default": false
          },
          "setReadOnlyAccess": {
            "type": "boolean",
            "description": "Indicates whether the read-only access mode is enabled for Veeam backup agents.",
            "default": true
          },
          "installCbtDriver": {
            "type": "boolean",
            "description": "Indicates whether CBT driver is installed during agent deployment.",
            "default": false
          },
          "credentials": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/DomainCredentials"
              }
            ],
            "description": "Credentials for accessing discovered computers.",
            "nullable": true
          },
          "backupAgentSettings": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupAgentSettings"
              }
            ],
            "description": "Veeam backup agent global settings.",
            "nullable": true
          }
        }
      },
      "LinuxDeploymentConfiguration": {
        "type": "object",
        "properties": {
          "backupPolicyUid": {
            "type": "string",
            "description": "UID of a backup policy that is assigned to Veeam Agent for Linux.",
            "format": "uuid",
            "nullable": true
          },
          "setReadOnlyAccess": {
            "type": "boolean",
            "description": "Indicates whether the read-only access mode is enabled for Veeam Agent for Linux.",
            "default": true
          },
          "credentials": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinuxDiscoveryCredentials"
            },
            "description": "Credentials to connect discovered computers.",
            "nullable": true
          }
        }
      },
      "LinuxDiscoveryCredentials": {
        "required": [
          "username",
          "type"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a set of credentials",
            "format": "uuid",
            "readOnly": true
          },
          "username": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          },
          "priority": {
            "minimum": 0,
            "type": "integer",
            "description": "Priority level of credentials.",
            "format": "int32",
            "default": 0
          },
          "description": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Credentials description.",
            "nullable": true
          },
          "sshPort": {
            "type": "integer",
            "description": "SSH port that must be used to connect to a Linux server.",
            "format": "int32",
            "default": 22
          },
          "elevateAccountPrivileges": {
            "type": "boolean",
            "description": "Indicates whether a non-root account must be provided with root account privileges.",
            "default": false
          },
          "addAccountToSudoersFile": {
            "type": "boolean",
            "description": "Indicates whether an account must be added to sudoers file.",
            "default": false
          },
          "useSuIfsudoFails": {
            "type": "boolean",
            "description": "Indicates whether the `su` command can be used instead of the `sudo` command.",
            "default": false
          },
          "rootPassword": {
            "maxLength": 4096,
            "type": "string",
            "description": "Password for a root account.",
            "format": "password",
            "nullable": true
          },
          "sshPrivateKey": {
            "type": "string",
            "description": "SSH private key.",
            "format": "password",
            "nullable": true
          },
          "passphrase": {
            "type": "string",
            "description": "Passphrase for the private key.",
            "format": "password",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "LinuxBased",
              "LinuxCertificate"
            ],
            "type": "string",
            "description": "Type of Linux credentials.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxDiscoveryCredentialsType"
            }
          }
        }
      },
      "LinuxDiscoveryCredentialsInput": {
        "required": [
          "username",
          "type"
        ],
        "type": "object",
        "properties": {
          "username": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          },
          "priority": {
            "minimum": 0,
            "type": "integer",
            "description": "Priority level of credentials.",
            "format": "int32",
            "default": 0
          },
          "description": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Credentials description.",
            "nullable": true
          },
          "sshPort": {
            "type": "integer",
            "description": "SSH port that must be used to connect to a Linux server.",
            "format": "int32",
            "default": 22
          },
          "elevateAccountPrivileges": {
            "type": "boolean",
            "description": "Indicates whether a non-root account must be provided with root account privileges.",
            "default": false
          },
          "addAccountToSudoersFile": {
            "type": "boolean",
            "description": "Indicates whether an account must be added to sudoers file.",
            "default": false
          },
          "useSuIfsudoFails": {
            "type": "boolean",
            "description": "Indicates whether the `su` command can be used instead of the `sudo` command.",
            "default": false
          },
          "rootPassword": {
            "maxLength": 4096,
            "type": "string",
            "description": "Password for a root account.",
            "format": "password",
            "nullable": true
          },
          "sshPrivateKey": {
            "type": "string",
            "description": "SSH private key.",
            "format": "password",
            "nullable": true
          },
          "passphrase": {
            "type": "string",
            "description": "Passphrase for the private key.",
            "format": "password",
            "nullable": true
          },
          "type": {
            "enum": [
              "Unknown",
              "LinuxBased",
              "LinuxCertificate"
            ],
            "type": "string",
            "description": "Type of Linux credentials.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "LinuxDiscoveryCredentialsType"
            }
          }
        }
      },
      "DeploymentInformation": {
        "type": "object",
        "properties": {
          "deployTaskUid": {
            "type": "string",
            "description": "UID assigned to a deployment task.",
            "format": "uuid",
            "readOnly": true
          },
          "deployTaskId": {
            "type": "integer",
            "description": "ID assigned to a deployment task.",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "DeploymentLog": {
        "type": "object",
        "properties": {
          "completePercentage": {
            "type": "integer",
            "description": "Percentage of deployment progress.",
            "format": "int32",
            "readOnly": true
          },
          "status": {
            "enum": [
              "success",
              "failed",
              "warning"
            ],
            "type": "string",
            "description": "Deployment status.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "DeployStatus"
            }
          },
          "logEntries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DeploymentLogEntry"
            },
            "description": "Log entry containing details about deployment process.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "DeploymentLogEntry": {
        "type": "object",
        "properties": {
          "taskUid": {
            "type": "string",
            "description": "UID assigned to a deployment task.",
            "format": "uuid",
            "readOnly": true
          },
          "event": {
            "type": "integer",
            "description": "Event represented by the log entry.",
            "format": "int32",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a deployed management agent.",
            "format": "uuid",
            "readOnly": true
          },
          "biosUuid": {
            "type": "string",
            "description": "UUID in Win32_ComputerSystem WMI class.",
            "format": "uuid",
            "readOnly": true
          },
          "hostName": {
            "type": "string",
            "description": "Hostname of a target computer.",
            "readOnly": true
          },
          "taskName": {
            "type": "string",
            "description": "Name of a deployment task.",
            "readOnly": true
          },
          "message": {
            "type": "string",
            "description": "Message.",
            "nullable": true,
            "readOnly": true
          },
          "time": {
            "type": "string",
            "description": "Time and date of an event.",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "DomainCredentials": {
        "required": [
          "userName",
          "password"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Domain credentials username."
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Domain credentials password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "DiscoveryRuleCredentials": {
        "required": [
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "minLength": 0,
            "type": "string",
            "description": "Credentials.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "CredentialsInfo": {
        "type": "object",
        "properties": {
          "userName": {
            "type": "string",
            "description": "Username.",
            "readOnly": true
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "Credentials": {
        "required": [
          "userName",
          "password"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[^\\/\\\\\\[\\]:;|=,+\\*\\?<>@\"!#$%^&(){}]+(?<!\\.)$",
            "type": "string",
            "description": "Username.",
            "readOnly": true
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "OwnerCredentials": {
        "required": [
          "userName"
        ],
        "type": "object",
        "properties": {
          "userName": {
            "maxLength": 256,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9!#$%&()\\-.^_{}~'` ]+(?<!\\.)$",
            "type": "string",
            "description": "Username."
          },
          "password": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Password.",
            "format": "password",
            "nullable": true
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "System ID assigned to a country.",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Country name.",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "Two-letter code of a country.",
            "readOnly": true
          }
        }
      },
      "UsaState": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "System ID assigned to a USA state.",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "USA state name.",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "Postal code of a USA state.",
            "readOnly": true
          }
        }
      },
      "Currency": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "System ID assigned to a currency.",
            "format": "int32",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Currency name.",
            "readOnly": true
          },
          "code": {
            "type": "string",
            "description": "Three-letter code according to ISO 4217.",
            "readOnly": true
          }
        }
      },
      "BackupServerHost": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Host name of a server.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "ESX",
              "ESXi",
              "VirtualCenter",
              "LinuxHost",
              "LocalHost",
              "WindowsHost",
              "Share",
              "HyperVServer",
              "HyperVCluster",
              "Scvmm",
              "BackupServer",
              "SmbServer",
              "SmbCluster",
              "VcdSystem",
              "ExternalInfrastructureServer",
              "NasFiler"
            ],
            "type": "string",
            "description": "Type of a server.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "BackupServerHostType"
            },
            "x-extensible-enum": true
          }
        },
        "readOnly": true
      },
      "BackupServerAgentProtectionGroup": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Host name of a server.",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          }
        }
      },
      "ProtectedVirtualMachine": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a protected virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a backup server.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Virtual machine hostname.",
            "readOnly": true
          },
          "hierarchyReference": {
            "type": "string",
            "description": "Virtual machine reference that includes hypervisor identifier.",
            "readOnly": true
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "IP addresses.",
            "readOnly": true
          },
          "provisionedSourceSize": {
            "type": "integer",
            "description": "Total size of protected virtual machine disks, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "usedSourceSize": {
            "type": "integer",
            "description": "Used space on protected virtual machine disks, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "totalRestorePointSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "latestRestorePointSize": {
            "type": "integer",
            "description": "Size of the latest restore point, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job that created the latest restore point.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedVirtualMachineBackup": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup chain.",
            "format": "uuid",
            "readOnly": true
          },
          "virtualMachineUid": {
            "type": "string",
            "description": "UID assigned to a virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupType": {
            "enum": [
              "Unknown",
              "Backup",
              "Replication",
              "BackupCopy",
              "BackupToTape"
            ],
            "type": "string",
            "description": "Backup job type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ProtectedVirtualMachineBackupType"
            }
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a repository on which the restore point resides.",
            "format": "uuid",
            "readOnly": true
          },
          "totalRestorePointSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "latestRestorePointSize": {
            "type": "integer",
            "description": "Size of the latest restore point, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a target repository.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "RestorePointTargetType"
            },
            "x-extensible-enum": true
          }
        }
      },
      "ProtectedVirtualMachineBackupRestorePoint": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "backupUid": {
            "type": "string",
            "description": "UID assigned to a backup chain.",
            "format": "uuid",
            "readOnly": true
          },
          "virtualMachineUid": {
            "type": "string",
            "description": "UID assigned to a protected virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "filePath": {
            "type": "string",
            "description": "Path to a backup file location.",
            "readOnly": true
          },
          "gfsType": {
            "type": "array",
            "items": {
              "enum": [
                "Weekly,",
                "Monthly,",
                "Quarterly,",
                "Yearly"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "RestorePointGfsType"
              },
              "x-extensible-enum": true
            },
            "description": "Array of enabled GFS retention types.",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a repository on which the restore point resides.",
            "format": "uuid",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "description": "Size of a restore point, in bytes. Includes all virtual machines protected by the same backup job.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "provisionedSourceSize": {
            "type": "integer",
            "description": "Total size of protected virtual machine disks, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "usedSourceSize": {
            "type": "integer",
            "description": "Used space on protected virtual machine disks, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "incrementRawDataSize": {
            "type": "integer",
            "description": "Size of backup increment, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "cpuCores": {
            "type": "integer",
            "description": "Number of vCPU cores of a cloud virtual machine.",
            "format": "int32",
            "readOnly": true
          },
          "memory": {
            "type": "integer",
            "description": "Protected virtual machine memory, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "backupCreationTime": {
            "type": "string",
            "description": "Time and date when backup was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "fileCreationTime": {
            "type": "string",
            "description": "Time and date when a restore point was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "isConsistent": {
            "type": "boolean",
            "description": "Indicates whether a retore point has successfully passed a health check.",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedVirtualMachineReplicaRestorePoint": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "virtualMachineUid": {
            "type": "string",
            "description": "UID assigned to a virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "backupUid": {
            "type": "string",
            "description": "UID assigned to a replication chain.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a replication job.",
            "format": "uuid",
            "readOnly": true
          },
          "hardwarePlanUid": {
            "type": "string",
            "description": "UID assigned to a hardware plan.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Time and date when a restore point was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedCloudVirtualMachine": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a protected cloud virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a backup server.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Virtual machine hostname.",
            "readOnly": true
          },
          "resourceId": {
            "type": "string",
            "description": "Resource ID of a cloud virtual machine.",
            "readOnly": true
          },
          "destinations": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Array of locations where backup files for a cloud virtual machine reside.",
            "readOnly": true
          },
          "latestBackupDate": {
            "type": "string",
            "description": "Time and date of the latest backup restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedCloudVirtualMachineBackup": {
        "type": "object",
        "properties": {
          "cloudVirtualMachineUid": {
            "type": "string",
            "description": "UID assigned to a virtual machine.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job.",
            "format": "uuid",
            "readOnly": true
          },
          "backupType": {
            "enum": [
              "Unknown",
              "Backup",
              "Snapshot",
              "RemoteSnapshot",
              "BackupCopy",
              "BackupToTape"
            ],
            "type": "string",
            "description": "Backup job type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ProtectedCloudVirtualMachineBackupType"
            }
          },
          "destination": {
            "type": "string",
            "description": "Location where backup chain resides.",
            "readOnly": true
          },
          "totalRestorePointSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "latestRestorePointSize": {
            "type": "integer",
            "description": "Size of the latest restore point, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedComputerManagedByConsole": {
        "type": "object",
        "properties": {
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a backup agent installed on a computer.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Hostname of a protected computer.",
            "readOnly": true
          },
          "numberOfJobs": {
            "type": "integer",
            "description": "Number of jobs.",
            "format": "int32",
            "readOnly": true
          },
          "operationMode": {
            "enum": [
              "Unknown",
              "Server",
              "Workstation"
            ],
            "type": "string",
            "description": "Operation mode.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "ProtectedComputerOperationMode"
            }
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ProtectedComputerManagedByConsoleJob": {
        "type": "object",
        "properties": {
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a job that protects the computer.",
            "format": "uuid",
            "readOnly": true
          },
          "jobName": {
            "type": "string",
            "description": "Name of a job that protects the computer.",
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of protected data, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "totalRestorePointSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "latestRestorePointSize": {
            "type": "integer",
            "description": "Size of the latest restore point, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a target repository.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "RestorePointTargetType"
            },
            "x-extensible-enum": true
          }
        }
      },
      "ProtectedComputerManagedByConsoleRestorePoint": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job that created the restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "backedupItems": {
            "type": "string",
            "description": "Protected objects.",
            "readOnly": true
          },
          "destination": {
            "type": "string",
            "description": "Path to the protected object locations.",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the restore point, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "incrementRawDataSize": {
            "type": "integer",
            "description": "Size of backup increment, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of the protected data, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "creationDate": {
            "type": "string",
            "description": "Date of the restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedComputerManagedByBackupServer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a protected computer.",
            "format": "uuid",
            "readOnly": true
          },
          "sourceInstanceUid": {
            "type": "string",
            "description": "Protected computer UID assigned in Veeam Backup & Replication.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a backup server.",
            "format": "uuid",
            "readOnly": true
          },
          "protectionGroups": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Protection group UIDs.",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Hostname of a protected computer.",
            "readOnly": true
          },
          "ipAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Computer IP addresses.",
            "readOnly": true
          },
          "guestOs": {
            "type": "string",
            "description": "Operating system installed on a protected computer.",
            "readOnly": true
          },
          "platformType": {
            "enum": [
              "Unknown",
              "Windows",
              "Linux",
              "Mac"
            ],
            "type": "string",
            "description": "Platform type of a protected computer.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "ProtectedComputerPlatformType"
            },
            "x-extensible-enum": true
          },
          "operationMode": {
            "enum": [
              "Unknown",
              "Server",
              "Workstation"
            ],
            "type": "string",
            "description": "Operation mode.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "ProtectedComputerOperationMode"
            },
            "x-extensible-enum": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedComputerManagedByBackupServerBackup": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a backup chain.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job that created the restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "jobName": {
            "type": "string",
            "description": "Name of a job that protects the computer.",
            "readOnly": true
          },
          "jobKind": {
            "enum": [
              "Unknown",
              "Backup",
              "Copy"
            ],
            "type": "string",
            "description": "Job type.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "ComputerProtectingJobKind"
            },
            "x-extensible-enum": true
          },
          "provisionedSourceSize": {
            "type": "integer",
            "description": "Total size of protected computer disks, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "usedSourceSize": {
            "type": "integer",
            "description": "Used space on protected computer disks, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a target repository.",
            "format": "uuid",
            "readOnly": true
          },
          "totalRestorePointSize": {
            "type": "integer",
            "description": "Total size of all restore points, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "latestRestorePointSize": {
            "type": "integer",
            "description": "Size of the latest restore point, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a target repository.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "RestorePointTargetType"
            },
            "x-extensible-enum": true
          }
        }
      },
      "ProtectedComputerManagedByBackupServerRestorePoint": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "backupAgentUid": {
            "type": "string",
            "description": "UID assigned to a Veeam backup agent.",
            "format": "uuid",
            "readOnly": true
          },
          "backupUid": {
            "type": "string",
            "description": "UID assigned to a backup chain.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job that created the restore point.",
            "format": "uuid",
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a target repository",
            "format": "uuid",
            "readOnly": true
          },
          "size": {
            "type": "integer",
            "description": "Size of the restore point, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "provisionedSourceSize": {
            "type": "integer",
            "description": "Total size of protected computer disks, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "usedSourceSize": {
            "type": "integer",
            "description": "Used space on protected computer disks, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "incrementRawDataSize": {
            "type": "integer",
            "description": "Size of the backup increment, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of protected data, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "cpuCores": {
            "type": "integer",
            "description": "Number of protected computer CPU cores.",
            "format": "int32",
            "readOnly": true
          },
          "memory": {
            "type": "integer",
            "description": "Protected computer memory, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "targetType": {
            "enum": [
              "Unknown",
              "Local",
              "Cloud"
            ],
            "type": "string",
            "description": "Type of a target repository.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "RestorePointTargetType"
            },
            "x-extensible-enum": true
          },
          "backupCreationTime": {
            "type": "string",
            "description": "Time and date when backup was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "fileCreationTime": {
            "type": "string",
            "description": "Time and date when a restore point was created.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        }
      },
      "ProtectedFileServer": {
        "type": "object",
        "properties": {
          "fileServerUid": {
            "type": "string",
            "description": "UID assigned to a file share.",
            "format": "uuid",
            "readOnly": true
          },
          "backupServerUid": {
            "type": "string",
            "description": "UID assigned to a backup server.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "jobUid": {
            "type": "string",
            "description": "UID assigned to a backup job that protects a file share.",
            "format": "uuid",
            "readOnly": true
          },
          "repositoryUid": {
            "type": "string",
            "description": "UID assigned to a backup repository.",
            "format": "uuid",
            "readOnly": true
          },
          "archiveRepositoryUid": {
            "type": "string",
            "description": "UID assigned to an archive repository.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a file share.",
            "readOnly": true
          },
          "archiveSize": {
            "type": "integer",
            "description": "Size of archived file copies, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "shortTermBackupSize": {
            "type": "integer",
            "description": "Size of recent file copies, in bytes.",
            "format": "int64",
            "readOnly": true
          },
          "archiveRestorePoints": {
            "type": "integer",
            "description": "Number of restore points for long-term retention.",
            "format": "int32",
            "readOnly": true
          },
          "restorePoints": {
            "type": "integer",
            "description": "Number of restore points.",
            "format": "int32",
            "readOnly": true
          },
          "latestRestorePointDate": {
            "type": "string",
            "description": "Time and date of the latest restore point creation.",
            "format": "date-time",
            "readOnly": true
          },
          "sourceSize": {
            "type": "integer",
            "description": "Size of the protected data, in bytes.",
            "format": "int64",
            "nullable": true,
            "readOnly": true
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProtectedFileServerSource"
            },
            "description": "File share backup scope.",
            "readOnly": true
          }
        }
      },
      "ProtectedFileServerSource": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "Path to a location of protected data.",
            "readOnly": true
          },
          "inclusionMasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names and name masks of files that must be included into a backup scope.",
            "readOnly": true
          },
          "exclusionMasks": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Names and name masks of files that must be excluded from a backup scope.",
            "readOnly": true
          }
        }
      },
      "LocationAggregatedUsage": {
        "type": "object",
        "properties": {
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company.",
            "format": "uuid",
            "readOnly": true
          },
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a location.",
            "format": "uuid",
            "readOnly": true
          },
          "date": {
            "type": "string",
            "description": "Date of data aggregation.",
            "format": "date",
            "readOnly": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregatedUsage"
            },
            "description": "Managed services counters.",
            "readOnly": true
          }
        }
      },
      "ResellerAggregatedUsage": {
        "type": "object",
        "properties": {
          "resellerUid": {
            "type": "string",
            "description": "UID assigned to a reseller.",
            "format": "uuid",
            "readOnly": true
          },
          "date": {
            "type": "string",
            "description": "Date of data aggregation.",
            "format": "date",
            "readOnly": true
          },
          "counters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AggregatedUsage"
            },
            "description": "Managed services counters.",
            "readOnly": true
          }
        }
      },
      "AggregatedUsage": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "description": "Counter value.",
            "format": "int64",
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "VmCloudBackups",
              "VbrCloudBackupsDataTransferOut",
              "VbrCloudBackupsDataTransferIn",
              "ServerCloudBackups",
              "WorkstationCloudBackups",
              "AgentCloudBackupDataTransferOut",
              "AgentCloudBackupDataTransferIn",
              "CloudRepositoryUsageByServerAgent",
              "CloudRepositoryUsageByWorkstationAgent",
              "CloudRepositoryUsageByVm",
              "CloudRepositoryUsageByUnknownFiles",
              "BackedupVms",
              "ReplicatedVms",
              "ManagedVms",
              "ManagedCloudVms",
              "ManagedServerAgents",
              "ManagedWorkstationAgents",
              "ManagedAgentsWindowsDesktopOS",
              "ManagedAgentsWindowsServerOS",
              "ManagedAgentsLinuxOS",
              "ManagedAgentsMacOS",
              "ManagedUsers",
              "VmCloudReplicas",
              "VbrCloudReplicaDataTransferOut",
              "VbrCloudReplicaDataTransferIn",
              "VmCloudReplicaStorageUsage",
              "VmCloudReplicaComputeTime",
              "FileShareBackupSize",
              "FileShareArchiveSize",
              "FileShareSourceSize",
              "CloudInsiderProtectionBackupSize",
              "CloudCapacityTierBackupSize",
              "CloudArchiveTierBackupSize",
              "CloudPerfomanceTierBackupSize"
            ],
            "type": "string",
            "description": "Counter type.",
            "readOnly": true,
            "x-ms-enum": {
              "name": "AggregatedUsageType"
            },
            "x-extensible-enum": true
          }
        }
      },
      "EnterpriseManager": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup Enterprise Manager server.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Hostname of a Veeam Backup Enterprise Manager server.",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent installed on a Veeam Backup Enterprise Manager server.",
            "format": "uuid",
            "readOnly": true
          },
          "installationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup Enterprise Manager installation.",
            "format": "uuid",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of a Veeam Backup Enterprise Manager.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Inaccessible",
              "OutofDate"
            ],
            "type": "string",
            "description": "Status of a Veeam Backup Enterprise Manager server.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "EnterpriseManagerStatus"
            }
          }
        },
        "readOnly": true
      },
      "EnterpriseManagerBackupServer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup & Replication server.",
            "format": "uuid",
            "readOnly": true
          },
          "address": {
            "type": "string",
            "description": "DNS name or IP address of a Veeam Backup & Replication server.",
            "readOnly": true
          },
          "port": {
            "type": "integer",
            "description": "Port used by Veeam Backup Service.",
            "readOnly": true
          },
          "backupServer": {
            "type": "object",
            "allOf": [
              {
                "$ref": "#/components/schemas/BackupServer"
              }
            ],
            "description": "Information about a Veeam Backup & Replication server.\n> If management agent is not installed on this server, the property value is `null`.'\n",
            "nullable": true,
            "readOnly": true
          }
        },
        "externalDocs": {
          "description": "Enterprise Manager User Guide",
          "url": "https://helpcenter.veeam.com/docs/backup/em/adding_veeam_backup_servers.html"
        }
      },
      "CustomWelcomeEmailTemplate": {
        "type": "object",
        "properties": {
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationType": {
            "enum": [
              "Unknown",
              "Company",
              "Reseller"
            ],
            "type": "string",
            "description": "Type of an organization.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "NotificationOrganizationType"
            }
          },
          "organizationScope": {
            "enum": [
              "Unknown",
              "CurrentObject",
              "ChildObjects"
            ],
            "type": "string",
            "description": "Scope of notified organizations.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "NotificationOrganizationScope"
            }
          },
          "emailContent": {
            "maxLength": 10000,
            "minLength": 0,
            "type": "string",
            "description": "Content of an email message.",
            "nullable": true
          },
          "showSelfServiceSection": {
            "type": "boolean",
            "description": "Indicates whether the **Self-service** section is included in the email message.",
            "default": true
          },
          "isDefault": {
            "type": "boolean",
            "description": "Indicates whether an email message template is selected by default.",
            "default": true
          }
        },
        "readOnly": true
      },
      "VOneServer": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE server.",
            "format": "uuid",
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE server location.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent installed on a Veeam ONE server.",
            "format": "uuid",
            "readOnly": true
          },
          "installationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam ONE installation.",
            "format": "uuid",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Host name of a Veeam ONE server.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Veeam ONE version installed on a server.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Inaccessible"
            ],
            "type": "string",
            "description": "Veeam ONE server status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "VOneServerStatus"
            }
          }
        },
        "readOnly": true
      },
      "Vbm365Server": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 server.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "locationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 server location.",
            "format": "uuid",
            "readOnly": true
          },
          "organizationUid": {
            "type": "string",
            "description": "UID assigned to an organization.",
            "format": "uuid",
            "readOnly": true
          },
          "managementAgentUid": {
            "type": "string",
            "description": "UID assigned to a management agent installed on a Veeam Backup for Microsoft 365 Server.",
            "format": "uuid",
            "readOnly": true
          },
          "installationUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Backup for Microsoft 365 server installation.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Host name of a Veeam Backup for Microsoft 365 server.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Veeam Backup for Microsoft 365 version installed on a server.",
            "readOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "Healthy",
              "Warning",
              "Inaccessible"
            ],
            "type": "string",
            "description": "Veeam Backup for Microsoft 365 server status.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "Vbm365ServerStatus"
            }
          }
        },
        "readOnly": true
      },
      "PulseConfiguration": {
        "required": [
          "isCompanyMappingEnabled",
          "isLicenseManagementEnabled",
          "isPushingNewCompaniesToPulseEnabled"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "VCSP Pulse authentication token.",
            "format": "password",
            "nullable": true,
            "writeOnly": true
          },
          "status": {
            "enum": [
              "Unknown",
              "NotConfigured",
              "Configured",
              "Warning",
              "Error"
            ],
            "type": "string",
            "description": "Status of VCSP Pulse configuration.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseConfigurationStatus"
            }
          },
          "statusMessage": {
            "type": "string",
            "description": "Status message.",
            "readOnly": true
          },
          "isCompanyMappingEnabled": {
            "type": "boolean",
            "description": "Indicates whether company management in VCSP Pulse is enabled."
          },
          "isLicenseManagementEnabled": {
            "type": "boolean",
            "description": "Indicates whether license management in VCSP Pulse is enabled."
          },
          "isPushingNewCompaniesToPulseEnabled": {
            "type": "boolean",
            "description": "Indicates whether a VCSP Pulse tenant must be created for each new company."
          },
          "lastUpdateDate": {
            "type": "string",
            "description": "Date of the last VCSP Pulse integration update.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "tokenExpirationDate": {
            "type": "string",
            "description": "Date when the VCSP Pulse Portal connection token expires.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "PulseLicenseContract": {
        "type": "object",
        "properties": {
          "contractId": {
            "type": "string",
            "description": "ID assigned to a rental agreement contract.",
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Date of rental agreement contract expiration.",
            "format": "date-time",
            "readOnly": true
          },
          "pointsLimit": {
            "type": "number",
            "description": "Maximum number of license points that can be consumed according to rental agreement contract.",
            "format": "float",
            "nullable": true,
            "readOnly": true
          },
          "automaticExtensionAlwaysOn": {
            "type": "boolean",
            "description": "Indicates whether rental agreement contract must be automatically updated.",
            "readOnly": true
          }
        }
      },
      "PulseLicenseProduct": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "ID assigned to a licensed Veeam product.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a licensed Veeam product.",
            "readOnly": true
          },
          "edition": {
            "type": "string",
            "description": "Edition of a licensed Veeam product.",
            "readOnly": true
          },
          "version": {
            "type": "string",
            "description": "Version of a licensed Veeam product.",
            "readOnly": true
          },
          "workloads": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PulseLicenseProductWorkload"
            },
            "description": "Array of Veeam product workloads included in the VCSP Pulse license.",
            "readOnly": true
          }
        }
      },
      "PulseLicenseProductWorkload": {
        "type": "object",
        "properties": {
          "workloadId": {
            "type": "string",
            "description": "ID addigned to a workload.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a workload.",
            "readOnly": true
          },
          "multiplier": {
            "type": "number",
            "description": "License unit multiplier for the workload type.",
            "format": "double",
            "readOnly": true
          }
        }
      },
      "PulseLicense": {
        "required": [
          "instanceUid",
          "type",
          "assignStatus",
          "usageType",
          "contractId",
          "productId",
          "points",
          "automaticExtensionStatus"
        ],
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VCSP Pulse license.",
            "format": "uuid",
            "readOnly": true
          },
          "licenseId": {
            "type": "string",
            "description": "ID assigned to a VCSP Pulse license in SalesForce.",
            "format": "uuid",
            "nullable": true,
            "readOnly": true
          },
          "type": {
            "enum": [
              "Unknown",
              "Rental",
              "Internal",
              "Trial"
            ],
            "type": "string",
            "description": "Type of a VCSP Pulse license.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseLicenseType"
            }
          },
          "assignStatus": {
            "enum": [
              "Unknown",
              "Assigned",
              "Assigning",
              "FailedToAssign",
              "Revoking",
              "FailedToRevoke",
              "NotAssigned"
            ],
            "type": "string",
            "description": "Status of VCSP Pulse license assignement.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseLicenseAssignStatus"
            }
          },
          "usageType": {
            "enum": [
              "Unknown",
              "SingleCustomerUse",
              "MultiCustomerUse",
              "InternalUse"
            ],
            "type": "string",
            "description": "Type of VCSP Pulse license usage.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseLicenseUsageType"
            }
          },
          "contractId": {
            "type": "string",
            "description": "ID assigned to a rental agreement contract.",
            "nullable": true,
            "readOnly": true
          },
          "createdBy": {
            "type": "string",
            "description": "Name of an organization that created VCSP Pulse license.",
            "nullable": true,
            "readOnly": true
          },
          "productId": {
            "type": "string",
            "description": "ID asigned to a Veeam product that requires a license.",
            "readOnly": true
          },
          "description": {
            "type": "string",
            "description": "Description of a VCSP Pulse license.",
            "nullable": true,
            "readOnly": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Date of the VCSP Pulse license expiration.",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "points": {
            "type": "number",
            "description": "Number of license points.",
            "format": "double",
            "readOnly": true
          },
          "automaticExtensionStatus": {
            "enum": [
              "Unknown",
              "Off",
              "On",
              "AlwaysOn",
              "AlwaysOff",
              "SwitchingToOn",
              "SwitchingToOff"
            ],
            "type": "string",
            "description": "Status of VCSP Pulse license automatic update.",
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseLicenseAutomaticExtensionStatus"
            }
          },
          "assignedCompanyUid": {
            "type": "string",
            "description": "UID of a company to which a VCSP Pulse license is assigned.",
            "format": "uuid",
            "nullable": true
          },
          "assignedResellerUid": {
            "type": "string",
            "description": "UID of a reseller to which a VCSP Pulse license is assigned.",
            "format": "uuid",
            "nullable": true
          }
        },
        "readOnly": true
      },
      "PulseLicenseInput": {
        "required": [
          "productId",
          "contractId",
          "expirationDate",
          "workloads"
        ],
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "ID asigned to a Veeam product that requires a license."
          },
          "contractId": {
            "type": "string",
            "description": "ID assigned to a rental agreement contract."
          },
          "description": {
            "type": "string",
            "description": "Description of a VCSP Pulse license.",
            "nullable": true
          },
          "expirationDate": {
            "type": "string",
            "description": "Date of the VCSP Pulse license expiration.",
            "format": "date-time"
          },
          "type": {
            "enum": [
              "Unknown",
              "Rental",
              "Internal",
              "Trial"
            ],
            "type": "string",
            "description": "Type of a VCSP Pulse license.",
            "default": "Rental",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseLicenseType"
            }
          },
          "isAutomaticExtensionEnabled": {
            "type": "boolean",
            "description": "Defines whether VCSP Pulse license must be updated automatically.",
            "default": false
          },
          "workloads": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PulseLicenseWorkloadInput"
            },
            "description": "Array of workloads that must be licensed."
          }
        }
      },
      "PulseLicenseWorkloadInput": {
        "required": [
          "workloadId",
          "count"
        ],
        "type": "object",
        "properties": {
          "workloadId": {
            "type": "string",
            "description": "ID assigned to a workload type."
          },
          "count": {
            "maximum": 100000,
            "minimum": 1,
            "type": "integer",
            "description": "Number of objects.",
            "format": "int32"
          }
        }
      },
      "PulseTenant": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a VCSP Pulse tenant.",
            "readOnly": true
          },
          "mappingStatus": {
            "enum": [
              "Unknown",
              "NotMapped",
              "Mapped",
              "MappingInProggress",
              "FailedToMap"
            ],
            "type": "string",
            "description": "Mapping status of a VCSP Pulse tenant.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "PulseTenantMappingStatus"
            }
          },
          "mappingStatusMessage": {
            "type": "string",
            "description": "Message for mapping status of a VCSP Pulse tenant.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "Name of a VCSP Pulse tenant.",
            "readOnly": true
          },
          "mappedMasterOrganizationUid": {
            "type": "string",
            "description": "UID assigned to a master organization mapped to a VCSP Pulse tenant.",
            "format": "uuid",
            "nullable": true
          },
          "mergedOrganizationUids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "Array of UIDs assigned to organizations merged with a master organization.",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "CloudTenantProductVersionInfo": {
        "type": "object",
        "properties": {
          "instanceUid": {
            "type": "string",
            "description": "UID assigned to a Veeam product.",
            "format": "uuid",
            "readOnly": true
          },
          "productType": {
            "enum": [
              "Unknown",
              "VBR"
            ],
            "type": "string",
            "description": "Veeam product type.",
            "readOnly": true,
            "x-extensible-enum": true,
            "x-ms-enum": {
              "name": "CloudTenantProductVersionInfoProductType"
            }
          },
          "version": {
            "type": "string",
            "description": "Version of a Veeam product.",
            "nullable": true,
            "readOnly": true
          },
          "siteUid": {
            "type": "string",
            "description": "UID assigned to a Veeam Cloud Connect server managing a tenant that uses a Veeam product.",
            "format": "uuid",
            "readOnly": true
          },
          "companyUid": {
            "type": "string",
            "description": "UID assigned to a company associated with a tenant that uses a Veeam product.",
            "format": "uuid",
            "readOnly": true
          },
          "tenantUid": {
            "type": "string",
            "description": "UID assigned to a tenant that uses a Veeam product.",
            "format": "uuid",
            "readOnly": true
          },
          "isVersionInfoAvailable": {
            "type": "boolean",
            "description": "Indicates whether information on Veeam product version is available.",
            "readOnly": true
          }
        }
      },
      "ResellerExpand": {
        "enum": [
          "Organization"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ResellerExpand"
        }
      },
      "IdentityProviderRoleMappingRuleExpand": {
        "enum": [
          "IdentityProvider"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "IdentityProviderRoleMappingRuleExpand"
        }
      },
      "CompanyExpand": {
        "enum": [
          "Organization"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "CompanyExpand"
        }
      },
      "ProviderExpand": {
        "enum": [
          "Organization"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "ProviderExpand"
        }
      },
      "WindowsDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WindowsDiscoveryRuleExpand"
        }
      },
      "WindowsNetworkBasedDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule",
          "WindowsDiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WindowsNetworkBasedDiscoveryRuleExpand"
        }
      },
      "WindowsActiveDirectoryBasedDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule",
          "WindowsDiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WindowsActiveDirectoryBasedDiscoveryRuleExpand"
        }
      },
      "WindowsCustomDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule",
          "WindowsDiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "WindowsCustomDiscoveryRuleExpand"
        }
      },
      "LinuxDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LinuxDiscoveryRuleExpand"
        }
      },
      "LinuxNetworkBasedDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule",
          "LinuxDiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LinuxNetworkBasedDiscoveryRuleExpand"
        }
      },
      "LinuxCustomDiscoveryRuleExpand": {
        "enum": [
          "DiscoveryRule",
          "LinuxDiscoveryRule"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "LinuxCustomDiscoveryRuleExpand"
        }
      },
      "BackupServerBackupVmJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerBackupVmJobExpand"
        }
      },
      "BackupServerReplicationVmJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerReplicationVmJobExpand"
        }
      },
      "BackupServerBackupCopyJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerBackupCopyJobExpand"
        }
      },
      "BackupServerFileShareJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerFileShareJobExpand"
        }
      },
      "BackupServerFileShareCopyJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerFileShareCopyJobExpand"
        }
      },
      "BackupServerImmediateBackupCopyJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerImmediateBackupCopyJobExpand"
        }
      },
      "BackupServerVmCopyJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerVmCopyJobExpand"
        }
      },
      "BackupServerFileCopyJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerFileCopyJobExpand"
        }
      },
      "BackupServerFileTapeJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerFileTapeJobExpand"
        }
      },
      "BackupServerBackupTapeJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerBackupTapeJobExpand"
        }
      },
      "BackupServerAgentJobExpand": {
        "enum": [
          "BackupServerJob"
        ],
        "type": "string",
        "x-ms-enum": {
          "name": "BackupServerAgentJobExpand"
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "About",
      "description": "This resource contains information about currently installed Veeam Service Provider Console version."
    },
    {
      "name": "Accounts",
      "description": "This resource collection represents user accounts in Veeam Service Provider Console infrastructure."
    },
    {
      "name": "Alarms",
      "description": "This resource collection represents Veeam Service Provider Console alarms."
    },
    {
      "name": "AsyncActions",
      "description": "This resource collection represent Veeam Service Provider Console RESTful API async actions."
    },
    {
      "name": "Authentication",
      "description": "This resource collection allows to authenticate to Veeam Service Provider Console RESTful API."
    },
    {
      "name": "Backup Agent Jobs",
      "description": "This resource collection represents jobs configured for Veeam backup agents in the Veeam Service Provider Console infrastructure."
    },
    {
      "name": "Backup Agents",
      "description": "This resource collection represents Veeam backup agents in Veeam Service Provider Console infrastructure components."
    },
    {
      "name": "Backup Policies",
      "description": "This resource collection represents backup policies configured in Veeam Service Provider Console."
    },
    {
      "name": "Backup Server Failover Plans",
      "description": "This resource collection represents failover plans."
    },
    {
      "name": "Backup Server Jobs",
      "description": "This resource collection represents jobs configured on managed Veeam Backup & Replication servers."
    },
    {
      "name": "Backup Servers",
      "description": "This resource collection represents managed Veeam Backup & Replication servers."
    },
    {
      "name": "Cloud Connect",
      "description": "This resource collection represents sites and their infrastructure components."
    },
    {
      "name": "Companies",
      "description": "This resource collection represents companies managed in Veeam Service Provider Console."
    },
    {
      "name": "Configuration",
      "description": "This resource collection represents security certificate installed on Veeam Service Provider Console server."
    },
    {
      "name": "Containers",
      "description": "This resource collection represents organization containers."
    },
    {
      "name": "Deployment",
      "description": "This resource collection represents deployment tasks."
    },
    {
      "name": "Discovery",
      "description": "This resource collection represents discovery rules and discovered computers."
    },
    {
      "name": "Enterprise Manager",
      "description": "This resource collection represents managed Veeam Backup Enterprise Manager Servers."
    },
    {
      "name": "Licensing",
      "description": "This resource collection represents licenses in Veeam Service Provider Console."
    },
    {
      "name": "Locations",
      "description": "This resource collection represents organization locations."
    },
    {
      "name": "Management Agents",
      "description": "This resource collection represents management agents installed on Veeam Service Provider Console infrastructure components."
    },
    {
      "name": "Misc",
      "description": "This resource collection represents useful miscellaneous data."
    },
    {
      "name": "Organizations",
      "description": "This resource collection represent organizations in Veeam Service Provider Console. Organizations include service provider, resellers and companies."
    },
    {
      "name": "Protected Workloads",
      "description": "This resource collection represents workloads managed in Veeam Service Provider Console."
    },
    {
      "name": "Provider",
      "description": "This resource collection represents information on service provider."
    },
    {
      "name": "Pulse",
      "description": "This resource collection represents VCSP Pulse integration support."
    },
    {
      "name": "Resellers",
      "description": "This resource collection represents resellers."
    },
    {
      "name": "Single Sign On",
      "description": "This resource collection represents Single Sign-on parameters."
    },
    {
      "name": "Subscription Plans",
      "description": "This resource collection represents subscription plans configured in Veeam Service Provider Console."
    },
    {
      "name": "Veeam Backup for Microsoft 365 Server",
      "description": "This resource collection represents information on Veeam Backup for Microsoft 365 integration."
    },
    {
      "name": "Veeam ONE Server",
      "description": "This resource collection represents information on Veeam ONE integration."
    }
  ]
}