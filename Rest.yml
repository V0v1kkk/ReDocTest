openapi: 3.0.1
info:
  title: API v6
  version: v6
servers:
  - url: https://localhost:4443/
paths:
# Note: ___Archiver___Auth___ section start
  /v6/token:
    post:
      tags:
        - Auth
      operationId: token
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - grant_type
              properties:
                grant_type:
                  type: string
                  default: password
                  enum:
                    - password
                    - refresh_token
                    - urn:ietf:params:oauth:grant-type:jwt-bearer
                    - integration
                    - operator
                username:
                  type: string
                password:
                  type: string
                refresh_token:
                  type: string
                client_id:
                  type: string
                assertion:
                  type: string
                integration_token:
                  type: string
        required: true
      responses:
        200:
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OAuthTokenResponse'
      x-anonymous: true

# Note: ___Archiver___AmazonS3CompatibleObjectStorageController___ section start
  /v6/S3CompatibleResources/buckets:
    get:
      tags:
        - AmazonS3CompatibleObjectStorage
      operationId: AmazonS3CompatibleObjectStorage_GetBuckets
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: ServicePoint
          in: query
          required: true
          schema:
            type: string
        - name: CustomRegionId
          in: query
          required: true
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAmazonBucketS3Compatible'
  /v6/S3CompatibleResources/buckets/{Name}:
    get:
      tags:
        - AmazonS3CompatibleObjectStorage
      operationId: AmazonS3CompatibleObjectStorage_GetBucket
      parameters:
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: ServicePoint
          in: query
          required: true
          schema:
            type: string
        - name: CustomRegionId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonBucketS3Compatible'
  /v6/S3CompatibleResources/buckets/{bucketName}/folders:
    get:
      tags:
        - AmazonS3CompatibleObjectStorage
      operationId: AmazonS3CompatibleObjectStorage_GetFolders
      parameters:
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: ServicePoint
          in: query
          required: true
          schema:
            type: string
        - name: CustomRegionId
          in: query
          required: true
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Compatible'
    post:
      tags:
        - AmazonS3CompatibleObjectStorage
      operationId: AmazonS3CompatibleObjectStorage_AddFolder
      parameters:
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: ServicePoint
          in: query
          required: true
          schema:
            type: string
        - name: CustomRegionId
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTAmazonFolderToSend'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Compatible'
      x-codegen-request-body-name: folderJson
  /v6/S3CompatibleResources/buckets/{bucketName}/folders/{Name}:
    get:
      tags:
        - AmazonS3CompatibleObjectStorage
      operationId: AmazonS3CompatibleObjectStorage_GetFolder
      parameters:
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: ServicePoint
          in: query
          required: true
          schema:
            type: string
        - name: CustomRegionId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Compatible'

# Note: ___Archiver___AmazonS3ObjectStorageController___ section start
  /v6/S3Resources/buckets:
    get:
      tags:
        - AmazonS3ObjectStorage
      operationId: AmazonS3ObjectStorage_GetBuckets
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AmazonS3AwsRegionType'
        - name: RegionId
          in: query
          schema:
            type: string
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAmazonBucketS3Aws'
  /v6/S3Resources/buckets/{Name}:
    get:
      tags:
        - AmazonS3ObjectStorage
      operationId: AmazonS3ObjectStorage_GetBucket
      parameters:
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AmazonS3AwsRegionType'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonBucketS3Aws'
  /v6/S3Resources/buckets/{bucketName}/folders:
    get:
      tags:
        - AmazonS3ObjectStorage
      operationId: AmazonS3ObjectStorage_GetFolders
      parameters:
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AmazonS3AwsRegionType'
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Aws'
    post:
      tags:
        - AmazonS3ObjectStorage
      operationId: AmazonS3ObjectStorage_AddFolder
      parameters:
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AmazonS3AwsRegionType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTAmazonFolderToSend'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Aws'
      x-codegen-request-body-name: folderJson
  /v6/S3Resources/buckets/{bucketName}/folders/{Name}:
    get:
      tags:
        - AmazonS3ObjectStorage
      operationId: AmazonS3ObjectStorage_GetFolder
      parameters:
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: bucketName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AmazonS3AwsRegionType'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAmazonFolderToReceiveS3Aws'

# Note: ___Archiver___AccountController___ section start
  /v6/Accounts:
    get:
      tags:
        - Account
      operationId: Account_GetCredentialsV4
      parameters:
        - name: name
          in: query
          schema:
            type: string
        - name: accountType
          in: query
          schema:
            type: string
            enum:
              - azureBlobAccount
              - amazonS3Account
              - amazonS3CompatibleAccount
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTCredential'
    post:
      tags:
        - Account
      operationId: Account_AddCredentialV4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCredentialToSend'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTCredential'
      x-codegen-request-body-name: credential
  /v6/Accounts/{accountId}:
    get:
      tags:
        - Account
      operationId: Account_GetCredentialV4
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTCredential'
    put:
      tags:
        - Account
      operationId: Account_UpdateCredentialV4
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCredentialToSend'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: credential
    delete:
      tags:
        - Account
      operationId: Account_RemoveCredential
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}

# Note: ___Archiver___ApplicationController___ section start
  /v6/Organizations/{organizationId}/Applications:
    get:
      tags:
        - Application
      operationId: Application_GetApplications
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: displayName
          in: query
          schema:
            type: string
        - name: tag
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTApplication'
          x-veeam-page-result: true
    post:
      tags:
        - Application
      operationId: Application_CreateApplication
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTApplicationFromClient'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTApplication'
          x-veeam-page-result: true
      x-codegen-request-body-name: application
  /v6/AuditEmailSettings:
    get:
      tags:
        - AuditEmailSettings
      operationId: AuditEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAuditEmailSettingsResponse'
    put:
      tags:
        - AuditEmailSettings
      operationId: AuditEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTAuditEmailSettingsRequest'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: emailSettingsRequest
  /v6/AuditEmailSettings/SendTest:
    post:
      tags:
        - AuditEmailSettings
      operationId: AuditEmailSettings_SendTest
      responses:
        200:
          description: OK
          content: {}

# Note: ___Archiver___AzureObjectStorageController___ section start
  /v6/AzureResources/containers:
    get:
      tags:
        - AzureObjectStorage
      operationId: AzureObjectStorage_GetContainers
      parameters:
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AzureStorageEndpoint'
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAzureContainer'
  /v6/AzureResources/containers/{Name}:
    get:
      tags:
        - AzureObjectStorage
      operationId: AzureObjectStorage_GetContainer
      parameters:
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AzureStorageEndpoint'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAzureContainer'
  /v6/AzureResources/containers/{containerName}/folders:
    get:
      tags:
        - AzureObjectStorage
      operationId: AzureObjectStorage_GetFolders
      parameters:
        - name: containerName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AzureStorageEndpoint'
        - name: Name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAzureFolderToReceive'
    post:
      tags:
        - AzureObjectStorage
      operationId: AzureObjectStorage_AddFolder
      parameters:
        - name: containerName
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AzureStorageEndpoint'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTAzureFolderToSend'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAzureFolderToReceive'
      x-codegen-request-body-name: folderJson
  /v6/AzureResources/containers/{containerName}/folders/{Name}:
    get:
      tags:
        - AzureObjectStorage
      operationId: AzureObjectStorage_GetFolder
      parameters:
        - name: containerName
          in: path
          required: true
          schema:
            type: string
        - name: Name
          in: path
          required: true
          schema:
            type: string
        - name: accountId
          in: query
          required: true
          schema:
            type: string
            format: uuid
        - name: RegionType
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/AzureStorageEndpoint'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAzureFolderToReceive'

# Note: ___Archiver___BackupGroupDataController___ section start
  /v6/BackupRepositories/{repositoryId}/GroupData:
    get:
      tags:
        - BackupGroupData
      operationId: BackupGroupData_GetGroupsDataV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupGroupData'
          x-veeam-page-result: true
  /v6/BackupRepositories/{repositoryId}/GroupData/{groupId}:
    get:
      tags:
        - BackupGroupData
      operationId: BackupGroupData_GetSingleGroupData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupGroupData'

# Note: ___Archiver___BackupOrganizationController___ section start
  /v6/RestoreSessions/{restoreSessionId}/organization:
    get:
      tags:
        - BackupOrganization
      operationId: BackupOrganization_GetByRestoreSessionId
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupOrganization'
  /v6/RestoreSessions/{restoreSessionId}/organization/exportToPst:
    post:
      tags:
        - BackupOrganization
      operationId: BackupOrganization_RestoreSessionsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExportFolderToPst'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: exportOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/searchExchange:
    post:
      tags:
        - BackupOrganization
      operationId: BackupOrganization_RestoreSessionsSearchExchange
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/searchTeams:
    post:
      tags:
        - BackupOrganization
      operationId: BackupOrganization_RestoreSessionsSearchTeams
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTTeamsSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTChannelEntity'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___Archiver___BackupOrganizationDataController___ section start
  /v6/BackupRepositories/{repositoryId}/OrganizationData:
    get:
      tags:
        - BackupOrganizationData
      operationId: BackupOrganizationData_GetOrganizationData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupOrganizationData'
          x-veeam-page-result: true
  /v6/BackupRepositories/{repositoryId}/OrganizationData/{organizationId}:
    get:
      tags:
        - BackupOrganizationData
      operationId: BackupOrganizationData_GetSingleOrganizationData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupOrganizationData'

# Note: ___Archiver___BackupSiteDataController___ section start
  /v6/BackupRepositories/{repositoryId}/SiteData:
    get:
      tags:
        - BackupSiteData
      operationId: BackupSiteData_GetSitesDataV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupSiteData'
          x-veeam-page-result: true
  /v6/BackupRepositories/{repositoryId}/SiteData/{siteId}:
    get:
      tags:
        - BackupSiteData
      operationId: BackupSiteData_GetSiteDataV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupSiteData'

# Note: ___Archiver___BackupTeamDataController___ section start
  /v6/BackupRepositories/{repositoryId}/TeamData:
    get:
      tags:
        - BackupTeamData
      operationId: BackupTeamData_GetTeamsData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupTeamData'
          x-veeam-page-result: true
  /v6/BackupRepositories/{repositoryId}/TeamData/{teamId}:
    get:
      tags:
        - BackupTeamData
      operationId: BackupTeamData_GetTeamData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupTeamData'

# Note: ___Archiver___BackupUserDataController___ section start
  /v6/BackupRepositories/{repositoryId}/UserData:
    get:
      tags:
        - BackupUserData
      operationId: BackupUserData_GetUsersDataV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupUserData'
          x-veeam-page-result: true
  /v6/BackupRepositories/{repositoryId}/UserData/{userId}:
    get:
      tags:
        - BackupUserData
      operationId: BackupUserData_GetUserData
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupUserData'

# Note: ___Archiver___BackupRepositoryController___ section start
  /v6/BackupRepositories:
    get:
      tags:
        - BackupRepository
      operationId: BackupRepository_GetRepositoriesV4
      parameters:
        - name: proxyId
          in: query
          schema:
            type: string
            format: uuid
        - name: longTerm
          in: query
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTBackupRepository'
    post:
      tags:
        - BackupRepository
      operationId: BackupRepository_AddV4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTBackupRepositoryFromClient'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupRepository'
      x-codegen-request-body-name: repository
  /v6/BackupRepositories/{repositoryId}:
    get:
      tags:
        - BackupRepository
      operationId: BackupRepository_GetRepositoriesByIdV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupRepository'
    put:
      tags:
        - BackupRepository
      operationId: BackupRepository_UpdateRepositoryV4
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTBackupRepositoryFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: repository
    delete:
      tags:
        - BackupRepository
      operationId: BackupRepository_Remove
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/BackupRepositories/{repositoryId}/backedupOrganizations:
    get:
      tags:
        - BackupRepository
      operationId: BackupRepository_GetRepositoryStorageUsage
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTBackupRepositoryStorageUsageInfo'
  /v6/BackupRepositories/{repositoryId}/Sync:
    post:
      tags:
        - BackupRepository
      operationId: BackupRepository_StartSynchronizeAction
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRepositorySynchronizeSession'

# Note: ___Archiver___CopyJobController___ section start controller
  /v6/CopyJobs:
    get:
      tags:
        - CopyJob
      operationId: CopyJob_Get
      parameters:
        - name: repositoryId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTCopyJob'
    post:
      tags:
        - CopyJob
      operationId: CopyJob_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyJob'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTCopyJob'
      x-codegen-request-body-name: jobFromClient
  /v6/CopyJobs/{id}:
    get:
      tags:
        - CopyJob
      operationId: CopyJob_Get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTCopyJob'
    put:
      tags:
        - CopyJob
      operationId: CopyJob_Update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyJob'
        required: true
      responses:
        204:
          description: NoContent
          content: { }
      x-codegen-request-body-name: jobFromClient
    delete:
      tags:
        - CopyJob
      operationId: CopyJob_Delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: { }
  /v6/CopyJobs/{id}/BackupJob:
    get:
      tags:
        - CopyJob
      operationId: CopyJob_GetBackupJobByCopyJob
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJob'
  /v6/CopyJobs/{id}/enable:
    post:
      tags:
        - CopyJob
      operationId: CopyJob_Enable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: { }
  /v6/CopyJobs/{id}/disable:
    post:
      tags:
        - CopyJob
      operationId: CopyJob_Disable
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: { }
  /v6/CopyJobs/{id}/start:
    post:
      tags:
        - CopyJob
      operationId: CopyJob_Start
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTStartJobOptions'
        required: true
      responses:
        204:
          description: NoContent
          content: { }
      x-codegen-request-body-name: options

# Note: ___Archiver___DataRetrievalController___ section start
  /v6/DataRetrievals:
    get:
      tags:
        - DataRetrieval
      operationId: DataRetrieval_GetDataRetrievals
      parameters:
        - name: organizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: repositoryId
          in: query
          schema:
            type: string
            format: uuid
        - name: status
          in: query
          schema:
            type: string
            x-name: RESTDataRetrievalStatus
            enum:
              - Retrieving
              - Retrieved
              - Removing
              - Removed
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTDataRetrievalComposed'
    post:
      tags:
        - DataRetrieval
      operationId: DataRetrieval_Create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTDataRetrievalFromClient'
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTDataRetrievalComposed'
      x-codegen-request-body-name: dataRetrievalFromClient
  /v6/DataRetrievals/{dataRetrievalId}:
    get:
      tags:
        - DataRetrieval
      operationId: DataRetrieval_GetDataRetrieval
      parameters:
        - name: dataRetrievalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTDataRetrievalComposed'
    delete:
      tags:
        - DataRetrieval
      operationId: DataRetrieval_DeleteDataRetrieval
      parameters:
        - name: dataRetrievalId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content: {}

# Note: ___Archiver___EncryptionKeyController___ section start
  /v6/EncryptionKeys:
    get:
      tags:
        - EncryptionKey
      operationId: EncryptionKey_GetEncryptionKeyV4
      parameters:
        - name: description
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTEncryptionKey'
    post:
      tags:
        - EncryptionKey
      operationId: EncryptionKey_AddEncryptionKeyV4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTEncryptionKeyToSend'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTEncryptionKey'
      x-codegen-request-body-name: encryptionKey
  /v6/EncryptionKeys/{keyId}:
    get:
      tags:
        - EncryptionKey
      operationId: EncryptionKey_GetEncryptionKeyV4
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTEncryptionKey'
    put:
      tags:
        - EncryptionKey
      operationId: EncryptionKey_UpdateEncryptionKeyV4
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTEncryptionKeyToSend'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: encryptionKey
    delete:
      tags:
        - EncryptionKey
      operationId: EncryptionKey_RemoveEncryptionKey
      parameters:
        - name: keyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}

# Note: ___Archiver___ExclusionSettingsController___ section start
  /v6/ExclusionSettings:
    get:
      tags:
        - ExclusionSettings
      operationId: ExclusionSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExclusionSettingsToClient'
    put:
      tags:
        - ExclusionSettings
      operationId: ExclusionSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExclusionSettings'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: backupExclusions

# Note: ___Archiver___GlobalRetentionExclusionController___ section start
  /v6/GlobalRetentionExclusionSettings:
    get:
      tags:
        - GlobalRetentionExclusionSettings
      operationId: GlobalRetentionExclusionSettings_GlobalRetentionPolicyGetV4
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRetentionExclusion'
    put:
      tags:
        - GlobalRetentionExclusionSettings
      operationId: GlobalRetentionExclusionSettings_GlobalRetentionPolicyPutV4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRetentionExclusion'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: exclusion

# Note: ___Archiver___HistorySettingsController___ section start
  /v6/HistorySettings:
    get:
      tags:
        - HistorySettings
      operationId: HistorySettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTHistorySettings'
    put:
      tags:
        - HistorySettings
      operationId: HistorySettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTHistorySettings'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: settings

# Note: ___Archiver___InternetProxySettingsController___ section start
  /v6/InternetProxySettings:
    get:
      tags:
        - InternetProxySettings
      operationId: InternetProxySettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTInternetProxy'
    put:
      tags:
        - InternetProxySettings
      operationId: InternetProxySettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTInternetProxyFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: internetProxy

# Note: ___Archiver___JobController___ section start
  /v6/Jobs:
    get:
      tags:
        - Job
      operationId: Job_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTJob'
  /v6/Jobs/{jobId}:
    get:
      tags:
        - Job
      operationId: Job_Get
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJob'
    put:
      tags:
        - Job
      operationId: Job_Update
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTJob'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: restJob
    post:
      tags:
        - Job
      operationId: Job_Remove
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/CopyJob:
    get:
      tags:
        - Job
      operationId: Job_GetCopyJobByBackupJob
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTCopyJob'
  /v6/Jobs/{jobId}/SelectedItems:
    get:
      tags:
        - Job
      operationId: Job_GetSelectedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTJobItemComposed'
    post:
      tags:
        - Job
      operationId: Job_AddSelectedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RESTJobItemComposed'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: itemsToAppend
    delete:
      tags:
        - Job
      operationId: Job_RemoveSelectedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ids
          in: query
          required: true
          schema:
            type: string
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/SelectedItems/{itemId}:
    get:
      tags:
        - Job
      operationId: Job_GetSelectedItem
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJobItemComposed'
    put:
      tags:
        - Job
      operationId: Job_UpdateSelectedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTJobItemComposed'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: itemsToUpdate
  /v6/Jobs/{jobId}/ExcludedItems:
    get:
      tags:
        - Job
      operationId: Job_GetExcludedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTJobItemComposed'
    put:
      tags:
        - Job
      operationId: Job_AddExcludedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RESTJobItemComposed'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: itemsToAppend
    delete:
      tags:
        - Job
      operationId: Job_RemoveExcludedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: ids
          in: query
          required: true
          schema:
            type: string
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/ExcludedItems/{itemId}:
    get:
      tags:
        - Job
      operationId: Job_GetExcludedItem
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJobItemComposed'
    put:
      tags:
        - Job
      operationId: Job_UpdateExcludedItems
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTJobItemComposed'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: itemsToUpdate
  /v6/Organizations/{organizationId}/Jobs:
    get:
      tags:
        - Job
      operationId: Job_GetByOrganizationId
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTJob'
    post:
      tags:
        - Job
      operationId: Job_Add
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTJob'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJob'
      x-codegen-request-body-name: restJob
  /v6/Jobs/{jobId}/enable:
    post:
      tags:
        - Job
      operationId: Job_EnableAction
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/disable:
    post:
      tags:
        - Job
      operationId: Job_DisableAction
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/start:
    post:
      tags:
        - Job
      operationId: Job_StartAction
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTStartJobOptions'
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: options
  /v6/Jobs/{jobId}/stop:
    post:
      tags:
        - Job
      operationId: Job_StopAction
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Jobs/{jobId}/explore:
    post:
      tags:
        - Job
      operationId: Job_ExploreAction
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExploreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
      x-codegen-request-body-name: exploreOptions

# Note: ___Archiver___JobSessionController___ section start
  /v6/JobSessions:
    get:
      tags:
        - JobSession
      operationId: JobSession_Get
      parameters:
        - name: jobType
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/RESTJobSessionType'
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJobSession'
          x-veeam-page-result: true
  /v6/JobSessions/{jobSessionsId}:
    get:
      tags:
        - JobSession
      operationId: JobSession_GetById
      parameters:
        - name: jobSessionsId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJobSession'
  /v6/Jobs/{jobId}/JobSessions:
    get:
      tags:
        - JobSession
      operationId: JobSession_GetByJobId
      parameters:
        - name: jobId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTJobSession'
          x-veeam-page-result: true

# Note: ___Archiver___JobSessionLogController___ section start
  /v6/JobSessions/{sessionId}/LogItems:
    get:
      tags:
        - JobSessionLog
      operationId: JobSessionLog_GetBatchBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLogItem'
          x-veeam-page-result: true
  /v6/JobSessions/{sessionId}/LogItems/{logItemId}:
    get:
      tags:
        - JobSessionLog
      operationId: JobSessionLog_GetBatchBySessionId
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: logItemId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLogItem'

# Note: ___Archiver___LicenseController___ section start
  /v6/License:
    get:
      tags:
        - License
      operationId: License_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLicense'
  /v6/License/Install:
    post:
      tags:
        - License
      operationId: License_InstallAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTInstallLicenseOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLicense'
      x-codegen-request-body-name: action
  /v6/License/Update:
    post:
      tags:
        - License
      operationId: License_UpdateAction
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLicense'
  /v6/License/AutoUpdate:
    get:
      tags:
        - License
      operationId: License_GetAutoUpdate
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLicenseAutoUpdate'
    put:
      tags:
        - License
      operationId: License_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTLicenseAutoUpdate'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: licenseAutoUpdate

# Note: ___Archiver___LicenseReportController___ section start
  /v6/licensing/reports/latest:
    get:
      tags:
        - LicenseReport
      operationId: LicenseReport_GetLatestReport
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTMonthlyReport'
  /v6/licensing/reports/{reportId}/approve:
    post:
      tags:
        - LicenseReport
      operationId: LicenseReport_ApproveReport
      parameters:
        - name: reportId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTApproveReportOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options

# Note: ___Archiver___LicensedUserController___ section start
  /v6/LicensedUsers:
    get:
      tags:
        - LicensedUser
      operationId: LicensedUser_Get
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: organizationId
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLicensedUser'
          x-veeam-page-result: true
  /v6/LicensedUsers/{licensedUserId}:
    delete:
      tags:
        - LicensedUser
      operationId: LicensedUser_Remove
      parameters:
        - name: licensedUserId
          in: path
          required: true
          schema:
            type: string
      responses:
        204:
          description: NoContent
          content: {}

# Note: ___Archiver___ManagementModeController___ section start
  /v6/ManagementMode:
    get:
      tags:
        - ManagementMode
      operationId: ManagementMode_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTManagementMode'
    put:
      tags:
        - ManagementMode
      operationId: ManagementMode_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTManagementMode'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: managementMode

# Note: ___Archiver___ObjectStorageRepositoryController___ section start
  /v6/objectstoragerepositories/{repositoryId}:
    get:
      tags:
        - ObjectStorageRepository
      operationId: ObjectStorageRepository_GetObjectRepository
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTObjectStorageRepository'
    put:
      tags:
        - ObjectStorageRepository
      operationId: ObjectStorageRepository_UpdateObjectStorageRepository
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTObjectStorageRepository'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: objectStorageRepository
    delete:
      tags:
        - ObjectStorageRepository
      operationId: ObjectStorageRepository_RemoveObjectStorageRepository
      parameters:
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/objectstoragerepositories:
    get:
      tags:
        - ObjectStorageRepository
      operationId: ObjectStorageRepository_GetObjectStorageRepositories
      parameters:
        - name: longTerm
          in: query
          required: false
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTObjectStorageRepository'
    post:
      tags:
        - ObjectStorageRepository
      operationId: ObjectStorageRepository_AddObjectStorageRepository
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTObjectStorageRepository'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTObjectStorageRepository'
      x-codegen-request-body-name: objectStorageRepository

# Note: ___Archiver___OrganizationAuditController___ section start
  /v6/Organizations/{organizationId}/AuditItems:
    get:
      tags:
        - OrganizationAudit
      operationId: OrganizationAudit_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTAuditUserOrGroup'
    post:
      tags:
        - OrganizationAudit
      operationId: OrganizationAudit_Post
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RESTAuditUserOrGroup'
        required: true
      responses:
        201:
          description: Created
          content: {}
      x-codegen-request-body-name: items
  /v6/Organizations/{organizationId}/AuditItems/remove:
    post:
      tags:
        - OrganizationAudit
      operationId: OrganizationAudit_ExecuteRemove
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRemoveAuditItemsOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action

# Note: ___Archiver___OrganizationBackupAccountsController___ section start
  /v6/Organizations/{organizationId}/BackupAccounts:
    get:
      tags:
        - OrganizationBackupAccounts
      operationId: OrganizationBackupAccounts_GetBackupAccounts
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTBackupAccount'
    put:
      tags:
        - OrganizationBackupAccounts
      operationId: OrganizationBackupAccounts_SetAccountPool
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RESTBackupAccount'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTAccountPool'
      x-codegen-request-body-name: pool

# Note: ___Archiver___OrganizationBackupApplicationsController___ section start
  /v6/Organizations/{organizationId}/BackupApplications:
    get:
      tags:
        - OrganizationBackupApplications
      operationId: OrganizationBackupApplications_GetBackupApplications
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBackupApplication'
          x-veeam-page-result: true
    put:
      tags:
        - OrganizationBackupApplications
      operationId: OrganizationBackupApplications_AddBackupApplications
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/RESTBackupApplicationFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: backupApplications
  /v6/Organizations/{organizationId}/DeviceCode:
    post:
      tags:
        - OrganizationBackupApplications
      operationId: OrganizationBackupApplications_OrganizationDeviceCode
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTDeviceCodeResponse'

# Note: ___Archiver___OrganizationController___ section start
  /v6/Organizations:
    get:
      tags:
        - Organization
      operationId: Organization_Get
      parameters:
        - name: extendedView
          in: query
          required: true
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RestOrganizationComposed'
    post:
      tags:
        - Organization
      operationId: Organization_Add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestOrganizationComposed'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestOrganizationComposed'
      x-codegen-request-body-name: organization
  /v6/Organizations/{organizationId}:
    get:
      tags:
        - Organization
      operationId: Organization_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: extendedView
          in: query
          required: true
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestOrganizationComposed'
    put:
      tags:
        - Organization
      operationId: Organization_Update
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestOrganizationComposed'
        required: true
      responses:
        204:
          description: NoContent
          content: {}
      x-codegen-request-body-name: organization
    delete:
      tags:
        - Organization
      operationId: Organization_Remove
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Organizations/{organizationId}/usedRepositories:
    get:
      tags:
        - Organization
      operationId: Organization_GetStorageSpaceUsage
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTOrganizationStorageSpaceUsage'
  /v6/Organization:
    get:
      tags:
        - Organization
      operationId: Organization_GetCurrentOrganization
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTLoggedInOrganization'
  /v6/Organizations/{organizationId}/explore:
    post:
      tags:
        - Organization
      operationId: Organization_ExploreAction
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExploreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
      x-codegen-request-body-name: exploreOptions
  /v6/DeviceCode:
    post:
      tags:
        - Organization
      operationId: Organization_OrganizationDeviceCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCommonDeviceCodeRequestOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTDeviceCodeResponse'
      x-codegen-request-body-name: representation

# Note: ___Archiver___OrganizationGroupController___ section start
  /v6/Organizations/{organizationId}/Groups:
    get:
      tags:
        - OrganizationGroup
      operationId: OrganizationGroup_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
        - name: displayName
          in: query
          schema:
            type: string
        - name: groupName
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTGroup'
          x-veeam-page-result: true
  /v6/Organizations/{organizationId}/Groups/{groupId}:
    get:
      tags:
        - OrganizationGroup
      operationId: OrganizationGroup_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTGroup'

# Note: ___Archiver___OrganizationGroupMemberController___ section start
  /v6/Organizations/{organizationId}/Groups/{groupId}/Members:
    get:
      tags:
        - OrganizationGroupMember
      operationId: OrganizationGroupMember_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTGroupMember'
          x-veeam-page-result: true

# Note: ___Archiver___OrganizationLicensingInformationController___ section start
  /v6/Organizations/{organizationId}/LicensingInformation:
    get:
      tags:
        - OrganizationLicensingInformation
      operationId: OrganizationLicensingInformation_GetLicenseCount
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOrganizationLicensingInformation'

# Note: ___Archiver___OrganizationRbacController___ section start
  /v6/Organization/LoggedInUser:
    get:
      tags:
        - OrganizationRbac
      operationId: OrganizationRbac_GetLoggedInUser
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRbacLoggedInUser'
  /v6/Organization/LoggedInUser/EffectiveScope:
    get:
      tags:
        - OrganizationRbac
      operationId: OrganizationRbac_GetLoggedInUserEffectiveScope
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRbacEffectiveScope'
  
# Note: ___Archiver___OrganizationRetentionExclusionController___ section start
  /v6/Organizations/{organizationId}/RetentionExclusion:
    get:
      tags:
        - OrganizationRetentionExclusion
      operationId: OrganizationRetentionExclusion_OrganizationRetentionPolicyGet
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRetentionExclusion'
    put:
      tags:
        - OrganizationRetentionExclusion
      operationId: OrganizationRetentionExclusion_OrganizationRetentionPolicyPut
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRetentionExclusion'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: exclusion
    delete:
      tags:
        - OrganizationRetentionExclusion
      operationId: OrganizationRetentionExclusion_OrganizationRetentionPolicyDelete
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: NoContent
          content: {}
  /v6/Organizations/{organizationId}/Sites:
    get:
      tags:
        - OrganizationSite
      operationId: OrganizationSite_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
        - name: includePersonalSites
          in: query
          schema:
            type: boolean
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSite'
          x-veeam-page-result: true
  /v6/Organizations/{organizationId}/Sites/{siteId}:
    get:
      tags:
        - OrganizationSite
      operationId: OrganizationSite_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSite'

# Note: ___Archiver___OrganizationTeamController___ section start
  /v6/Organizations/{organizationId}/Teams:
    get:
      tags:
        - OrganizationTeam
      operationId: OrganizationTeam_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
        - name: displayName
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeam'
          x-veeam-page-result: true
  /v6/Organizations/{organizationId}/Teams/{teamId}:
    get:
      tags:
        - OrganizationTeam
      operationId: OrganizationTeam_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeam'

# Note: ___Archiver___OrganizationUserController___ section start
  /v6/Organizations/{organizationId}/Users:
    get:
      tags:
        - OrganizationUser
      operationId: OrganizationUser_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
        - name: userName
          in: query
          schema:
            type: string
        - name: displayName
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTUser'
          x-veeam-page-result: true
  /v6/Organizations/{organizationId}/Users/{userId}:
    get:
      tags:
        - OrganizationUser
      operationId: OrganizationUser_Get
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTUser'

# Note: ___Archiver___OrganizationUserOneDriveController___ section start
  /v6/Organizations/{organizationId}/Users/{userId}/OneDrives:
    get:
      tags:
        - OrganizationUserOneDrive
      operationId: OrganizationUserOneDrive_GetPage
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDrive'
          x-veeam-page-result: true
  /v6/Organizations/{organizationId}/Users/{userId}/OneDrives/{onedriveId}:
    get:
      tags:
        - OrganizationUserOneDrive
      operationId: OrganizationUserOneDrive_GetOne
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: onedriveId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDrive'

# Note: ___Archiver___ProxyController___ section start
  /v6/Proxies:
    get:
      tags:
        - Proxy
      operationId: Proxy_GetProxies
      parameters:
        - name: extendedView
          in: query
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTProxy'
    post:
      tags:
        - Proxy
      operationId: Proxy_Add
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTProxyFromClient'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTProxy'
      x-codegen-request-body-name: proxy
  /v6/Proxies/{proxyId}:
    get:
      tags:
        - Proxy
      operationId: Proxy_GetProxy
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: extendedView
          in: query
          schema:
            type: boolean
            default: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTProxy'
    put:
      tags:
        - Proxy
      operationId: Proxy_Update
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTProxyFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: proxy
  /v6/Proxies/{proxyId}/Rescan:
    post:
      tags:
        - Proxy
      operationId: Proxy_RescanAction
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content: {}
  /v6/Proxies/{proxyId}/Remove:
    post:
      tags:
        - Proxy
      operationId: Proxy_RemoveAction
      parameters:
        - name: proxyId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRemoveProxyOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/Proxies/Rescan:
    post:
      tags:
        - Proxy
      operationId: Proxy_Rescan
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRescanOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: rescanOptions

# Note: ___Archiver___ReportsController___ section start
  /v6/Reports/GenerateLicenseOverview:
    post:
      tags:
        - Reports
      operationId: Reports_GenerateLicenseOverviewAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTLicenseOverviewOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: licenseOverviewOptions
  /v6/Reports/GenerateStorageConsumption:
    post:
      tags:
        - Reports
      operationId: Reports_GenerateStorageConsumptionAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTStorageConsumptionOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: storageConsumptionOptions
  /v6/Reports/GenerateMailboxProtection:
    post:
      tags:
        - Reports
      operationId: Reports_GenerateMailboxProtectionAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTMailboxProtectionOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: mailboxProtectionOptions

# Note: ___Archiver___RepositorySynchronizeSessionsController___ section startoller
  /v6/RepositorySynchronizeSessions:
    get:
      tags:
        - RepositorySynchronizeSessions
      operationId: RepositorySynchronizeSessions_GetSynchronizeSessions
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTRepositorySynchronizeSession'
  /v6/RepositorySynchronizeSessions/{sessionId}:
    get:
      tags:
        - RepositorySynchronizeSessions
      operationId: RepositorySynchronizeSessions_GetRepositoriesById
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRepositorySynchronizeSession'
  /v6/RepositorySynchronizeSessions/{sessionId}/StopSynchronize:
    post:
      tags:
        - RepositorySynchronizeSessions
      operationId: RepositorySynchronizeSessions_StopSynchronizeAction
      parameters:
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content: {}

# Note: ___Archiver___RestorePointController___ section start controller
  /v6/RestorePoints:
    get:
      tags:
        - RestorePoint
      operationId: RestorePoint_GetRestorePoints
      parameters:
        - name: organizationId
          in: query
          schema:
            type: string
            format: uuid
        - name: jobId
          in: query
          schema:
            type: string
            format: uuid
        - name: isCopy
          in: query
          schema:
            type: boolean
        - name: isContentFrozen
          in: query
          schema:
            type: boolean
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTRestorePoint'
  /v6/RestorePoints/{restorePointId}:
    get:
      tags:
        - RestorePoint
      operationId: RestorePoint_GetRestorePoint
      parameters:
        - name: restorePointId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestorePoint'

# Note: ___Archiver___RestoreSessionController___ section start
  /v6/RestoreSessions:
    get:
      tags:
        - RestoreSession
      operationId: RestoreSession_GetPage
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: startTimeFrom
          in: query
          schema:
            type: string
        - name: startTimeTo
          in: query
          schema:
            type: string
        - name: type
          in: query
          schema:
            type: string
            enum:
              - None
              - Restore
              - Explore
              - All
      responses:
        200:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}:
    get:
      tags:
        - RestoreSession
      operationId: RestoreSession_GetByRestoreSessionId
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
  /v6/RestoreSessions/{restoreSessionId}/Stop:
    post:
      tags:
        - RestoreSession
      operationId: RestoreSession_StopAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content: {}
  /v6/RestoreSessions/{restoreSessionId}/organization/restoreDeviceCode:
    post:
      tags:
        - RestoreSession
      operationId: RestoreSession_DeviceCodeAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTDeviceCodeRequestOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTDeviceCodeResponse'
      x-codegen-request-body-name: requestOptions
  /v6/Organization/Explore:
    post:
      tags:
        - RestoreSession
      operationId: RestoreSession_ExploreAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExploreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
      x-codegen-request-body-name: exploreOptions
  /v6/Organization/OperatorExplore:
    post:
      tags:
        - RestoreSession
      operationId: RestoreSession_OperatorExploreAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTOperatorExploreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSession'
      x-codegen-request-body-name: exploreOptions

# Note: ___Archiver___RestoreSessionEventController___ section start
  /v6/RestoreSessions/{restoreSessionId}/Events/{eventId}:
    get:
      tags:
        - RestoreSessionEvent
      operationId: RestoreSessionEvent_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: eventId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSessionEvent'
  /v6/RestoreSessions/{restoreSessionId}/Events:
    get:
      tags:
        - RestoreSessionEvent
      operationId: RestoreSessionEvent_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreSessionEvent'
          x-veeam-page-result: true

# Note: ___Archiver___SelfServicePortalController___ section start
  /v6/SelfServicePortalSettings:
    get:
      tags:
        - SelfServicePortal
      operationId: SelfServicePortal_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSelfServicePortalSettings'
      x-anonymous: true

# Note: ___Archiver___ServiceInstanceController___ section start
  /v6/ServiceInstance:
    get:
      tags:
        - ServiceInstance
      operationId: ServiceInstance_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTServiceInstance'

# Note: ___Archiver___VboEmailSettingsController___ section start
  /v6/VboEmailSettings:
    get:
      tags:
        - VboEmailSettings
      operationId: VboEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTNotificationEmailSettingsResponse'
    put:
      tags:
        - VboEmailSettings
      operationId: VboEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTNotificationEmailSettingsRequest'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: emailSettingsRequest
  /v6/VboEmailSettings/SendTest:
    post:
      tags:
        - VboEmailSettings
      operationId: VboEmailSettings_SendTestAction
      responses:
        200:
          description: OK
          content: {}

# Note: ___Exchange___ExchangeFolderController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders:
    get:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
        - name: name
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RESTExchangeFolder'
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}:
    get:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_GetByFolderId
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeFolder'
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}/RestoreToOriginalLocation:
    post:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_RestoreToOriginalLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTFoldersRestoreStatistics'
      x-codegen-request-body-name: restoreParameters
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}/RestoreToDifferentLocation:
    post:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_RestoreToDifferentLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToDifferentLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTFoldersRestoreStatistics'
      x-codegen-request-body-name: restoreParameters
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}/ExportFolderToPst:
    post:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_ExportFolderToPstAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExportFolderToPst'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: exportOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}/SearchItems:
    post:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v7/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/folders/{folderId}/search:
    get:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
    post:
      tags:
        - ExchangeFolder
      operationId: ExchangeFolder_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
      x-codegen-request-body-name: searchOptions

# Note: ___Exchange___ExchangeItemController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}:
    get:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_GetV5
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items:
    get:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_GetV5
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: folderId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/RestoreToOriginalLocation:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_RestoreItemsToOriginalLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemsRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/RestoreToDifferentLocation:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_RestoreItemsToDifferentLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToDifferentLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemsRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/ExportToPst:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_ExportItemsToPstAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSeveralItemsExportOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/SaveToMsg:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SaveItemsToMsg
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveToMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveToMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/SendToDefaultAddress:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SendItemsToDefaultAddressAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendToDefaultAddressOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/SendToDifferentAddress:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SendItemsToDifferentAddressAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendToDifferentAddressOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/RestoreToOriginalLocation:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_RestoreOneItemToOriginalLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemsRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/RestoreToDifferentLocation:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_RestoreOneItemToDifferentLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToDifferentLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemsRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/ExportToPst:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_ExportOneItemToPstAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExportToPstOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/SaveToMsg:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SaveOneItemToMsgAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/SendToDefaultAddress:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SendOneItemToDefaultAddressAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content: {}
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/{itemId}/SendToDifferentAddress:
    post:
      tags:
        - ExchangeItem
      operationId: ExchangeItem_SendOneItemToDifferentAddressAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendToMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/items/action/operatorRestore:
    post:
      tags:
        - ExchangeItem
      operationId: operatorRestore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTOperatorRestoreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOperatorRestoreResponse'
      x-codegen-request-body-name: options

# Note: ___Exchange___ExchangeMailboxController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes:
    get:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeMailbox'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}:
    get:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeMailbox'
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/BulkRestore:
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_BulkRestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestBulkRestoreOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTBulkRestoreStatistics'
      x-codegen-request-body-name: jsonOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/RestoreToOriginalLocation:
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_RestoreToOriginalLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTFoldersRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/RestoreToDifferentLocation:
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_RestoreToDifferentLocationAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToDifferentLocation'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTFoldersRestoreStatistics'
      x-codegen-request-body-name: restoreOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/ExportMailboxToPst:
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_ExportMailboxToPstAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExportFolderToPst'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: exportOptions
  /v6/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/SearchItems:
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v7/RestoreSessions/{restoreSessionId}/organization/mailboxes/{mailboxId}/search:
    get:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: mailboxId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
      x-codegen-request-body-name: searchOptions
  /v7/RestoreSessions/{restoreSessionId}/organization/mailboxes/search:
    get:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
    post:
      tags:
        - ExchangeMailbox
      operationId: ExchangeMailbox_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          x-veeam-page-result: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTExchangeItemsComposed'
      x-codegen-request-body-name: searchOptions

# Note: ___Exchange___VexEmailSettingsController___ endpoints section start
  /v6/VexEmailSettings:
    get:
      tags:
        - VexEmailSettings
      operationId: VexEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSmtpSettings'
    put:
      tags:
        - VexEmailSettings
      operationId: VexEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestSmtpSettingsFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: smtpSettings
  /v6/VexEmailSettings/SendTest:
    post:
      tags:
        - VexEmailSettings
      operationId: VexEmailSettings_SendTestAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendTestOption'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: jsonOptions

# Note: ___SharePoint___OneDriveController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDrive'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDrive'
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/CopyToOneDrive:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_CopyToOneDriveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToFolder'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: copyToConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/SaveOneDrive:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SaveOneDriveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/SendOneDrive:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SendOneDriveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSendAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: jsonOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/RestoreToOriginal:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginal'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/RestoreToOriginal:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTBulkRestoreConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointBulkRestoreStatistics'
      x-codegen-request-body-name: config
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Search:
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/search:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrives
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrives
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/searchFolders:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrivesFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrivesFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/searchDocuments:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrivesDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrivesDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/search:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrive
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDrive
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/searchFolders:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDriveFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDriveFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/searchDocuments:
    get:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDriveDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
    post:
      tags:
        - OneDrive
      operationId: OneDrive_SearchOneDriveDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___OneDriveDocumentController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents:
    get:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}:
    get:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions:
    get:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_GetVersions
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions/{versionId}:
    get:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/RestoreToOriginalDocuments:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_RestoreToOriginalDocumentsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalDocuments'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/CopyToDocuments:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_CopyToDocumentsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestCopyToDocuments'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/SendDocuments:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SendDocumentsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendDocumentsAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/SaveDocuments:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SaveDocumentsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveDocumentsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveDocuments
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/RestoreToOriginal:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginal'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions/{versionId}/RestoreToOriginal:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginal'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/CopyToDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_CopyToDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToDocument'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: copyToConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions/{versionId}/CopyToDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_CopyToDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToDocument'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: copyToConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/SaveDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SaveDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveOneDriveDocumentOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions/{versionId}/SaveDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SaveDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveOneDriveDocumentOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/SendDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SendDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/{documentId}/Versions/{versionId}/SendDocument:
    post:
      tags:
        - OneDriveDocument
      operationId: OneDriveDocument_SendDocumentAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Documents/operatorRestore:
    post:
      tags:
        - OneDriveDocument
      operationId: operatorRestore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTOperatorRestoreToOriginalOneDriveDocuments'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOperatorRestoreSessionResponse'
      x-codegen-request-body-name: options

# Note: ___SharePoint___OneDriveFolderController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: parentId
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/RestoreToOriginalFolders:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_RestoreToOriginalFoldersAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginalFolders'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreToOriginal
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions/{versionId}:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/CopyToFolders:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_CopyToFoldersAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToFolders'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/SendFolders:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SendFoldersAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendFoldersAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_GetVersions
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/RestoreToOriginal:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginal'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions/{versionId}/RestoreToOriginal:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_RestoreToOriginalAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreToOriginal'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/SearchItems:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: arg
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/CopyToFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_CopyToFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToFolder'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: copyToConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions/{versionId}/CopyToFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_CopyToFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTCopyToFolder'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: copyToConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/SaveFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SaveFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions/{versionId}/SaveFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SaveFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/SendFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SendFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/Versions/{versionId}/SendFolder:
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SendFolderAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/search:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolder
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolder
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/searchFolders:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolderFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolderFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/OneDrives/{oneDriveId}/Folders/{folderId}/searchDocuments:
    get:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolderDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
    post:
      tags:
        - OneDriveFolder
      operationId: OneDriveFolder_SearchOneDriveFolderDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: oneDriveId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOneDriveDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___SharePointAttachmentController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments:
    get:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointAttachment'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments/{attachmentId}:
    get:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: attachmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointAttachment'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments/Save:
    post:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveAttachmentsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments/{attachmentId}/Save:
    post:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: attachmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments/Send:
    post:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAttachmentsAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendAsMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Attachments/{attachmentId}/Send:
    post:
      tags:
        - SharePointAttachment
      operationId: SharePointAttachment_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: attachmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendAsMsgOptions

# Note: ___SharePoint___SharePointDocumentController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents:
    get:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}:
    get:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Versions/{versionId}:
    get:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Versions:
    get:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_GetVersions
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/Restore:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreDocumentsConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Versions/{versionId}/Restore:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Restore:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/Save:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSaveDocumentsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Versions/{versionId}/Save:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveSharePointDocumentOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Save:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveSharePointDocumentOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/Send:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSendDocumentsAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Versions/{versionId}/Send:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/{documentId}/Send:
    post:
      tags:
        - SharePointDocument
      operationId: SharePointDocument_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Documents/operatorRestore:
    post:
      tags:
        - SharePointDocument
      operationId: operatorRestore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTOperatorRestoreSharePointDocumentsConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOperatorRestoreSessionResponse'
      x-codegen-request-body-name: config

# Note: ___SharePoint___SharePointFolderController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Versions/{versionId}:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Versions:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_GetVersions
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/Restore:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreFoldersConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Restore:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Versions/{versionId}/Restore:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/Save:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSaveFoldersOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: saveOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Save:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Versions/{versionId}/Save:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/Send:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSendFoldersAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Send:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendAsMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/Versions/{versionId}/Send:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendAsMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/SearchItems:
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: restSearchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/search:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolder
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolder
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/searchFolders:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolderFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolderFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Folders/{folderId}/searchItems:
    get:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolderItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointFolder
      operationId: SharePointFolder_SearchFolderItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: folderId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___SharePointItemController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items:
    get:
      tags:
        - SharePointItem
      operationId: SharePointItem_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}:
    get:
      tags:
        - SharePointItem
      operationId: SharePointItem_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Versions/{versionId}:
    get:
      tags:
        - SharePointItem
      operationId: SharePointItem_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Versions:
    get:
      tags:
        - SharePointItem
      operationId: SharePointItem_GetVersions
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/Restore:
    post:
      tags:
        - SharePointItem
      operationId: SharePointItem_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemsConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Restore:
    post:
      tags:
        - SharePointItem
      operationId: SharePointItem_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/{itemId}/Versions/{versionId}/Restore:
    post:
      tags:
        - SharePointItem
      operationId: SharePointItem_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
        - name: versionId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreItemConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Items/operatorRestore:
    post:
      tags:
        - SharePointItem
      operationId: operatorRestore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTOperatorRestoreSharePointItemsConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTOperatorRestoreSessionResponse'
      x-codegen-request-body-name: config

# Note: ___SharePoint___SharePointLibraryController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries:
    get:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointLibrary'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}:
    get:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointLibrary'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/Restore:
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreListConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTListRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/Save:
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SaveAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/Send:
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SendAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptionsV6'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: sendAsMsgOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/SearchItems:
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/search:
    get:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibrary
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibrary
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/searchFolders:
    get:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibraryFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibraryFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Libraries/{libraryId}/searchDocuments:
    get:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibraryDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointLibrary
      operationId: SharePointLibrary_SearchLibraryDocuments
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: libraryId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointDocument'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___SharePointListController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists:
    get:
      tags:
        - SharePointList
      operationId: SharePointList_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointList'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}:
    get:
      tags:
        - SharePointList
      operationId: SharePointList_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointList'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}/Restore:
    post:
      tags:
        - SharePointList
      operationId: SharePointList_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreListConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTListRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}/SearchItems:
    post:
      tags:
        - SharePointList
      operationId: SharePointList_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}/search:
    get:
      tags:
        - SharePointList
      operationId: SharePointList_SearchList
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointList
      operationId: SharePointList_SearchList
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}/searchFolders:
    get:
      tags:
        - SharePointList
      operationId: SharePointList_SearchListFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointList
      operationId: SharePointList_SearchListFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Lists/{listId}/searchItems:
    get:
      tags:
        - SharePointList
      operationId: SharePointList_SearchListItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointList
      operationId: SharePointList_SearchListItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: listId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___SharePointSiteController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: parentId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointSite'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointSite'
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/Restore:
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_RestoreAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreSiteConfig'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTWebRestoreStatistics'
      x-codegen-request-body-name: restRestoreConfig
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/SearchItems:
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchItemsAction
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItem'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/search:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSites
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSites
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/searchFolders:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSitesFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSitesFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/searchItems:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSitesItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSitesItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/search:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSite
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSite
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/searchFolders:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSiteFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSiteFolders
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointFolder'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions
  /v6/RestoreSessions/{restoreSessionId}/Organization/Sites/{siteId}/searchItems:
    get:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSiteItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: query
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
    post:
      tags:
        - SharePointSite
      operationId: SharePointSite_SearchSiteItems
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: siteId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
        - name: setId
          in: query
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTVESPSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointItemComposed'
          x-veeam-page-result: true
      x-codegen-request-body-name: searchOptions

# Note: ___SharePoint___VeodEmailSettingsController___ endpoints section start
  /v6/VeodEmailSettings:
    get:
      tags:
        - VeodEmailSettings
      operationId: VeodEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointSmtpSettings'
    put:
      tags:
        - VeodEmailSettings
      operationId: VeodEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSmtpSettingsFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: smtpSettings
  /v6/VeodEmailSettings/SendTestEmail:
    post:
      tags:
        - VeodEmailSettings
      operationId: VeodEmailSettings_SendTestEmailAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendTestOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options

# Note: ___SharePoint___VespEmailSettingsController___ endpoints section start
  /v6/VespEmailSettings:
    get:
      tags:
        - VespEmailSettings
      operationId: VespEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSharePointSmtpSettings'
    put:
      tags:
        - VespEmailSettings
      operationId: VespEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSharePointSmtpSettingsFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: smtpSettings
  /v6/VespEmailSettings/SendTestEmail:
    post:
      tags:
        - VespEmailSettings
      operationId: VespEmailSettings_SendTestEmailAction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendTestOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: options

# Note: ___Teams___TeamsChannelController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels:
    get:
      tags:
        - TeamsChannel
      operationId: TeamsChannel_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: displayName
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsChannel'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}:
    get:
      tags:
        - TeamsChannel
      operationId: TeamsChannel_GetByChannelId
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsChannel'
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/search:
    post:
      tags:
        - TeamsChannel
      operationId: TeamsChannel_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTTeamsSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTChannelEntity'
          x-veeam-page-result: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/restore:
    post:
      tags:
        - TeamsChannel
      operationId: TeamsChannel_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreChannelOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action

# Note: ___Teams___TeamsFileController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files:
    get:
      tags:
        - TeamsFile
      operationId: TeamsFile_GetPage
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: query
          schema:
            type: string
        - name: parentId
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsFile'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/{fileId}:
    get:
      tags:
        - TeamsFile
      operationId: TeamsFile_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsFile'
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/search:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsFile'
          x-veeam-page-result: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/save:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Save
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTFilesSaveOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/{fileId}/save:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Save
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTFileSaveOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/send:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Send
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTFilesSendOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/{fileId}/send:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Send
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/restore:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreFilesOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/files/{fileId}/restore:
    post:
      tags:
        - TeamsFile
      operationId: TeamsFile_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: fileId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreFileOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action

# Note: ___Teams___TeamsPostController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts:
    get:
      tags:
        - TeamsPost
      operationId: TeamsPost_GetPage
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: query
          schema:
            type: string
        - name: parentId
          in: query
          schema:
            type: integer
            format: int64
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsPost'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/{postId}:
    get:
      tags:
        - TeamsPost
      operationId: TeamsPost_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: channelId
          in: query
          schema:
            type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsPost'
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/search:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsPost'
          x-veeam-page-result: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/save:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Save
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSavePostsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/{postId}/save:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Save
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/send:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Send
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendPostsOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/{postId}/send:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Send
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendAsMsgOptions'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/export:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Export
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTExportOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/{postId}/export:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Export
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: postId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: object
          x-custom-response: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/posts/restore:
    post:
      tags:
        - TeamsPost
      operationId: TeamsPost_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestorePostsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action

# Note: ___Teams___TeamsTabController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/tabs:
    get:
      tags:
        - TeamsTab
      operationId: TeamsTab_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestTeamsTab'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/tabs/{tabId}:
    get:
      tags:
        - TeamsTab
      operationId: TeamsTab_GetTab
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: tabId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestTeamsTab'
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/tabs/search:
    post:
      tags:
        - TeamsTab
      operationId: TeamsTab_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestTeamsTab'
          x-veeam-page-result: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/tabs/restore:
    post:
      tags:
        - TeamsTab
      operationId: TeamsTab_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreTabsOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/channels/{channelId}/tabs/{tabId}/restore:
    post:
      tags:
        - TeamsTab
      operationId: TeamsTab_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: channelId
          in: path
          required: true
          schema:
            type: string
        - name: tabId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreTabOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action

# Note: ___Teams___TeamsTeamController___ endpoints section start
  /v6/RestoreSessions/{restoreSessionId}/organization/teams:
    get:
      tags:
        - TeamsTeam
      operationId: TeamsTeam_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: displayName
          in: query
          schema:
            type: string
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsTeam'
          x-veeam-page-result: true
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}:
    get:
      tags:
        - TeamsTeam
      operationId: TeamsTeam_Get
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTTeamsTeam'
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/restore:
    post:
      tags:
        - TeamsTeam
      operationId: TeamsTeam_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreTeamOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/search:
    post:
      tags:
        - TeamsTeam
      operationId: TeamsTeam_Search
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: offset
          in: query
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTTeamsSearchOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTChannelEntity'
          x-veeam-page-result: true
      x-codegen-request-body-name: action
  /v6/RestoreSessions/{restoreSessionId}/organization/teams/{teamId}/restore:
    post:
      tags:
        - TeamsTeam
      operationId: TeamsTeam_Restore
      parameters:
        - name: restoreSessionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: teamId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTRestoreTeamOptions'
        required: true
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTRestoreStatistics'
      x-codegen-request-body-name: action

# Note: ___Teams___VetEmailSettingsController___ endpoints section start
  /v6/VetEmailSettings:
    get:
      tags:
        - VetEmailSettings
      operationId: VetEmailSettings_Get
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RESTSmtpSettings'
    put:
      tags:
        - VetEmailSettings
      operationId: VetEmailSettings_Update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTTeamsSmtpSettingsFromClient'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: smtpSettings
  /v6/VetEmailSettings/sendTest:
    post:
      tags:
        - VetEmailSettings
      operationId: VetEmailSettings_SendTest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RESTSendTestOption'
        required: true
      responses:
        200:
          description: OK
          content: {}
      x-codegen-request-body-name: action

components:
  schemas:
# Note: ___Auth___ models section start
    OAuthTokenResponse:
      required:
        - .expires
        - .issued
        - access_token
        - expires_in
        - refresh_token
        - token_type
        - userName
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
        expires_in:
          type: integer
          format: int64
        userName:
          type: string
        .issued:
          type: string
          format: date-time
        .expires:
          type: string
          format: date-time

# Note: ___Archiver___AmazonS3CompatibleObjectStorageController___ models section start
    RESTAmazonBucketS3Compatible:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonBucketS3Compatible"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        servicePoint:
          type: string
        customRegionId:
          type: string
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTAmazonFolderToReceiveS3Compatible:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonFolderToReceiveS3Compatible"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTAmazonFolderToSend:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonFolderToSend"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___AmazonS3ObjectStorageController___ models section start
    RESTAmazonBucketS3Aws:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonBucketS3Aws"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        regionType:
          $ref: '#/components/schemas/AmazonS3AwsRegionType'
        regionName:
          type: string
        regionId:
          type: string
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTAmazonFolderToReceiveS3Aws:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonFolderToReceiveS3Aws"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        path:
          type: string
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    AmazonS3AwsRegionType:
      type: string
      enum:
        - Global
        - USGovernment
        - China

# Note: ___Archiver___AccountController___ models section start
    RESTCredential:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTCredential"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        accountType:
          type: string
          nullable: true
          enum:
            - azureBlobAccount
            - amazonS3Account
            - amazonS3CompatibleAccount
        userName:
          type: string
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        description:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTCredentialToSend:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTCredentialToSend"
        map: true
      type: object
      properties:
        accountType:
          type: string
          nullable: true
          enum:
            - azureBlobAccount
            - amazonS3Account
            - amazonS3CompatibleAccount
        userName:
          type: string
        password:
          $ref: '#/components/schemas/SecureString'
        newPassword:
          $ref: '#/components/schemas/SecureString'
        oldPassword:
          $ref: '#/components/schemas/SecureString'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        description:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___ApplicationController___ models section start
    RESTApplication:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTApplication"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        applicationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        tags:
          type: array
          items:
            type: string
    RESTApplicationFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTApplicationFromClient"
        map: true
        mapAll: true
      type: object
      properties:
        displayName:
          type: string
        userCode:
          type: string
        count:
          type: integer
          format: int32
          nullable: true
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string

# Note: ___Archiver___AuditEmailSettingsController___ models section start
    RESTAuditEmailSettingsResponse:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.NotificationEmailSettings.RESTAuditEmailSettingsResponse"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        enableNotification:
          type: boolean
          nullable: true
        smtpServer:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
        useSSL:
          type: boolean
          nullable: true
        from:
          type: string
        to:
          type: string
        subject:
          type: string
    RESTAuditEmailSettingsRequest:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.NotificationEmailSettings.RESTAuditEmailSettingsRequest"
        map: true
        mapAll: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        enableNotification:
          type: boolean
          nullable: true
        smtpServer:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
        useSSL:
          type: boolean
          nullable: true
        from:
          type: string
        to:
          type: string
        subject:
          type: string

# Note: ___Archiver___AzureObjectStorageController___ models section start
    RESTAzureContainer:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAzureContainer"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
        regionType:
          $ref: '#/components/schemas/AzureStorageEndpoint'
          nullable: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTAzureFolderToReceive:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAzureFolderToReceive"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        path:
          type: string
          readOnly: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        name:
          type: string
    RESTAzureFolderToSend:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAzureFolderToSend"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
        links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    AzureStorageEndpoint:
      type: string
      enum:
        - Global
        - Germany
        - China
        - Government

# Note: ___Archiver___BackupGroupDataController___ models section start
    RESTBackupGroupData:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupGroupData"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        isMailboxBackedUp:
          type: boolean
        isSiteBackedUp:
          type: boolean
        mailboxBackedUpTime:
          type: string
          nullable: true
          format: date-time
        siteBackedUpTime:
          type: string
          nullable: true
          format: date-time
        id:
          type: string
        accountId:
          type: string
        displayName:
          type: string
        email:
          type: string
        oneDriveUrl:
          type: array
          items:
            type: string
        personalSiteUrl:
          type: array
          items:
            type: string
        organizationId:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupOrganizationController___ models section start
    RESTBackupOrganization:
      x-veeam-mapping:
        appType: "Veeam.REST.Representation.RESTBackupOrganization"
        unMap: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        type:
          $ref: '#/components/schemas/RestOrganizationType'
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupOrganizationDataController___ models section start
    RESTBackupOrganizationData:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupOrganizationData"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        displayName:
          type: string
        organizationId:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupSiteDataController___ models section start
    RESTBackupSiteData:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupSiteData"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        url:
          type: string
        backedUpTime:
          type: string
          nullable: true
          format: date-time
        organizationId:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupTeamDataController___ models section start
    RESTBackupTeamData:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupTeamData"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        backedUpTime:
          type: string
          nullable: true
          format: date-time
        organizationId:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupUserDataController___ models section start
    RESTBackupUserData:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupUserData"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        mailboxBackedUpTime:
          type: string
          nullable: true
          format: date-time
        archiveBackedUpTime:
          type: string
          nullable: true
          format: date-time
        oneDriveBackedUpTime:
          type: string
          nullable: true
          format: date-time
        personalSiteBackedUpTime:
          type: string
          nullable: true
          format: date-time
        isMailboxBackedUp:
          type: boolean
        isOneDriveBackedUp:
          type: boolean
        isArchiveBackedUp:
          type: boolean
        isPersonalSiteBackedUp:
          type: boolean
        accountType:
          type: string
          enum:
            - User
            - SharedMailbox
            - PublicMailbox
        archiveName:
          type: string
        id:
          type: string
        accountId:
          type: string
        displayName:
          type: string
        email:
          type: string
        oneDriveUrl:
          type: array
          items:
            type: string
        personalSiteUrl:
          type: array
          items:
            type: string
        organizationId:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___BackupRepositoryController___ models section start
    RESTBackupRepository:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupRepositoryV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        objectStorageId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        objectStorageCachePath:
          type: string
        objectStorageEncryptionEnabled:
          type: boolean
          nullable: true
        encryptionKeyId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isOutOfSync:
          type: boolean
        capacityBytes:
          type: integer
          nullable: true
          format: int64
        freeSpaceBytes:
          type: integer
          nullable: true
          format: int64
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        description:
          type: string
        path:
          type: string
        retentionType:
          type: string
          nullable: true
          enum:
            - ItemLevel
            - SnapshotBased
        retentionPeriodType:
          type: string
          nullable: true
          enum:
            - Monthly
            - Daily
            - Yearly
        dailyRetentionPeriod:
          type: integer
          nullable: true
          format: int32
        monthlyRetentionPeriod:
          type: integer
          nullable: true
          format: int32
        yearlyRetentionPeriod:
          type: string
          nullable: true
          enum:
            - Year1
            - Years2
            - Years3
            - Years5
            - Years7
            - Years10
            - Years25
            - Keep
        retentionFrequencyType:
          type: string
          nullable: true
          enum:
            - Daily
            - Monthly
        dailyTime:
          type: string
        dailyType:
          type: string
          nullable: true
          enum:
            - Everyday
            - Workdays
            - Weekends
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
        monthlyTime:
          type: string
        monthlyDaynumber:
          type: string
          nullable: true
          enum:
            - First
            - Second
            - Third
            - Fourth
            - Last
        monthlyDayofweek:
          type: string
          nullable: true
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
        proxyId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isLongTerm:
          type: boolean
          nullable: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTBackupRepositoryFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupRepositoryFromClientV4"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        objectStorageId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        objectStorageCachePath:
          type: string
        objectStorageEncryptionEnabled:
          type: boolean
          nullable: true
        encryptionKeyId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        description:
          type: string
        path:
          type: string
        retentionPeriodType:
          type: string
          nullable: true
          enum:
            - Monthly
            - Daily
            - Yearly
        dailyRetentionPeriod:
          type: integer
          nullable: true
          format: int32
        monthlyRetentionPeriod:
          type: integer
          nullable: true
          format: int32
        yearlyRetentionPeriod:
          type: string
          nullable: true
          enum:
            - Year1
            - Years2
            - Years3
            - Years5
            - Years7
            - Years10
            - Years25
            - Keep
        retentionFrequencyType:
          type: string
          nullable: true
          enum:
            - Daily
            - Monthly
        retentionType:
          type: string
          nullable: true
          enum:
            - ItemLevel
            - SnapshotBased
        dailyTime:
          type: string
        dailyType:
          type: string
          nullable: true
          enum:
            - Everyday
            - Workdays
            - Weekends
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
        monthlyTime:
          type: string
        monthlyDaynumber:
          type: string
          nullable: true
          enum:
            - First
            - Second
            - Third
            - Fourth
            - Last
        monthlyDayofweek:
          type: string
          nullable: true
          enum:
            - Sunday
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
        proxyId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        attachUsedRepository:
          type: boolean
          nullable: true
    RESTBackupRepositoryStorageUsageInfo:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupRepositoryStorageUsageInfo"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
          readOnly: true
        id:
          type: string
          readOnly: true
        usedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        localCacheUsedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        objectStorageUsedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true

# Note: ___Archiver___DataRetrievalController___ models section start
    RESTAmazonS3DataRetrieval:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAmazonS3DataRetrieval"
        unMap: true
        unMapAll: true
      type: object
      properties:
        storageType:
          $ref: '#/components/schemas/RESTDataRetrievalStorageType'
        amazonS3GlacierRetrievalPolicy:
          $ref: '#/components/schemas/RESTAmazonS3GlacierRetrievalPolicy'
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        frozenRestorePointId:
          type: string
        retrievedRestorePointId:
          type: string
        organizationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        proxyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        repositoryId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        status:
          $ref: '#/components/schemas/RESTDataRetrievalStatus'
        startTime:
          type: string
          format: date-time
        expirationTime:
          type: string
          format: date-time
        enableExpirationNotification:
          type: boolean
        expirationHoursThreshold:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/RESTDataRetrievalType'
        showDeleted:
          type: boolean
        showAllVersions:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTAzureDataRetrieval:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTAzureDataRetrieval"
        unMap: true
        unMapAll: true
      type: object
      properties:
        storageType:
          $ref: '#/components/schemas/RESTDataRetrievalStorageType'
        azureArchiveRetrievalPolicy:
          $ref: '#/components/schemas/RESTAzureArchiveRetrievalPolicy'
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        frozenRestorePointId:
          type: string
        retrievedRestorePointId:
          type: string
        organizationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        proxyId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        repositoryId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        status:
          $ref: '#/components/schemas/RESTDataRetrievalStatus'
        startTime:
          type: string
          format: date-time
        expirationTime:
          type: string
          format: date-time
        enableExpirationNotification:
          type: boolean
        expirationHoursThreshold:
          type: integer
          format: int32
        type:
          $ref: '#/components/schemas/RESTDataRetrievalType'
        showDeleted:
          type: boolean
        showAllVersions:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTDataRetrievalStorageType:
      type: string
      enum:
        - AzureArchive
        - AmazonS3Glacier
    RESTDataRetrievalStatus:
      type: string
      enum:
        - Retrieving
        - Retrieved
        - Removing
        - Removed
    RESTDataRetrievalType:
      type: string
      enum:
        - Exchange
        - OneDrive
        - SharePoint
        - Teams
    RESTAmazonS3GlacierRetrievalPolicy:
      type: string
      enum:
        - Expedited
        - Standard
        - Bulk
    RESTAzureArchiveRetrievalPolicy:
      type: string
      enum:
        - StandardPriority
        - HighPriority
    RESTDataRetrievalComposed:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTDataRetrieval"
        unMap: true
        unMapAll: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTAmazonS3DataRetrieval'
        - $ref: '#/components/schemas/RESTAzureDataRetrieval'
    RESTDataRetrievalFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTDataRetrievalFromClient"
        map: true
      type: object
      properties:
        restorePointId:
          type: string
        showDeleted:
          type: boolean
          nullable: true
        showAllVersions:
          type: boolean
          nullable: true
        availabilityPeriodDays:
          type: integer
          nullable: true
          format: int32
        enableExpirationNotification:
          type: boolean
          nullable: true
        expirationHoursThreshold:
          type: integer
          nullable: true
          format: int32
        type:
          type: string
          nullable: true
          enum:
            - Exchange
            - OneDrive
            - SharePoint
            - Teams
        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestorePointMailbox'
        oneDrives:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestorePointOneDrive'
        sites:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestorePointSite'
        teams:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestorePointTeam'
        amazonS3GlacierRetrievalPolicy:
          type: string
          nullable: true
          enum:
            - Expedited
            - Standard
            - Bulk
        azureArchiveRetrievalPolicy:
          type: string
          nullable: true
          enum:
            - StandardPriority
            - HighPriority
    RESTRestorePointMailbox:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestorePointMailbox"
        map: true
      type: object
      properties:
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        email:
          type: string
        isArchive:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestorePointOneDrive:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestorePointOneDrive"
        map: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestorePointSite:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestorePointSite"
        map: true
      type: object
      properties:
        siteId:
          type: string
        name:
          type: string
        url:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestorePointTeam:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestorePointTeam"
        map: true
      type: object
      properties:
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        email:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true

# Note: ___Archiver___EncryptionKeyController___ models section start
    RESTEncryptionKey:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTEncryptionKey"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        description:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTEncryptionKeyToSend:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTEncryptionKeyToSend"
        map: true
        mapAll: true
      type: object
      properties:
        password:
          $ref: '#/components/schemas/SecureString'
        newPassword:
          $ref: '#/components/schemas/SecureString'
        oldPassword:
          $ref: '#/components/schemas/SecureString'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        description:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___ExclusionSettingsController___ models section start
    RESTExclusionSettingsToClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTExclusionSettingsToClient"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        deletedItems:
          type: boolean
          nullable: true
        drafts:
          type: boolean
          nullable: true
        junkEmail:
          type: boolean
          nullable: true
        outbox:
          type: boolean
          nullable: true
        syncIssues:
          type: boolean
          nullable: true
        litigationHold:
          type: boolean
          nullable: true
        inPlaceHold:
          type: boolean
          nullable: true
    RESTExclusionSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTExclusionSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        deletedItems:
          type: boolean
          nullable: true
        drafts:
          type: boolean
          nullable: true
        junkEmail:
          type: boolean
          nullable: true
        outbox:
          type: boolean
          nullable: true
        syncIssues:
          type: boolean
          nullable: true
        litigationHold:
          type: boolean
          nullable: true
        inPlaceHold:
          type: boolean
          nullable: true

# Note: ___Archiver___GlobalRetentionExclusionController___ models section start
    RESTRetentionExclusion:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRetentionExclusion"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        contacts:
          type: boolean
        calendar:
          type: boolean

# Note: ___Archiver___HistorySettingsController___ models section start
    RESTHistorySettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTHistorySettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        keepAllsessions:
          type: boolean
          nullable: true
        keeponlyLast:
          type: integer
          nullable: true
          format: int32
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true

# Note: ___Archiver___InternetProxySettingsController___ models section start
    RESTInternetProxy:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTInternetProxy"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        useInternetProxy:
          type: boolean
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        hostName:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
    RESTInternetProxyFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTInternetProxyFromClient"
        map: true
        mapAll: true
      type: object
      properties:
        useInternetProxy:
          type: boolean
          nullable: true
        userPassword:
          $ref: '#/components/schemas/SecureString'
        hostName:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string

# Note: ___Archiver___JobController___ models section start
    RESTJobGroupItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobGroupItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        group:
          $ref: '#/components/schemas/RESTGroup'
        members:
          type: boolean
          nullable: true
        memberMailbox:
          type: boolean
          nullable: true
        memberArchiveMailbox:
          type: boolean
          nullable: true
        memberOnedrive:
          type: boolean
          nullable: true
        memberSite:
          type: boolean
          nullable: true
        mailbox:
          type: boolean
          nullable: true
        personalSite: # Note: renamed from 'site'
          type: boolean
          nullable: true
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobOneDriveFoldersItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobOneDriveFoldersItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        folders:
          type: array
          items:
            type: string
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobOrganizationItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobOrganizationItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        mailbox:
          type: boolean
          nullable: true
        oneDrive:
          type: boolean
          nullable: true
        archiveMailbox:
          type: boolean
          nullable: true
        personalSite: # Note: renamed from 'site'
          type: boolean
          nullable: true
        teams:
          type: boolean
          nullable: true
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobPersonalSitesItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobPersonalSitesItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobSiteItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobSiteItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        site:
          $ref: '#/components/schemas/RESTSite'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobTeamItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobTeamItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        team:
          $ref: '#/components/schemas/RESTTeam'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobUserItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobUserItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTJobBackupItemType'
        user:
          $ref: '#/components/schemas/RESTUser'
        mailbox:
          type: boolean
          nullable: true
        oneDrive:
          type: boolean
          nullable: true
        archiveMailbox:
          type: boolean
          nullable: true
        personalSite: # Note: renamed from 'site'
          type: boolean
          nullable: true
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobBackupItemType:
      type: string
      enum:
        - Group
        - User
        - Site
        - PartialOrganization
        - PersonalSites
        - OneDriveFolders
        - Team
    RESTJobItemComposed:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.JobItems.RESTJobItemBase"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTJobOneDriveFoldersItem'
        - $ref: '#/components/schemas/RESTJobOrganizationItem'
        - $ref: '#/components/schemas/RESTJobPersonalSitesItem'
        - $ref: '#/components/schemas/RESTJobSiteItem'
        - $ref: '#/components/schemas/RESTJobTeamItem'
        - $ref: '#/components/schemas/RESTJobUserItem'
        - $ref: '#/components/schemas/RESTJobGroupItem'
    RESTJob:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.RESTJob"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        description:
          type: string
        backupType:
          type: string
          nullable: true
          enum:
            - EntireOrganization
            - SelectedItems
        runNow:
          type: boolean
          nullable: true
        selectedItems:
          type: array
          items:
            $ref: '#/components/schemas/RESTJobItemComposed'
        excludedItems:
          type: array
          items:
            $ref: '#/components/schemas/RESTJobItemComposed'
        schedulePolicy:
          $ref: '#/components/schemas/RESTJobSchedulePolicy'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        repositoryId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        lastRun:
          type: string
          nullable: true
          format: date-time
        nextRun:
          type: string
          nullable: true
          format: date-time
        isEnabled:
          type: boolean
          nullable: true
        lastStatus:
          type: string
          nullable: true
          enum:
            - Stopped
            - Running
            - Success
            - Failed
            - Warning
            - NotConfigured
            - Disconnected
            - Queued
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTJobSchedulePolicy:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTJobSchedulePolicy"
        map: true
        unMap: true
      type: object
      properties:
        scheduleEnabled:
          type: boolean
          nullable: true
        backupWindowEnabled:
          type: boolean
          nullable: true
        backupWindowSettings:
          $ref: '#/components/schemas/RESTBackupWindowSettings'
        periodicallyWindowSettings:
          $ref: '#/components/schemas/RESTBackupWindowSettings'
        periodicallyOffsetMinutes:
          type: integer
          nullable: true
          format: int32
        type:
          type: string
          nullable: true
          enum:
            - Periodically
            - Daily
            - ManualOnly
        periodicallyEvery:
          type: string
          nullable: true
          enum:
            - Minutes5
            - Minutes10
            - Minutes15
            - Minutes30
            - Hours1
            - Hours2
            - Hours4
            - Hours8
        dailyType:
          type: string
          nullable: true
          enum:
            - Everyday
            - Workdays
            - Weekends
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
        dailyTime:
          type: string
        retryEnabled:
          type: boolean
          nullable: true
        retryNumber:
          type: integer
          nullable: true
          format: int32
        retryWaitInterval:
          type: integer
          nullable: true
          format: int32
    RESTBackupWindowSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTBackupWindowSettings"
        map: true
        unMap: true
      type: object
      properties:
        backupWindow:
          type: array
          items:
            type: boolean
        minuteOffset:
          type: integer
          nullable: true
          format: int32
    RESTCopyJob:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.RESTCopyJob"
        map: true
        unMap: true
        unMapAll: true
      type: object
      properties:
        backupJobId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        schedulePolicy:
          $ref: '#/components/schemas/RESTCopyJobSchedulePolicy'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        repositoryId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        lastRun:
          type: string
          nullable: true
          format: date-time
        nextRun:
          type: string
          nullable: true
          format: date-time
        isEnabled:
          type: boolean
          nullable: true
        lastStatus:
          type: string
          nullable: true
          enum:
            - Stopped
            - Running
            - Success
            - Failed
            - Warning
            - NotConfigured
            - Disconnected
            - Queued
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTCopyJobSchedulePolicy:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Job.RESTCopyJobSchedulePolicy"
        map: true
        unMap: true
      type: object
      properties:
        type:
          type: string
          nullable: true
          enum:
            - Immediate
            - Periodically
            - DailyAtTime
        periodicallyEvery:
          type: string
          nullable: true
          enum:
            - Minutes5
            - Minutes10
            - Minutes15
            - Minutes30
            - Hours1
            - Hours2
            - Hours4
            - Hours8
        dailyType:
          type: string
          nullable: true
          enum:
            - Everyday
            - Workdays
            - Weekends
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
        dailyTime:
          type: string
        backupCopyWindowEnabled:
          type: boolean
          nullable: true
        backupCopyWindowSettings:
          $ref: '#/components/schemas/RESTBackupWindowSettings'
    RESTStartJobOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTStartJobOptions"
        map: true
      type: object
      properties:
        full:
          type: boolean
          nullable: true

# Note: ___Archiver___JobSessionController___ models section start
    RESTJobSession:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTJobSession"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        creationTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        progress:
          type: integer
          format: int32
        status:
          type: string
          enum:
            - Stopped
            - Running
            - Success
            - Failed
            - Warning
            - NotConfigured
            - Disconnected
            - Queued
        statistics:
          $ref: '#/components/schemas/RESTJobStatistics'
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTJobStatistics:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTJobStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        processingRateBytesPS:
          type: integer
          format: int64
        processingRateItemsPS:
          type: integer
          format: int64
        readRateBytesPS:
          type: integer
          format: int64
        writeRateBytesPS:
          type: integer
          format: int64
        transferredDataBytes:
          type: integer
          format: int64
        processedObjects:
          type: integer
          format: int64
        bottleneck:
          type: string
          enum:
            - NA
            - Detecting
            - Source
            - Target
    RESTJobSessionType:
      type: string
      enum:
        - Backup
        - Copy

# Note: ___Archiver___JobSessionLogController___ models section start
    RESTLogItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTLogItem"
        unMap: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        usn:
          type: integer
          format: int64
        title:
          type: string
        creationTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___LicenseController___ models section start
    RESTLicense:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTLicense"
        unMap: true
        unMapAll: true
      type: object
      properties:
        licenseID:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        email:
          type: string
        status:
          type: string
          enum:
            - Valid
            - Expired
          x-ms-enum:
            name: RESTLicenseStatus
        expirationDate:
          type: string
          nullable: true
          format: date-time
        type:
          type: string
          enum:
            - Subscription
            - Evaluation
            - NFR
            - Rental
            - Community
            - AwsPrivateOffer
          x-ms-enum:
            name: RESTLicenseType
        licensedTo:
          type: string
        contactPerson:
          type: string
        totalNumber:
          type: integer
          format: int32
        usedNumber:
          type: integer
          format: int32
        supportID:
          type: string
        supportExpirationDate:
          type: string
          nullable: true
          format: date-time
    RESTInstallLicenseOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Actions.RESTInstallLicenseOptions"
        map: true
        unMap: true
      type: object
      properties:
        licenseFile:
          type: string
    RESTLicenseAutoUpdate:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTLicenseAutoUpdate"
        map: true
        unMap: true
      type: object
      properties:
        isEnabled:
          type: boolean
          nullable: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true

# Note: ___Archiver___LicenseReportController___ models section start
    RESTMonthlyReport:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Reports.RESTMonthlyReport"
        unMap: true
      type: object
      properties:
        reportParameters:
          $ref: '#/components/schemas/RESTReportParameters'
        reportSummary:
          $ref: '#/components/schemas/RESTReportSummary'
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/RESTReportOrganization'
    RESTReportParameters:
      type: object
      properties:
        reportID:
          type: integer
          format: int32
        reportStatus:
          type: string
          enum:
            - Approved
            - Draft
        companyName:
          type: string
        licenseExpirationDate:
          type: string
          format: date-time
        licenseID:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        supportID:
          type: string
        reportGenerationDate:
          type: string
          format: date-time
        reportingInterval:
          $ref: '#/components/schemas/RESTMonthlyReportInterval'
    RESTReportSummary:
      type: object
      properties:
        initialUsersCount:
          type: integer
          format: int32
        reportedUsersCount:
          type: integer
          format: int32
        newUsersCount:
          type: integer
          format: int32
    RESTReportOrganization:
      type: object
      properties:
        organizationId:
          type: string
        organizationName:
          type: string
        removedUsersCount:
          type: integer
          format: int32
        removalReason:
          type: string
        reportedUsersCount:
          type: integer
          format: int32
        newUsersCount:
          type: integer
          format: int32
        initialUsersCount:
          type: integer
          format: int32
    RESTMonthlyReportInterval:
      type: object
      properties:
        startOfInterval:
          type: string
          format: date-time
        endOfInterval:
          type: string
          format: date-time
    RESTApproveReportOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Reports.RESTApproveReportOptions"
        map: true
      type: object
      properties:
        removedUsers:
          type: array
          items:
            $ref: '#/components/schemas/RESTOrganizationRemovedUsers'
    RESTOrganizationRemovedUsers:
      type: object
      properties:
        organizationId:
          type: string
        removedUsersCount:
          type: integer
          format: int32
        removalReason:
          type: string

# Note: ___Archiver___LicensedUserController___ models section start
    RESTLicensedUser:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTLicensedUser"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isBackedUp:
          type: boolean
        lastBackupDate:
          type: string
          format: date-time
        licenseState:
          type: string
          enum:
            - Licensed
            - Trial
            - TemporarilyAssigned
            - Exceeded
        organizationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        backedUpOrganizationId:
          type: string
        organizationName:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___ManagementModeController___ models section start
    RESTManagementMode:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTManagementMode"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        isManaged:
          type: boolean
          nullable: true
        managerId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        companyName:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true

# Note: ___Archiver___ObjectStorageRepositoryController___ models section start
    RESTObjectStorageRepository:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTObjectStorageRepository"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        description:
          type: string
        accountId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        sizeLimitEnabled:
          type: boolean
          nullable: true
        sizeLimitGB:
          type: integer
          nullable: true
          format: int64
        usedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        freeSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        type:
          type: string
          nullable: true
          enum:
            - AzureBlob
            - AmazonS3
            - AmazonS3Compatible
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationAuditController___ models section start
    RESTAuditUserOrGroup:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Audit.RESTAuditBase"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
        type:
          type: string
          enum:
            - User
            - Group
        group:
          $ref: '#/components/schemas/RESTGroup'
        user:
          $ref: '#/components/schemas/RESTUser'
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTRemoveAuditItemsOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Audit.RESTRemoveAuditItemsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        itemIds:
          type: array
          items:
            type: string

# Note: ___Archiver___OrganizationBackupAccountsController___ models section start
    RESTBackupAccount:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTBackupAccount"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        groupMember:
          $ref: '#/components/schemas/RESTGroupMember'
        password:
          $ref: '#/components/schemas/SecureString'
    RESTAccountPool:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTAccountPool"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationBackupApplicationsController___ models section start
    RESTBackupApplication:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTBackupApplication"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        applicationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        certificateThumbprint:
          type: string
    RESTBackupApplicationFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTBackupApplicationFromClient"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        application:
          $ref: '#/components/schemas/RESTApplication'
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string

# Note: ___Archiver___OrganizationController___ models section start
    RestOffice365Organization:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RestOffice365Organization"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        isTeamsOnline:
          type: boolean
          nullable: true
        configureApplication:
          type: boolean
          nullable: true
        userCode:
          type: string
        newApplicationName:
          type: string
        exchangeOnlineSettings:
          $ref: '#/components/schemas/RESTOffice365ConnectionSettings'
        sharePointOnlineSettings:
          $ref: '#/components/schemas/RESTOffice365ConnectionSettings'
        isExchangeOnline:
          type: boolean
          nullable: true
        isSharePointOnline:
          type: boolean
          nullable: true
        type:
          $ref: '#/components/schemas/RestOrganizationType'
        region:
          $ref: '#/components/schemas/RestOrganizationRegion'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        officeName:
          type: string
        isBackedup:
          type: boolean
          nullable: true
        firstBackuptime:
          type: string
          nullable: true
          format: date-time
        lastBackuptime:
          type: string
          nullable: true
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTOffice365ConnectionSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.Settings.RESTOffice365ConnectionSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      x-veeam-map-to: Veeam.Archiver.Rest.RESTOffice365ConnectionSettings oneway
      type: object
      properties:
        useApplicationOnlyAuth:
          type: boolean
          nullable: true
        officeOrganizationName:
          type: string
        sharePointSaveAllWebParts:
          type: boolean
          nullable: true
        account:
          type: string
        password:
          $ref: '#/components/schemas/SecureString'
        grantAdminAccess:
          type: boolean
          nullable: true
        useMfa:
          type: boolean
          nullable: true
        useCustomVeeamAADApplication:
          type: boolean
          nullable: true
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationSecret:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificateThumbprint:
          type: string
    RestOnPremisesOrganization:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RestOnPremisesOrganization"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RestOrganizationType'
        isSharepoint:
          type: boolean
          nullable: true
        sharepointSettings:
          $ref: '#/components/schemas/RESTSharepointSettings'
        isExchange:
          type: boolean
          nullable: true
        exchangeSettings:
          $ref: '#/components/schemas/RESTExchangeSettings'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        officeName:
          type: string
        isBackedup:
          type: boolean
          nullable: true
        firstBackuptime:
          type: string
          nullable: true
          format: date-time
        lastBackuptime:
          type: string
          nullable: true
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTSharepointSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.Settings.RESTSharepointSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        serverName:
          type: string
        username:
          type: string
        password:
          $ref: '#/components/schemas/SecureString'
        useSSL:
          type: boolean
          nullable: true
        skipCAverification:
          type: boolean
          nullable: true
        skipCommonnameverification:
          type: boolean
          nullable: true
        skipRevocationcheck:
          type: boolean
          nullable: true
        serverPort:
          type: integer
          nullable: true
          format: int32
        grantAccesstositecollections:
          type: boolean
          nullable: true
    RESTExchangeSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.Settings.RESTExchangeSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        serverName:
          type: string
        username:
          type: string
        password:
          $ref: '#/components/schemas/SecureString'
        useSSL:
          type: boolean
          nullable: true
        skipCAverification:
          type: boolean
          nullable: true
        skipCommonnameverification:
          type: boolean
          nullable: true
        skipRevocationcheck:
          type: boolean
          nullable: true
        grantImpersonation:
          type: boolean
          nullable: true
        configureThrottlingpolicy:
          type: boolean
          nullable: true
    RestHybridOrganization:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RestHybridOrganization"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        isTeamsOnline:
          type: boolean
          nullable: true
        configureApplication:
          type: boolean
          nullable: true
        userCode:
          type: string
        newApplicationName:
          type: string
        exchangeOnlineSettings:
          $ref: '#/components/schemas/RESTOffice365ConnectionSettings'
        sharePointOnlineSettings:
          $ref: '#/components/schemas/RESTOffice365ConnectionSettings'
        type:
          $ref: '#/components/schemas/RestOrganizationType'
        region:
          $ref: '#/components/schemas/RestOrganizationRegion'
        isExchangeOnline:
          type: boolean
          nullable: true
        isSharePointOnline:
          type: boolean
          nullable: true
        isSharepoint:
          type: boolean
          nullable: true
        sharepointSettings:
          $ref: '#/components/schemas/RESTSharepointSettings'
        isExchange:
          type: boolean
          nullable: true
        exchangeSettings:
          $ref: '#/components/schemas/RESTExchangeSettings'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        officeName:
          type: string
        isBackedup:
          type: boolean
          nullable: true
        firstBackuptime:
          type: string
          nullable: true
          format: date-time
        lastBackuptime:
          type: string
          nullable: true
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RestOrganizationComposed:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Organization.RESTOrganization"
        unMap: true
        unMapAll: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RestOffice365Organization'
        - $ref: '#/components/schemas/RestOnPremisesOrganization'
        - $ref: '#/components/schemas/RestHybridOrganization'
    RestOrganizationType:
      type: string
      nullable: true
      enum:
        - Office365
        - OnPremises
        - Hybrid
    RestOrganizationRegion:
      type: string
      nullable: true
      enum:
        - Worldwide
        - Germany
        - China
        - USDefence
        - USGovernment
    RESTOrganizationStorageSpaceUsage:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTOrganizationStorageSpaceUsage"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        usedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        localCacheUsedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        objectStorageUsedSpaceBytes:
          type: integer
          nullable: true
          format: int64
          readOnly: true
        isAvailable:
          type: boolean
          readOnly: true
        details:
          type: string
          readOnly: true
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTLoggedInOrganization:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTLoggedInOrganization"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - OnPremises
            - Office365
            - Hybrid
        isBackedup:
          type: boolean
        firstBackuptime:
          type: string
          nullable: true
          format: date-time
        lastBackuptime:
          type: string
          nullable: true
          format: date-time
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTCommonDeviceCodeRequestOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTCommonDeviceCodeRequestOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        targetRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
    RESTDeviceCodeResponse:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTDeviceCodeResponse"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        userCode:
          type: string
          readOnly: true
        verificationUrl:
          type: string
          readOnly: true
        expiresIn:
          type: integer
          format: int64
          readOnly: true
        message:
          type: string
          readOnly: true

# Note: ___Archiver___OrganizationGroupController___ models section start
    RESTGroup:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTGroup"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        name:
          type: string
        managedBy:
          type: string
        site:
          type: string
        type:
          type: string
          nullable: true
          enum:
            - Office365
            - Security
            - Distribution
            - DynamicDistribution
        locationType:
          type: string
          enum:
            - OnPremises
            - Cloud
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationGroupMemberController___ models section start
    RESTGroupMember:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTGroupMember"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        groupId:
          type: string
        name:
          type: string
        login:
          type: string
        type:
          type: string
          enum:
            - Unknown
            - User
            - Group
        isCloud:
          type: boolean
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationLicensingInformationController___ models section start
    RESTOrganizationLicensingInformation:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTOrganizationLicensingInformation"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        licensedUsers:
          type: integer
          format: int32
        newUsers:
          type: integer
          format: int32

# Note: ___Archiver___OrganizationRbacController___ section start
    RESTRbacLoggedInUser:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacLoggedInUser"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        isOperator:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRbacEffectiveScope:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacEffectiveScope"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/RESTRbacUserItem'  
        sites:
          type: array
          items:
            $ref: '#/components/schemas/RESTRbacSiteItem'  
        teams:
          type: array
          items:
            $ref: '#/components/schemas/RESTRbacTeamItem'        

# Note: ___Archiver___OrganizationRetentionExclusionController___ models section start
# Note: this model is defined in GlobalRetentionExclusionController
#  RESTRetentionExclusion:
#    type: object
#    properties:
#      contacts:
#        type: boolean
#      calendar:
#        type: boolean

# Note: ___Archiver___OrganizationSiteController___ models section start
    RESTSite:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTSite"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        name:
          type: string
        isCloud:
          type: boolean
        isPersonal:
          type: boolean
        title:
          type: string
        isAvailable:
          type: boolean
        siteCollectionError:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationTeamController___ models section start
    RESTTeam:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTTeam"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        description:
          type: string
        mail:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationUserController___ models section start
    RESTUser:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTUser"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        name:
          type: string
        type:
          type: string
          nullable: true
          enum:
            - User
            - Shared
            - Public
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___OrganizationUserOneDriveController___ models section start
    RESTOneDrive:
      x-veeam-mapping:
        appType: "Veeam.REST.Representation.RESTOneDrive"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___ProxyController___ models section start
    RESTProxy:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Proxy.RESTProxy"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        type:
          type: string
          enum:
            - Local
            - Domain
            - Workgroup
        useInternetProxy:
          type: boolean
          nullable: true
        internetProxyType:
          type: string
          nullable: true
          enum:
            - FromManagementServer
            - Custom
        internetProxySettings:
          $ref: '#/components/schemas/RESTInternetProxySettings'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        hostName:
          type: string
        description:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        threadsNumber:
          type: integer
          nullable: true
          format: int32
        enableNetworkThrottling:
          type: boolean
          nullable: true
        throttlingValue:
          type: integer
          nullable: true
          format: int64
        throttlingUnit:
          type: string
          nullable: true
          enum:
            - Mbps
            - MBs
            - KBs
        status:
          type: string
          enum:
            - Online
            - Offline
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTInternetProxySettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTInternetProxySettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        hostName:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
    RESTProxyFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTProxyFromClientV5"
        map: true
        mapAll: true
      type: object
      properties:
        useDomainNetwork:
          type: boolean
          nullable: true
        useInternetProxy:
          type: boolean
          nullable: true
        internetProxyType:
          type: string
          nullable: true
          enum:
            - FromManagementServer
            - Custom
        internetProxySettings:
          $ref: '#/components/schemas/RESTInternetProxySettingsFromClient'
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        hostName:
          type: string
        description:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        username:
          type: string
        password:
          $ref: '#/components/schemas/SecureString'
        threadsNumber:
          type: integer
          nullable: true
          format: int32
        enableNetworkThrottling:
          type: boolean
          nullable: true
        throttlingValue:
          type: integer
          nullable: true
          format: int64
        throttlingUnit:
          type: string
          nullable: true
          enum:
            - Mbps
            - MBs
            - KBs
        attachUsedProxy:
          type: boolean
          nullable: true
    RESTInternetProxySettingsFromClient:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTInternetProxySettingsFromClient"
        map: true
        mapAll: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        hostName:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
    RESTRemoveProxyOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRemoveProxyOptions"
        map: true
        mapAll: true
      type: object
      properties:
        force:
          type: boolean
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
    RESTRescanOptions:
      type: object
      properties:
        proxies:
          type: array
          items:
            $ref: '#/components/schemas/RESTItemGuidId'
    RESTItemGuidId:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTItemGuidId"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000

# Note: ___Archiver___RbacController___ models section start
    RESTRbacItemType:
      type: string
      enum:
        - Group
        - User
        - Site
        - Teams
    RESTRbacUserItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacUserItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTRbacItemType'
        user:
          $ref: '#/components/schemas/RESTRbacUser'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRbacUser:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacUser"
        map: true
        unMap: true
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - User
            - SharedMailbox
            - PublicMailbox
    RESTRbacSiteItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacSiteItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTRbacItemType'
        site:
          $ref: '#/components/schemas/RESTRbacSite'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRbacSite:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacSite"
        map: true
        unMap: true
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        title:
          type: string
        parentUrl:
          type: string
        isCloud:
          type: boolean
        isPersonal:
          type: boolean
    RESTRbacTeamItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacTeamItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTRbacItemType'
        team:
          $ref: '#/components/schemas/RESTRbacTeam'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRbacTeam:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacTeam"
        map: true
        unMap: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        mail:
          type: string
        description:
          type: string
    RESTRbacGroupItem:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacGroupItem"
        map: true
        unMap: true
      type: object
      properties:
        type:
          readOnly: true
          $ref: '#/components/schemas/RESTRbacItemType'
        group:
          $ref: '#/components/schemas/RESTRbacGroup'
        id:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRbacGroup:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacGroup"
        map: true
        unMap: true
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        name:
          type: string
        type:
          type: string
          enum:
            - Office365
            - Security
            - Distribution
            - DynamicDistribution
            - Unknown
    RESTRbacItemComposed:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.Rbac.RESTRbacBaseItem"
        unMap: true
        unMapPage: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTRbacUserItem'
        - $ref: '#/components/schemas/RESTRbacSiteItem'
        - $ref: '#/components/schemas/RESTRbacTeamItem'
        - $ref: '#/components/schemas/RESTRbacGroupItem'    

# Note: ___Archiver___ReportsController___ models section start
    RESTLicenseOverviewOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTlicenseOwerviewOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        format:
          type: string
          enum:
            - PDF
            - CSV
        timezone:
          type: string
    RESTStorageConsumptionOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTStorageConsumptionOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        startTime:
          type: string
          nullable: true
          format: date-time
        endTime:
          type: string
          nullable: true
          format: date-time
        format:
          type: string
          nullable: true
          enum:
            - PDF
            - CSV
        timezone:
          type: string
    RESTMailboxProtectionOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTMailboxProtectionOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        organizationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        format:
          type: string
          enum:
            - PDF
            - CSV
        timezone:
          type: string

# Note: ___Archiver___RepositorySynchronizeSessionsController___ models section startoller
    RESTRepositorySynchronizeSession:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRepositorySynchronizeSession"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        repositoryId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        state:
          type: string
          nullable: true
          enum:
            - None
            - Synchronizing
            - Failed
        progressPercent:
          type: integer
          nullable: true
          format: int32
        error:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___RestorePointController___ models section start
    RESTRestorePoint:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestorePoint"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        repositoryId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        backupTime:
          type: string
          format: date-time
        jobId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        organizationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isExchange:
          type: boolean
        isSharePoint:
          type: boolean
        isOneDrive:
          type: boolean
        isTeams:
          type: boolean
        isCopy:
          type: boolean
        isContentFrozen:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true

# Note: ___Archiver___RestoreSessionController___ models section start
    RESTRestoreSession:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestoreSession"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        organization:
          type: string
        type:
          type: string
          enum:
            - Vex
            - Veod
            - Vesp
            - Vet
        creationTime:
          type: string
          format: date-time
        endTime:
          type: string
          nullable: true
          format: date-time
        state:
          type: string
          enum:
            - Working
            - Stopped
        result:
          type: string
          enum:
            - Success
            - Warning
            - Failed
        initiatedBy:
          type: string
        details:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
    RESTDeviceCodeRequestOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTDeviceCodeRequestOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        targetApplicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        targetRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        targetOrganizationName:
          type: string
    RESTExploreOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTExploreOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        dateTime:
          type: string
          nullable: true
          format: date-time
        type:
          type: string
          nullable: true
          enum:
            - Vex
            - Veod
            - Vesp
            - Vet
        showDeleted:
          type: boolean
          nullable: true
        showAllVersions:
          type: boolean
          nullable: true
    RESTOperatorExploreOptions:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTOperatorExploreOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        dateTime:
          type: string
          nullable: true
          format: date-time
        type:
          type: string
          nullable: true
          enum:
            - Vex
            - Veod
            - Vesp
            - Vet
        showDeleted:
          type: boolean
          nullable: true
        showAllVersions:
          type: boolean
          nullable: true
        scope:
          $ref: '#/components/schemas/RESTRbacItemComposed'
          nullable: true

# Note: ___Archiver___RestoreSessionEventController___ models section start
    RESTRestoreSessionEvent:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTRestoreSessionEventV3"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        itemName:
          type: string
        itemType:
          type: string
        itemSizeBytes:
          type: integer
          format: int64
        source:
          type: string
        target:
          type: string
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        type:
          type: string
          enum:
            - None
            - Save
            - Export
            - Send
            - Restore
            - View
        status:
          type: string
          enum:
            - Running
            - Success
            - Warning
            - Failed
            - Cancelled
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          nullable: true
          format: date-time
        duration:
          type: string
        title:
          type: string
        message:
          type: string
        order:
          type: integer
          format: int32
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'

# Note: ___Archiver___SelfServicePortalController___ models section start
    RESTSelfServicePortalSettings:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTSelfServicePortalSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        applicationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        isEnabled:
          type: boolean

# Note: ___Archiver___ServiceInstanceController___ models section start
    RESTServiceInstance:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.RESTServiceInstance"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        installationId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        version:
          type: string

# Note: ___Archiver___VboEmailSettingsController___ models section start
    RESTNotificationEmailSettingsResponse:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.NotificationEmailSettings.RESTNotificationEmailSettingsResponse"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        notifyOnSuccess:
          type: boolean
          nullable: true
        notifyOnWarning:
          type: boolean
          nullable: true
        notifyOnFailure:
          type: boolean
          nullable: true
        supressUntilLastRetry:
          type: boolean
          nullable: true
        attachDetailedReport:
          type: boolean
          nullable: true
        enableNotification:
          type: boolean
          nullable: true
        smtpServer:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
        useSSL:
          type: boolean
          nullable: true
        from:
          type: string
        to:
          type: string
        subject:
          type: string
    RESTNotificationEmailSettingsRequest:
      x-veeam-mapping:
        appType: "Veeam.Archiver.REST.Representation.NotificationEmailSettings.RESTNotificationEmailSettingsRequest"
        map: true
        mapAll: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        notifyOnSuccess:
          type: boolean
          nullable: true
        notifyOnWarning:
          type: boolean
          nullable: true
        notifyOnFailure:
          type: boolean
          nullable: true
        supressUntilLastRetry:
          type: boolean
          nullable: true
        attachDetailedReport:
          type: boolean
          nullable: true
        enableNotification:
          type: boolean
          nullable: true
        smtpServer:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        useAuthentication:
          type: boolean
          nullable: true
        username:
          type: string
        useSSL:
          type: boolean
          nullable: true
        from:
          type: string
        to:
          type: string
        subject:
          type: string

# Note: ___Exchange___ExchangeFolderController___ models section start
    RESTExchangeFolder:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExchangeFolder"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - Journal
            - Task
            - StickyNote
            - Contact
            - Appointment
            - None
        description:
          type: string
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTFoldersRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTFoldersRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        failedFoldersCount:
          type: integer
          format: int64
        exceptions:
          type: array
          items:
            type: string
        createdItemsCount:
          type: integer
          format: int64
        mergedItemsCount:
          type: integer
          format: int64
        failedItemsCount:
          type: integer
          format: int64
        skippedItemsCount:
          type: integer
          format: int64
        cannotContinueError:
          type: string
        warnings:
          type: array
          items:
            type: string
    RESTExportFolderToPst:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExportFolderToPst"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        contentKeyword:
          type: string
        enablePstSizeLimit:
          type: boolean
          nullable: true
        pstSizeLimitBytes:
          type: integer
          nullable: true
          format: int64

# Note: ___Exchange___ExchangeItemController___ models section start
    RESTAppointmentItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTAppointmentItem"
        unMap: true
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/RESTAttachment'
        organizer:
          type: string
        attendees:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        location:
          type: string
        subject:
          type: string
        recurrencePatternFormat:
          type: string
        recurring:
          type: boolean
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTContactGroupItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTContactGroupItem"
        unMap: true
      type: object
      properties:
        name:
          type: string
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTContactItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTContactItem"
        unMap: true
      type: object
      properties:
        address:
          type: string
        businessPhone:
          type: string
        company:
          type: string
        displayAs:
          type: string
        email:
          type: string
        fax:
          type: string
        fileAs:
          type: string
        fullName:
          type: string
        homePhone:
          type: string
        imAddress:
          type: string
        jobTitle:
          type: string
        mobile:
          type: string
        webPage:
          type: string
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTDiscussionItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTDiscussionItem"
        unMap: true
      type: object
      properties:
        from:
          type: string
        postedOn:
          type: string
          format: date-time
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTExchangeMessageItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTExchangeMessageItem"
        unMap: true
      type: object
      properties:
        from:
          type: string
        cc:
          type: string
        bcc:
          type: string
        to:
          type: string
        sent:
          type: string
          format: date-time
        received:
          type: string
          format: date-time
        reminder:
          type: boolean
        subject:
          type: string
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTJournalItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTJournalItem"
        unMap: true
      type: object
      properties:
        startTime:
          type: string
          format: date-time
        duration:
          type: integer
          format: int32
        entryType:
          type: string
        company:
          type: string
        subject:
          type: string
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTStickyNoteItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTStickyNoteItem"
        unMap: true
      type: object
      properties:
        subject:
          type: string
        date:
          type: string
          format: date-time
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTTaskItem:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.Items.RESTTaskItem"
        unMap: true
      type: object
      properties:
        status:
          $ref: '#/components/schemas/RESTTaskItemStatus'
        percentComplete:
          type: number
          format: double
        startDate:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        owner:
          type: string
        subject:
          type: string
        itemClass:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
        id:
          type: string
    RESTTaskItemStatus:
      type: string
      enum:
        - NotStarted
        - InProgress
        - Completed
        - WaitingOnSomeoneElse
        - Deferred
    RESTExchangeItemsComposed:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExchangeItem"
        unMap: true
        unMapPage: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTAppointmentItem'
        - $ref: '#/components/schemas/RESTContactGroupItem'
        - $ref: '#/components/schemas/RESTContactItem'
        - $ref: '#/components/schemas/RESTDiscussionItem'
        - $ref: '#/components/schemas/RESTExchangeMessageItem'
        - $ref: '#/components/schemas/RESTJournalItem'
        - $ref: '#/components/schemas/RESTStickyNoteItem'
        - $ref: '#/components/schemas/RESTTaskItem'
    RESTAttachment:
      x-veeam-mapping:
        appType: "Veeam.Archiver.Exchange.Integration.Search.AttachmentInfo"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        name:
          type: string
        sizeBytes:
          type: integer
          format: int64
    RESTRestoreToOriginalLocation:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTRestoreToOriginalLocation"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        impersonationAccountName:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
    RESTExchangeItemStringId:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExchangeItemStringId"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
    RESTItemsRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTItemsRestoreStatistics"
        unMap: true
        unMapAll: true
      type: object
      properties:
        exceptions:
          type: array
          items:
            type: string
        createdItemsCount:
          type: integer
          format: int64
        mergedItemsCount:
          type: integer
          format: int64
        failedItemsCount:
          type: integer
          format: int64
        skippedItemsCount:
          type: integer
          format: int64
        cannotContinueError:
          type: string
        warnings:
          type: array
          items:
            type: string
    RESTRestoreToDifferentLocation:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTRestoreToDifferentLocation"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        markRestoredAsUnread:
          type: boolean
          nullable: true
        excludeDrafts:
          type: boolean
          nullable: true
        excludeDeletedItems:
          type: boolean
          nullable: true
        excludeInPlaceHoldItems:
          type: boolean
          nullable: true
        excludeLitigationHoldItems:
          type: boolean
          nullable: true
        mailbox:
          type: string
        casServer:
          type: string
        folder:
          type: string
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        officeOrganizationName:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        impersonationAccountName:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
    RESTSeveralItemsExportOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTSeveralItemsExportOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
        enablePstSizeLimit:
          type: boolean
          nullable: true
        pstSizeLimitBytes:
          type: integer
          nullable: true
          format: int64
    RESTSaveToMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTSaveToMsgOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
    RESTSendToDefaultAddressOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTSendToDefaultAddressOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
    RESTSendToDifferentAddressOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTSendToDifferentAddressOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTExportToPstOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExportToPstOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        enablePstSizeLimit:
          type: boolean
          nullable: true
        pstSizeLimitBytes:
          type: integer
          nullable: true
          format: int64
    RESTOperatorRestoreOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTOperatorRestoreOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        changedItems:
          type: boolean
        deletedItems:
          type: boolean
        markRestoredAsUnread:
          type: boolean
        folder:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeItemStringId'
    RESTOperatorRestoreResponse:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTOperatorRestoreResponse"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000

# Note: ___Exchange___ExchangeMailboxController___ models section start
    RESTExchangeMailbox:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTExchangeMailbox"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        email:
          type: string
        isArchive:
          type: boolean
        isPublic:
          type: boolean
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RestBulkRestoreOptions:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RestBulkRestoreOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        casServer:
          type: string
        mailboxes:
          type: array
          items:
            $ref: '#/components/schemas/RESTExchangeMailbox'
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        markRestoredAsUnread:
          type: boolean
          nullable: true
        skipUnresolved:
          type: boolean
          nullable: true
        excludeDrafts:
          type: boolean
          nullable: true
        excludeDeletedItems:
          type: boolean
          nullable: true
        excludeInPlaceHoldItems:
          type: boolean
          nullable: true
        excludeLitigationHoldItems:
          type: boolean
          nullable: true
        office365UserName:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        impersonationAccountName:
          type: string
        office365UserPassword:
          $ref: '#/components/schemas/SecureString'
        domainName:
          type: string
        onPremisesUserName:
          type: string
        onPremisesUserPassword:
          $ref: '#/components/schemas/SecureString'
        recentItemRestorePeriod:
          type: integer
          nullable: true
          format: int32
    RESTBulkRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.BulkRestore.RESTBulkRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        status:
          type: string
          enum:
            - Failed
            - Warning
            - Success
        error:
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/RESTBulkMailboxRestoreStatistics'
    RESTBulkMailboxRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.BulkRestore.RESTBulkMailboxRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        mailbox:
          $ref: '#/components/schemas/RESTExchangeMailbox'
        status:
          type: string
          enum:
            - Failed
            - Warning
            - Success
        error:
          type: string
        details:
          $ref: '#/components/schemas/RESTCommonRestoreStatistics'
    RESTCommonRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTCommonRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        createdItemsCount:
          type: integer
          format: int64
        mergedItemsCount:
          type: integer
          format: int64
        failedItemsCount:
          type: integer
          format: int64
        skippedItemsCount:
          type: integer
          format: int64
        cannotContinueError:
          type: string
        warnings:
          type: array
          items:
            type: string

# Note: ___Exchange___VexEmailSettingsController___ models section start
    RESTSmtpSettings:
      type: object
      properties:
        username:
          type: string
        enableNotification:
          type: boolean
          nullable: true
        server:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        from:
          type: string
        useAuthentication:
          type: boolean
          nullable: true
        useSSL:
          type: boolean
          nullable: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RestSmtpSettingsFromClient:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RestExchangeSmtpSettingsFromClient"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        username:
          type: string
        enableNotification:
          type: boolean
          nullable: true
        server:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        from:
          type: string
        useAuthentication:
          type: boolean
          nullable: true
        useSSL:
          type: boolean
          nullable: true
        _links:
          $ref: '#/components/schemas/RESTLinkHALDictionary'
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTSendTestOption:
      x-veeam-mapping:
        appType: "Veeam.Exchange.REST.Representation.RESTSendTestOption"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        email:
          type: string

# Note: ___SharePoint___OneDriveController___ models section start
    RESTCopyToFolder:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.CopyTo.RESTCopyToFolder"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        onedrive:
          $ref: '#/components/schemas/RESTOneDrive'
        folder:
          type: string
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTItemRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTItemRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        totalItemsCount:
          type: integer
          format: int64
        restoredItemsCount:
          type: integer
          format: int32
        failedItemsCount:
          type: integer
          format: int32
        skippedItemsByErrorCount:
          type: integer
          format: int64
        skippedItemsByNoChangesCount:
          type: integer
          format: int64
        failedRestrictionsCount:
          type: integer
          nullable: true
          format: int64
        restoreIssues:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestoreObject'
    RESTRestoreObject:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTRestoreObject"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        path:
          type: string
        title:
          type: string
        type:
          type: string
          enum:
            - Item
            - List
            - Site
        warnings:
          type: array
          items:
            type: string
        error:
          type: string
    RESTSharePointSendAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.REST.Engine.Representation.RESTSendAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTRestoreToOriginal:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RestoreToOriginal.RESTRestoreToOriginalV3"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documentAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Keep
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTBulkRestoreConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RestoreToOriginal.RESTBulkRestoreConfigV3"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documentAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Keep
        skipUnresolved:
          type: boolean
          nullable: true
        oneDrives:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDrive'
        officeUsername:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        officeUserpassword:
          $ref: '#/components/schemas/SecureString'
        onpremisesUsername:
          type: string
        onpremisesUserpassword:
          $ref: '#/components/schemas/SecureString'
    RESTSharePointBulkRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTBulkRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        status:
          type: string
          enum:
            - Failed
            - Warning
            - Success
        details:
          type: array
          items:
            $ref: '#/components/schemas/RESTExtendedCommonStatistic'
        error:
          type: string
    RESTExtendedCommonStatistic:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTExtendedCommonStatistic"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        oneDrive:
          $ref: '#/components/schemas/RESTOneDrive'
        status:
          type: string
          enum:
            - Failed
            - Warning
            - Success
        error:
          type: string
        details:
          $ref: '#/components/schemas/RESTSharePointCommonRestoreStatistics'
    RESTSharePointCommonRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTCommonRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        failedRestrictionsCount:
          type: integer
          nullable: true
          format: int64
        restoreIssues:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestoreObject'
    RESTOneDriveDocument:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RESTOneDriveDocument"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - createdBy
        - creationTime
        - id
        - modificationTime
        - modifiedBy
        - name
        - sizeBytes
      type: object
      properties:
        sizeBytes:
          type: integer
          format: int64
        inheritedPermissions:
          type: boolean
        version:
          type: string
        id:
          type: string
        versionId:
          type: integer
          nullable: true
          format: int32
        name:
          type: string
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        modifiedBy:
          type: string
        modificationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTItemComposed:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.RESTItemBase"
        unMap: true
        unMapPage: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTOneDriveDocument'
        - $ref: '#/components/schemas/RESTOneDriveFolder'
        - $ref: '#/components/schemas/RESTSharePointDocument'
        - $ref: '#/components/schemas/RESTSharePointFolder'
        - $ref: '#/components/schemas/RESTSharePointItem'

# Note: ___SharePoint___OneDriveDocumentController___ models section start
    RESTRestoreToOriginalDocuments:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RestoreToOriginal.RESTRestoreToOriginalDocumentsV3"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveDocument'
        documentAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Keep
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RestCopyToDocuments:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.CopyTo.RestCopyToDocuments"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveDocument'
        onedrive:
          $ref: '#/components/schemas/RESTOneDrive'
        folder:
          type: string
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTSendDocumentsAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.Send.RESTSendDocumentsAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveDocument'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTSaveDocumentsOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.Save.RESTSaveDocumentsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveDocument'
    RESTCopyToDocument:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.CopyTo.RESTCopyToDocument"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        onedrive:
          $ref: '#/components/schemas/RESTOneDrive'
        folder:
          type: string
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTSaveOneDriveDocumentOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.Save.RESTSaveOneDriveDocumentOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        asZip:
          type: boolean
          nullable: true
    RESTSendAsMsgOptionsV6:
      x-veeam-mapping:
        appType: "Veeam.REST.Engine.Representation.RESTSendAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTOperatorRestoreToOriginalOneDriveDocuments:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RestoreToOriginal.RESTOperatorRestoreToOriginalOneDriveDocuments"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - documentAction
        - documents
      type: object
      properties:
        documentAction:
          type: string
          enum:
            - Overwrite
            - Keep
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveDocument'
    RESTOperatorRestoreSessionResponse:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.RESTOperatorRestoreSessionResponse"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000

# Note: ___SharePoint___OneDriveFolderController___ models section start
    RESTOneDriveFolder:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RESTOneDriveFolder"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - createdBy
        - creationTime
        - id
        - modificationTime
        - modifiedBy
        - name
      type: object
      properties:
        version:
          type: string
        id:
          type: string
        versionId:
          type: integer
          nullable: true
          format: int32
        name:
          type: string
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        modifiedBy:
          type: string
        modificationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreToOriginalFolders:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.RestoreToOriginal.RESTRestoreToOriginalFoldersV3"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveFolder'
        documentAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Keep
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTCopyToFolders:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.CopyTo.RESTCopyToFolders"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveFolder'
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        onedrive:
          $ref: '#/components/schemas/RESTOneDrive'
        folder:
          type: string
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTSendFoldersAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.OneDrive.Send.RESTSendFoldersAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTOneDriveFolder'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string

# Note: ___SharePoint___SharePointAttachmentController___ models section start
    RESTSharePointAttachment:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointAttachment"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        sizeBytes:
          type: integer
          format: int64
        id:
          type: string
        name:
          type: string
        url:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTSaveAttachmentsOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Save.RESTSaveAttachmentsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointAttachment'
    RESTSendAttachmentsAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Send.RESTSendAttachmentsAsMsgOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointAttachment'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string

# Note: ___SharePoint___SharePointDocumentController___ models section start
    RESTSharePointDocument:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointDocument"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
        - name
        - createdBy
        - creationTime
        - modifiedBy
        - modificationTime
      type: object
      properties:
        sizeBytes:
          type: integer
          format: int64
        version:
          type: string
        versionId:
          type: integer
          nullable: true
          format: int32
        id:
          type: string
        name:
          type: string
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        modifiedBy:
          type: string
        modificationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreDocumentsConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreDocumentsConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointDocument'
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTRestoreItemConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreItemConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTSharePointSaveDocumentsOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Save.RESTSaveDocumentsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointDocument'
    RESTSaveSharePointDocumentOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Save.RESTSaveSharePointDocumentOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        asZip:
          type: boolean
          nullable: true
    RESTSharePointSendDocumentsAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Send.RESTSendDocumentsAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointDocument'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTOperatorRestoreSharePointDocumentsConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTOperatorRestoreSharePointDocumentsConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - documents
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointDocument'
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreDeletedItems:
          type: boolean
          nullable: true

# Note: ___SharePoint___SharePointFolderController___ models section start
    RESTSharePointFolder:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointFolder"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        type:
          $ref: '#/components/schemas/RESTSharePointFolderType'
        id:
          type: string
        version:
          type: string
        versionId:
          type: integer
          nullable: true
          format: int32
        name:
          type: string
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        modifiedBy:
          type: string
        modificationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTSharePointFolderType:
      type: string
      enum:
        - ListFolder
        - LibraryFolder
    RESTRestoreFoldersConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreFoldersConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointFolder'
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTSaveFoldersOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Save.RESTSaveFoldersOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointFolder'
    RESTSharePointSendFoldersAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Send.RESTSendFoldersAsMsgOptionsV6"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        skipItemChecks:
          type: boolean
        folders:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointFolder'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTSharePointItemComposed:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointItemBase"
        unMap: true
        unMapPage: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTSharePointDocument'
        - $ref: '#/components/schemas/RESTSharePointItem'

# Note: ___SharePoint___SharePointItemController___ models section start
    RESTSharePointItem:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointItem"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
        - name
        - createdBy
        - creationTime
        - modifiedBy
        - modificationTime
      type: object
      properties:
        title:
          type: string
        version:
          type: string
        versionId:
          type: integer
          nullable: true
          format: int32
        id:
          type: string
        name:
          type: string
        createdBy:
          type: string
        creationTime:
          type: string
          format: date-time
        modifiedBy:
          type: string
        modificationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreItemsConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreItemsConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointItem'
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTOperatorRestoreSharePointItemsConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTOperatorRestoreSharePointItemsConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - items
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/RESTSharePointItem'
        list:
          type: string
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreDeletedItems:
          type: boolean
          nullable: true

# Note: ___SharePoint___SharePointLibraryController___ models section start
    RESTSharePointLibrary:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointLibrary"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        description:
          type: string
        creationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreListConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreListConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        list:
          type: string
        restoreListViews:
          type: boolean
          nullable: true
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTListRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTListRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        restoredListsCount:
          type: integer
          format: int32
        failedListsCount:
          type: integer
          format: int32
        totalItemsCount:
          type: integer
          format: int64
        restoredItemsCount:
          type: integer
          format: int32
        failedItemsCount:
          type: integer
          format: int32
        skippedItemsByErrorCount:
          type: integer
          format: int64
        skippedItemsByNoChangesCount:
          type: integer
          format: int64
        failedRestrictionsCount:
          type: integer
          nullable: true
          format: int64
        restoreIssues:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestoreObject'

# Note: ___SharePoint___SharePointListController___ models section start
    RESTSharePointList:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointList"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        description:
          type: string
        creationTime:
          type: string
          format: date-time
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTSharePointSite:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.RESTSharePointSite"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        url:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreSiteConfig:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.SharePoint.Restore.RESTRestoreSiteConfig"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        impersonationAccountName:
          type: string
        alias:
          type: string
        restoreListViews:
          type: boolean
          nullable: true
        changedItems:
          type: boolean
          nullable: true
        deletedItems:
          type: boolean
          nullable: true
        restoreSubsites:
          type: boolean
          nullable: true
        restoreMasterPages:
          type: boolean
          nullable: true
        restorePermissions:
          type: boolean
          nullable: true
        sendSharedLinksNotification:
          type: boolean
          nullable: true
        documentVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        documentLastVersionAction:
          type: string
          nullable: true
          enum:
            - Overwrite
            - Merge
        siteURL:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        applicationCertificate:
          type: string
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
        officeRegion:
          type: string
          nullable: true
          enum:
            - Worldwide
            - Germany
            - China
            - USDefence
            - USGovernment
        organizationName:
          type: string
    RESTWebRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.Restore.Statistics.RESTWebRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        restoredListsCount:
          type: integer
          format: int32
        failedListsCount:
          type: integer
          format: int32
        restoredWebsCount:
          type: integer
          format: int32
        failedWebsCount:
          type: integer
          format: int32
        failedRestrictionsCount:
          type: integer
          nullable: true
          format: int64
        restoreIssues:
          type: array
          items:
            $ref: '#/components/schemas/RESTRestoreObject'

# Note: ___SharePoint___VeodEmailSettingsController___ models section start
    RESTSharePointSmtpSettings:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.RESTSmtpSettings"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        enableNotification:
          type: boolean
        server:
          type: string
        port:
          type: integer
          format: int32
        from:
          type: string
        useAuthentication:
          type: boolean
        useSSL:
          type: boolean
        username:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTSharePointSmtpSettingsFromClient:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.RESTSharePointSmtpSettingsFromClient"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        enableNotification:
          type: boolean
          nullable: true
        server:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        from:
          type: string
        useAuthentication:
          type: boolean
          nullable: true
        useSSL:
          type: boolean
          nullable: true
        username:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true
    RESTSendTestOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.RESTSendTestOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        email:
          type: string

# Note: ___SharePoint___VespEmailSettingsController___ models section start

# Note: ___Teams___TeamsChannelController___ models section start
    RESTTeamsChannel:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RESTTeamsChannel"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTTeamsSearchOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTTeamsSearchOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - query
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - Tabs
            - Files
            - Posts
        query:
          type: string
    RESTAttachInfo:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RESTAttachInfo"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        name:
          type: string
        longFileName:
          type: string
        url:
          type: string
    RESTRestoreChannelOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreChannelOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - restoreChangedItems
        - restoreMissingItems
      type: object
      properties:
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreMissingItems:
          type: boolean
          nullable: true
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
    RESTRestoreStatistics:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Restore.RESTRestoreStatistics"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        totalItemsCount:
          type: integer
          format: int32
          readOnly: true
        restoredItemsCount:
          type: integer
          format: int32
          readOnly: true
        failedItemsCount:
          type: integer
          format: int32
          readOnly: true
        skippedItemsCount:
          type: integer
          format: int32
          readOnly: true
        restoreIssues:
          type: array
          readOnly: true
          items:
            $ref: '#/components/schemas/RESTSummaryItem'
    RESTSummaryItem:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Restore.RESTSummaryItem"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        type:
          type: string
          readOnly: true
          enum:
            - Team
            - PostsTab
            - Post
            - TeamApp
            - Channel
            - Tab
            - File
        warnings:
          type: array
          readOnly: true
          items:
            type: string
        error:
          type: string
          readOnly: true
    RESTChannelEntity:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RestChannelEntityBase"
        unMap: true
        unMapPage: true
      type: object
      x-anyOf:
        - $ref: '#/components/schemas/RESTTeamsFile'
        - $ref: '#/components/schemas/RESTTeamsPost'
        - $ref: '#/components/schemas/RestTeamsTab'

# Note: ___Teams___TeamsFileController___ models section start
    RESTTeamsFile:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RESTTeamsFile"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        name:
          type: string
        sizeBytes:
          type: integer
          format: int64
        version:
          type: integer
          format: int32
        modified:
          type: string
          format: date-time
        modifiedBy:
          type: string
        fileType: # Note: renamed from 'type'
          type: string
          enum:
            - File
            - Folder
          x-ms-enum:
            name: RESTFileType
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTTeamsPost:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RESTTeamsPost"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        RESTTeamsPostId: # Note: renamed from 'id'
          type: integer
          format: int64
        isImportant:
          type: boolean
        author:
          type: string
        subject:
          type: string
        createdTime:
          type: string
          format: date-time
        lastModifiedTime:
          type: string
          format: date-time
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/RESTAttachInfo'
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RestTeamsTab:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RestTeamsTab"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        contentUrl:
          type: string
        type:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTFilesSaveOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTFilesSaveOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        channelId:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsFile'
    RESTFileSaveOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTFileSaveOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        asZip:
          type: boolean
    RESTFilesSendOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTFilesSendOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        channelId:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsFile'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTSendAsMsgOptions:
      x-veeam-mapping:
        appType: "Veeam.REST.Engine.Representation.RESTSendAsMsgOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string
    RESTRestoreFilesOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreFilesOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - fileVersion
        - restoreChangedItems
        - restoreMissingItems
      type: object
      properties:
        channelId:
          type: string
        files:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsFile'
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreMissingItems:
          type: boolean
          nullable: true
        fileVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
    RESTRestoreFileOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreFileOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - fileVersion
        - restoreChangedItems
        - restoreMissingItems
      type: object
      properties:
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreMissingItems:
          type: boolean
          nullable: true
        fileVersion:
          type: string
          nullable: true
          enum:
            - All
            - Last
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'

# Note: ___Teams___TeamsPostController___ models section start
    RESTSavePostsOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTSavePostsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        channelId:
          type: string
        posts:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsPost'
    RESTRestorePostsOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestorePostsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - channelId
      type: object
      properties:
        channelId:
          type: string
        from:
          type: string
          nullable: true
          format: date-time
        to:
          type: string
          nullable: true
          format: date-time
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
    RESTExportOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.RESTExportOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        posts:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsPost'
        channelId:
          type: string
        from:
          type: string
          nullable: true
          format: date-time
        to:
          type: string
          nullable: true
          format: date-time
    RESTSendPostsOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTSendPostsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        channelId:
          type: string
        posts:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsPost'
        from:
          type: string
        to:
          type: string
        subject:
          type: string
        text:
          type: string

# Note: ___Teams___TeamsTabController___ models section start
    RESTRestoreTabsOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreTabsOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - restoreChangedTabs
        - restoreMissingTabs
      type: object
      properties:
        tabs:
          type: array
          items:
            $ref: '#/components/schemas/RestTeamsTab'
        restoreChangedTabs:
          type: boolean
        restoreMissingTabs:
          type: boolean
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'
    RESTRestoreTabOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreTabOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - restoreChangedTabs
        - restoreMissingTabs
      type: object
      properties:
        restoreChangedTabs:
          type: boolean
        restoreMissingTabs:
          type: boolean
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'

# Note: ___Teams___TeamsTeamController___ models section start
    RESTTeamsTeam:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.Teams.RESTTeamsTeam"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        displayName:
          type: string
        description:
          type: string
        groupEmail:
          type: string
        alias:
          type: string
        privacy:
          type: string
          enum:
            - Public
            - Private
        isArchived:
          type: boolean
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
    RESTRestoreTeamOptions:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.ActionOptions.RESTRestoreTeamOptions"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      required:
        - restoreChangedItems
        - restoreMembers
        - restoreMissingItems
        - restoreSettings
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/RESTTeamsTeam'
        restoreChangedItems:
          type: boolean
          nullable: true
        restoreMissingItems:
          type: boolean
          nullable: true
        restoreMembers:
          type: boolean
          nullable: true
        restoreSettings:
          type: boolean
          nullable: true
        impersonationAccountName:
          type: string
        userCode:
          type: string
        applicationId:
          type: string
          nullable: true
          format: uuid
          example: 00000000-0000-0000-0000-000000000000
        applicationCertificate:
          type: string
        applicationCertificatePassword:
          $ref: '#/components/schemas/SecureString'
        userName:
          type: string
        userPassword:
          $ref: '#/components/schemas/SecureString'

# Note: ___Teams___VetEmailSettingsController___ models section start
    RESTTeamsSmtpSettingsFromClient:
      x-veeam-mapping:
        appType: "Veeam.Teams.REST.Representation.RESTTeamsSmtpSettingsFromClient"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
        unMapPage: true
      type: object
      properties:
        userPassword:
          $ref: '#/components/schemas/SecureString'
        enableNotification:
          type: boolean
          nullable: true
        server:
          type: string
        port:
          type: integer
          nullable: true
          format: int32
        from:
          type: string
        useAuthentication:
          type: boolean
          nullable: true
        useSSL:
          type: boolean
          nullable: true
        username:
          type: string
        _links:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTLinkHAL'
          readOnly: true
        _actions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/RESTAction'
          readOnly: true

# Note: Common models section start
    RESTAction:
      x-veeam-mapping:
        appType: "Veeam.REST.Representation.RESTAction"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        uri:
          type: string
        method:
          type: string
    SecureString:
      type: string
      format: password
    RESTLinkHALDictionary:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RESTLinkHAL'
    RESTLinkHAL:
      x-veeam-mapping:
        appType: "Veeam.REST.Representation.RESTLinkHAL"
        map: true
        unMap: true
        mapAll: true
        unMapAll: true
      type: object
      properties:
        href:
          type: string
    RESTExceptionInfo:
      type: object
      properties:
        message:
          type: string
        stackTrace:
          type: string
    RESTSearchOptions:
      type: object
      properties:
        query:
          type: string
    RESTVESPSearchOptions:
      x-veeam-mapping:
        appType: "Veeam.SharePoint.REST.Representation.RESTVESPSearchOptions"
        map: true
        unMap: true
      type: object
      properties:
        query:
          type: string
  securitySchemes:
    apiKey:
      type: apiKey
      description: API Key Authentication
      name: Authorization
      in: header
